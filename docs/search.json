[
  {
    "objectID": "part02.html",
    "href": "part02.html",
    "title": "جمع‌آوری داده شرکت‌ها",
    "section": "",
    "text": "در کنار طراحی پرسش‌نامه، لازم بود بدانیم شاغلان در حوزه اقتصاد دیجیتال کجا کار می‌کنند تا بتوانیم از میان آنان جمعیتی نمونه بگیریم و پرسش‌نامه را برایشان بفرستیم تا نتایج تحلیل‌های برآمده از آن قابل تعمیم باشد. مشکل از همان ابتدا شروع شد. آمار دقیقی از تعداد شاغلان حوزه اقتصاد دیجیتال وجود ندارد. یعنی مثلا مرکز آمار ایران یا اتاق بازرگانی، صنایع و معادن و کشاورزی استان تهران یا نظام صنفی رایانه‌ای استان تهران آمار درست و قابل اتکایی از تعداد شاغلان این حوزه ندارند. آمارهای برخی شرکت‌ها مانند گزارش نظرسنجی جامعه برنامه‌نویسان ایران ۱۴۰۳ که توسط کوئرا منتشر شده‌اند آنقدر از نظر علمی ایراد دارند که نه تنها قابل اعتماد نیستند، که بی‌معنا، بی‌ارزش و گمراه‌کننده هستند. خود این مساله، علی رغم این که سال‌ها طرح‌های مختلفی برای آمارگیری از شرکت‌های حوزه فناوری اطلاعات وجود داشته و با موفقیت اجرا شده است (مانند طرح‌های شورای عالی انفورماتیک کشور و تکفا)، جای بررسی علمی و دقیق‌تر دارد که باید در جای دیگری بررسی گردد. راهی که ما در پیش گرفتیم استخراج داده از شرکت‌های کاریابی آنلاین بود؛ به این صورت که ابتدا شرکت‌هایی را بیابیم که در این سایت‌ها ثبت شده‌اند و در تهران هستند. سپس بر اساس تعداد کارمندانی که خود اعلام کرده‌اند، تخمینی از جمعیت شاغلان اقتصاد دیجیتال به دست آوریم، جمعیت نمونه را انتخاب کنیم و به سراغشان رویم. به نظرمان رسید سایت ایران تلنت برای این کار مناسب باشد.\n\n\nبا برنامه‌ای پایتونی داده‌های ۹۵۵ شرکت را از سایت ایران تلنت استخراج کردیم. از میان آنان ۷۱۳ شرکت در تهران بودند. پراکندگی این شرکت‌ها را بر اساس دسته‌بندی تعداد کارمندان، که در سایت ارائه شده است، در جدول زیر می‌بینید:\n\n\n\n\n\n\n\n\n\n\nتعداد کارمند\nتعداد شرکت\nدرصد\n\n\n\n\n1-9\n59\n8.27\n\n\n10-49\n340\n47.69\n\n\n50-99\n158\n22.16\n\n\n100-499\n121\n16.97\n\n\n500 به بالا\n35\n4.91\n\n\n\n\n\n\n\n\n\nبر اساس تعداد شرکت‌ها و بازه‌ای که برای تعداد کارمندانشان ذکر کرده‌اند،‌می‌توان تخمینی از جمعیت شاغلان زد. بنابراین بیشترین تعداد شاغلان حوزه اقتصاد دیجیتال در استان تهران، طبق داده‌های ایران تلنت، ۱۶۳ هزار است. همین طور تنها ۳۵ شرکت در تهران هستند که بیش از ۵۰۰ کارمند دارند. به نظر می‌آید که این تخمین درست نباشد.\n\n\n\n\n\nتخمین جمعیت\n\n\n\nMin\nMid\nMax\n\n\nجمعیت\n41,077\n93,645\n163,212\n\n\nدسته‌بندی/شرکت‌ها\nتعداد کارمند\nتعداد کل کارمندان\nتعداد کارمند\nتعداد کل کارمندان\nتعداد کارمند\nتعداد کل کارمندان\n\n\n1-9\n3\n177\n5\n295\n9\n531\n\n\n10-49\n10\n3,400\n30\n10,200\n49\n16,660\n\n\n50-99\n50\n7,900\n75\n11,850\n99\n15,642\n\n\n100-499\n100\n12,100\n300\n36,300\n499\n60,379\n\n\n500 به بالا\n500\n17,500\n1000\n35,000\n2000\n70,000\n\n\n\n\nمشکل این جاست که تعداد شرکت‌های فناوری اطلاعات در تهران علی‌الاصول بیش از ۷۱۳ تاست. بنابراین بایستی فهرست را از جایی دیگر پیدا کرد.\n\n\n\nنامه‌نگاری‌های اسفند ماه با اتاق بازرگانی، صنایع، معادن و کشاورزی تهران برای دست‌یافتن به فهرستی از شرکت‌های فعال حوزه فناوری اطلاعات راه به جایی نبرد. تا نیمه فروردین ماه نیز این اتاق گرفتار تعطیلات سال نو بود. در نهایت، مجاهدت در راه علم به ثمر نشست و فهرستی شامل ۴۴ شرکت دانش‌بنیان برایمان ارسال شد که هر چند فهرستی جالب بود اما در وهله اول ارتباطی با حوزه فناوری اطلاعات نداشت (۱۱ مورد از شرکت‌ها در صنایع غیرمرتبط بودند، یعنی ۲۵ درصد داده نامرتبط). در وهله دوم بر ما پوشیده بود که این فهرست چگونه انتخاب شده است و این شرکت‌ها بر چه مبنایی به عنوان جمعیت نمونه (اگر به عنوان جمعیت نمونه) به ما معرفی شده‌اند. در وهله سوم، این تعداد شرکت به لحاظ آماری ارزشی ندارد زیرا ما در لحظه دریافت این فهرست، با فهرستی که از وبسایت جاب‌ویژن ساخته بودیم کار را پیش برده بودیم که ۱۹۰ برابر این فهرست شرکت داشت و جمعیتی حدود ۵۰۰ هزار نفر در اختیارمان می‌گذاشت. بنابراین این فهرست را کنار گذاشتیم.\n\n\n\nوبسایت جاب‌ویژن از داده‌هایی که نمایش می‌دهد به شدت محافظت می‌کند و تلاش ما برای استخراج داده‌های مورد نیازمان از آن، بیشتر شبیه تلاش تیم‌های فناوری اطلاعات بود تا تیمی متشکل از جامعه‌شناسان. به هر حال داده‌هایی را که می خواستیم به دست آوردیم و جاب‌ویژنی‌ها را با ترافیک سایتشان تنها گذاشتیم تا گزارش سالانه‌شان را تهیه کنند. فهرست اولیه شامل ۱۰۷۱۲ شرکت بود که در نتیجه جستجوی خود وبسایت هم ظاهر می‌شوند. اما بررسی‌های ما نشان داد که تنها ۸۴۵۴ از آن‌ها یک بار آمده‌اند و باقی ۲۲۵۸ تا، بیش از یک بار در فهرست نتایج جاب‌ویژن و آمارهایش تکرار شده‌اند. به عبارت دیگر، تعداد نتایجی که در جستجوی وبسایت نشان داده می‌شود، ۲۱ درصد خطا دارد و این خطا نه از نمایش در سایت، که از خطای ذخیره‌سازی در سمت سرور سایت است. حداقل در مورد استان تهران ۲۱ درصد شرکت‌ها تکراری هستند.\nبا حذف این شرکت‌های تکراری، دانشگاه‌ها، شرکت‌های دولتی، وزارت‌خانه‌ها، سازمان‌های دولتی، ارگان‌های دولتی، ستادها، شهرداری‌ها، چون مخاطب کارفرمای پروژه نبودند، در نهایت کار را با ۸۳۶۱ شرکت ادامه دادیم.\n\n\n\n\n\n\n\n\n\n\nتعداد کارمندان\nتعداد\nدرصد\n\n\n\n\nزیر 10 نفر\n3300\n39.469\n\n\n11 تا 50 نفر\n3886\n46.478\n\n\n51 تا 200 نفر\n919\n10.992\n\n\n201 تا 500 نفر\n162\n1.938\n\n\n501 تا 1000 نفر\n55\n0.658\n\n\n1001 تا 5000 نفر\n30\n0.359\n\n\nبیش از 5000 نفر\n9\n0.108\n\n\nمجموع\n8361\n\n\n\n\n\n\n\n\n\nاگر بخواهیم تخمینی از جمعیت شاغلان حوزه فناوری اطلاعات بر اساس این داده‌ها داشته باشیم، جدولی مانند جدول زیر خواهیم داشت:\n\n\n\n\n\n\n\n\n\n\nتخمین جمعیت\nMin\nMid\nMax\n\n\n\n\nتعداد کارمندان\nیک شرکت\nکل\nیک شرکت\nکل\nیک شرکت\nکل\n\n\nزیر 10 نفر\n3\n9,900\n5\n16,500\n10\n33,000\n\n\n11 تا 50 نفر\n11\n42,746\n25\n97,150\n50\n194,300\n\n\n51 تا 200 نفر\n51\n46,869\n125\n114,875\n200\n183,800\n\n\n201 تا 500 نفر\n201\n32,562\n350\n56,700\n500\n81,000\n\n\n501 تا 1000 نفر\n501\n27,555\n750\n41,250\n1,000\n55,000\n\n\n1001 تا 5000 نفر\n1,001\n30,030\n3,000\n90,000\n5,000\n150,000\n\n\nبیش از 5000 نفر\n5,000\n45,000\n7,000\n63,000\n10,000\n90,000\n\n\nکل\n234,662\n479,475\n787,100\n\n\n\n\n\n\n\n\n\nاین جدول به ما نشان می‌دهد که اگر بخواهیم جمعیت را بر حسب کمترین تعداد افراد ذکر شده در دسته‌بندی حساب کنیم، ۲۳۴ هزار نفر خواهند بود. اگر بر حسب بیشترین مقدار محاسبه کنیم، با ۷۸۷ هزار نفر سر و کار خواهیم داشت. اما از آن جایی که شاهدی بر این مدعا نداریم که تمامی شرکت‌هایی که با آن‌ها روبرو خواهیم بود، در دو سط این طیف‌ها قرار خواهند گرفت، تخمین جمعیت را بر اساس میانه این بازه‌های جمعیتی محاسبه می‌کنیم و جمعیت شاغلان حوزه فناوری اطلاعات در استان تهران را ۴۷۹۴۷۵ نفر شاغل در ۸۳۶۱ شرکت در نظر می‌گیریم."
  },
  {
    "objectID": "part02.html#ایران-تلنت",
    "href": "part02.html#ایران-تلنت",
    "title": "جمع‌آوری داده شرکت‌ها",
    "section": "",
    "text": "با برنامه‌ای پایتونی داده‌های ۹۵۵ شرکت را از سایت ایران تلنت استخراج کردیم. از میان آنان ۷۱۳ شرکت در تهران بودند. پراکندگی این شرکت‌ها را بر اساس دسته‌بندی تعداد کارمندان، که در سایت ارائه شده است، در جدول زیر می‌بینید:\n\n\n\n\n\n\n\n\n\n\nتعداد کارمند\nتعداد شرکت\nدرصد\n\n\n\n\n1-9\n59\n8.27\n\n\n10-49\n340\n47.69\n\n\n50-99\n158\n22.16\n\n\n100-499\n121\n16.97\n\n\n500 به بالا\n35\n4.91\n\n\n\n\n\n\n\n\n\nبر اساس تعداد شرکت‌ها و بازه‌ای که برای تعداد کارمندانشان ذکر کرده‌اند،‌می‌توان تخمینی از جمعیت شاغلان زد. بنابراین بیشترین تعداد شاغلان حوزه اقتصاد دیجیتال در استان تهران، طبق داده‌های ایران تلنت، ۱۶۳ هزار است. همین طور تنها ۳۵ شرکت در تهران هستند که بیش از ۵۰۰ کارمند دارند. به نظر می‌آید که این تخمین درست نباشد.\n\n\n\n\n\nتخمین جمعیت\n\n\n\nMin\nMid\nMax\n\n\nجمعیت\n41,077\n93,645\n163,212\n\n\nدسته‌بندی/شرکت‌ها\nتعداد کارمند\nتعداد کل کارمندان\nتعداد کارمند\nتعداد کل کارمندان\nتعداد کارمند\nتعداد کل کارمندان\n\n\n1-9\n3\n177\n5\n295\n9\n531\n\n\n10-49\n10\n3,400\n30\n10,200\n49\n16,660\n\n\n50-99\n50\n7,900\n75\n11,850\n99\n15,642\n\n\n100-499\n100\n12,100\n300\n36,300\n499\n60,379\n\n\n500 به بالا\n500\n17,500\n1000\n35,000\n2000\n70,000\n\n\n\n\nمشکل این جاست که تعداد شرکت‌های فناوری اطلاعات در تهران علی‌الاصول بیش از ۷۱۳ تاست. بنابراین بایستی فهرست را از جایی دیگر پیدا کرد."
  },
  {
    "objectID": "part02.html#اتاق-بازرگانی-صنایع-معادن-و-کشاورزی-تهران",
    "href": "part02.html#اتاق-بازرگانی-صنایع-معادن-و-کشاورزی-تهران",
    "title": "جمع‌آوری داده شرکت‌ها",
    "section": "",
    "text": "نامه‌نگاری‌های اسفند ماه با اتاق بازرگانی، صنایع، معادن و کشاورزی تهران برای دست‌یافتن به فهرستی از شرکت‌های فعال حوزه فناوری اطلاعات راه به جایی نبرد. تا نیمه فروردین ماه نیز این اتاق گرفتار تعطیلات سال نو بود. در نهایت، مجاهدت در راه علم به ثمر نشست و فهرستی شامل ۴۴ شرکت دانش‌بنیان برایمان ارسال شد که هر چند فهرستی جالب بود اما در وهله اول ارتباطی با حوزه فناوری اطلاعات نداشت (۱۱ مورد از شرکت‌ها در صنایع غیرمرتبط بودند، یعنی ۲۵ درصد داده نامرتبط). در وهله دوم بر ما پوشیده بود که این فهرست چگونه انتخاب شده است و این شرکت‌ها بر چه مبنایی به عنوان جمعیت نمونه (اگر به عنوان جمعیت نمونه) به ما معرفی شده‌اند. در وهله سوم، این تعداد شرکت به لحاظ آماری ارزشی ندارد زیرا ما در لحظه دریافت این فهرست، با فهرستی که از وبسایت جاب‌ویژن ساخته بودیم کار را پیش برده بودیم که ۱۹۰ برابر این فهرست شرکت داشت و جمعیتی حدود ۵۰۰ هزار نفر در اختیارمان می‌گذاشت. بنابراین این فهرست را کنار گذاشتیم."
  },
  {
    "objectID": "part02.html#جابویژن",
    "href": "part02.html#جابویژن",
    "title": "جمع‌آوری داده شرکت‌ها",
    "section": "",
    "text": "وبسایت جاب‌ویژن از داده‌هایی که نمایش می‌دهد به شدت محافظت می‌کند و تلاش ما برای استخراج داده‌های مورد نیازمان از آن، بیشتر شبیه تلاش تیم‌های فناوری اطلاعات بود تا تیمی متشکل از جامعه‌شناسان. به هر حال داده‌هایی را که می خواستیم به دست آوردیم و جاب‌ویژنی‌ها را با ترافیک سایتشان تنها گذاشتیم تا گزارش سالانه‌شان را تهیه کنند. فهرست اولیه شامل ۱۰۷۱۲ شرکت بود که در نتیجه جستجوی خود وبسایت هم ظاهر می‌شوند. اما بررسی‌های ما نشان داد که تنها ۸۴۵۴ از آن‌ها یک بار آمده‌اند و باقی ۲۲۵۸ تا، بیش از یک بار در فهرست نتایج جاب‌ویژن و آمارهایش تکرار شده‌اند. به عبارت دیگر، تعداد نتایجی که در جستجوی وبسایت نشان داده می‌شود، ۲۱ درصد خطا دارد و این خطا نه از نمایش در سایت، که از خطای ذخیره‌سازی در سمت سرور سایت است. حداقل در مورد استان تهران ۲۱ درصد شرکت‌ها تکراری هستند.\nبا حذف این شرکت‌های تکراری، دانشگاه‌ها، شرکت‌های دولتی، وزارت‌خانه‌ها، سازمان‌های دولتی، ارگان‌های دولتی، ستادها، شهرداری‌ها، چون مخاطب کارفرمای پروژه نبودند، در نهایت کار را با ۸۳۶۱ شرکت ادامه دادیم.\n\n\n\n\n\n\n\n\n\n\nتعداد کارمندان\nتعداد\nدرصد\n\n\n\n\nزیر 10 نفر\n3300\n39.469\n\n\n11 تا 50 نفر\n3886\n46.478\n\n\n51 تا 200 نفر\n919\n10.992\n\n\n201 تا 500 نفر\n162\n1.938\n\n\n501 تا 1000 نفر\n55\n0.658\n\n\n1001 تا 5000 نفر\n30\n0.359\n\n\nبیش از 5000 نفر\n9\n0.108\n\n\nمجموع\n8361\n\n\n\n\n\n\n\n\n\nاگر بخواهیم تخمینی از جمعیت شاغلان حوزه فناوری اطلاعات بر اساس این داده‌ها داشته باشیم، جدولی مانند جدول زیر خواهیم داشت:\n\n\n\n\n\n\n\n\n\n\nتخمین جمعیت\nMin\nMid\nMax\n\n\n\n\nتعداد کارمندان\nیک شرکت\nکل\nیک شرکت\nکل\nیک شرکت\nکل\n\n\nزیر 10 نفر\n3\n9,900\n5\n16,500\n10\n33,000\n\n\n11 تا 50 نفر\n11\n42,746\n25\n97,150\n50\n194,300\n\n\n51 تا 200 نفر\n51\n46,869\n125\n114,875\n200\n183,800\n\n\n201 تا 500 نفر\n201\n32,562\n350\n56,700\n500\n81,000\n\n\n501 تا 1000 نفر\n501\n27,555\n750\n41,250\n1,000\n55,000\n\n\n1001 تا 5000 نفر\n1,001\n30,030\n3,000\n90,000\n5,000\n150,000\n\n\nبیش از 5000 نفر\n5,000\n45,000\n7,000\n63,000\n10,000\n90,000\n\n\nکل\n234,662\n479,475\n787,100\n\n\n\n\n\n\n\n\n\nاین جدول به ما نشان می‌دهد که اگر بخواهیم جمعیت را بر حسب کمترین تعداد افراد ذکر شده در دسته‌بندی حساب کنیم، ۲۳۴ هزار نفر خواهند بود. اگر بر حسب بیشترین مقدار محاسبه کنیم، با ۷۸۷ هزار نفر سر و کار خواهیم داشت. اما از آن جایی که شاهدی بر این مدعا نداریم که تمامی شرکت‌هایی که با آن‌ها روبرو خواهیم بود، در دو سط این طیف‌ها قرار خواهند گرفت، تخمین جمعیت را بر اساس میانه این بازه‌های جمعیتی محاسبه می‌کنیم و جمعیت شاغلان حوزه فناوری اطلاعات در استان تهران را ۴۷۹۴۷۵ نفر شاغل در ۸۳۶۱ شرکت در نظر می‌گیریم."
  },
  {
    "objectID": "part00.html",
    "href": "part00.html",
    "title": "مقدمه",
    "section": "",
    "text": "مقدمه\nدر فاز اول این پژوهش به بررسی سه کشور چین، هند و پاکستان پرداختیم تا ببینیم کشورهایی که از نظر مهاجرفرستی با مشکلاتی نظیر مشکلات ما مواجه هستند، چه سیاست‌هایی در پیش گرفته‌اند تا اثر مهاجرت نیروی انسانی بر اقتصاد دیجیتال خود را کاهش دهند.\nاین سه کشور هر کدام الگویی متفاوت ارائه می‌دهند که متناسب با مساله خودشان است:\n\nچین: تمرکز بر سرمایه‌گذاری دولتی و بازگشت نخبگان\nهند: پویایی صنعت فناوری و نقش بخش خصوصی\nپاکستان: آموزش و پرورش به عنوان پایه اصلی\n\nبنا بر یافته‌های آن بخش از پژوهش، اهمیت زیرساخت‌های مالی، نقش هماهنگ‌کننده دولت و بخش خصوصی و تمرکز بر توسعه پایدار نظام آموزشی* به خوبی نشان داده شده‌اند.\nدر کنار بررسی تجارب بین‌المللی، تجربه‌های کارفرمایان و مدیران ایرانی را هم بررسی کردیم و با نگاهی کوتاه به تاریخ مهاجرت نیروی کار متخصص در ایران، ضعف‌های نظریه‌های غالب توضیح مهاجرت را برشمردیم. سپس بر پایه نظریه سیستم‌های جهانی والرشتاین، تبیینی از مهاجرت نیروی کار متخصص ارائه کردیم که هم شرایط تاریخی و امروز ایران را توضیح می‌دهد و هم بر نظام ذهنی و عینی حاکم بر کارفرمایان و مدیران منطبق می‌شود.\nخلاصه‌ای از این تحلیل در گزاره‌های زیر جمع بسته شده است:\n\nمساله مهاجرت نیروی کار ماهر مساله‌ای جهانی و مربوط به نظام اقتصاد جهانی است.\nراه‌کارهای پیشنهادی در رابطه با مهاجرت بایستی با در نظر گرفتن و فهم جایگاه کشور در این نظام ارائه شوند.\nارائه راه‌کارهای صرفا اقتصادی بدون تلاش نتیجه‌بخش برای تغییر جایگاه کشور اثربخش نخواهد بود، چنان که نبوده است.\nراه‌کارهای برآمده از تجربیات شرکت‌های بزرگ با درآمدهای بالا قابل انتقال و اجرا برای شرکت‌های کوچک‌تر نیست.\nراه‌کارهایی که تجربه کارکنان را هدف می‌گیرند می‌توانند تاثیر بیشتری در نگه‌داشت آنان داشته باشند.\nنظام آموزشی کشور نیروهایی متناسب با نیاز کشور تولید نمی‌کند و هر مجموعه‌ای ناچار از تربیت نیروی انسانی خود یا استفاده از روش‌های جایگزین آموزشی است.\n\nفصل دوم این پژوهش به شناسایی و تحلیل اهداف و انگیزه‌های نیروی انسانی موجود در بخش اقتصاد دیجیتال در استان تهران با استفاده از روش پیمایش جمعیتی نمونه از شاغلین موجود در بخش اقتصاد دیجیتال استان تهران اختصاص دارد. بنابراین در وهله اول باید راهی یافت تا بتوان اهداف و انگیزه‌های نیروی انسانی بخش اقتصاد دیجیتال را از مهاجرت از سازمان با آن سنجید و پس از یافتن این راه، به سراغ جمعیتی نمونه از شاغلان این حوزه رفت."
  },
  {
    "objectID": "part05.html",
    "href": "part05.html",
    "title": "نتیجه‌گیری",
    "section": "",
    "text": "اقتصاد دیجیتال به عنوان یکی از محرک‌های کلیدی توسعه اقتصادی در ایران و جهان، با چالش‌های مهمی در زمینه نیروی انسانی ماهر مواجه است. کمبود نیروی متخصص در حوزه فناوری اطلاعات و اقتصاد دیجیتال، به ویژه در زمینه‌هایی مانند هوش مصنوعی، امنیت سایبری، اینترنت اشیا و زنجیره بلوکی، یکی از موانع اصلی رشد این بخش است.\nدر فرایند تصویب این پژوهش، کمیته پژوهش از سوی کارفرما بر روی بررسی دو معضل در ارتباط با نیروی انسانی ماهر در بخش اقتصاد دیجیتال تاکید داشت:\nاول؛ سیاست‌های کشورهای دیگر در ارتباط با تأمین نیروی کار در بخش اقتصاد دیجیتال مورد بررسی قرار بگیرد.\nدوم؛ مهاجرت به عنوان یک معضل بزرگ برای شرکت‌های فعال در حوزه اقتصاد دیجیتال مورد بررسی قرار بگیرد.\nاین دو تأکید البته هم‌زمان در فضای رسانه‌ای پیرامون نیروی کار در اقتصاد دیجیتال پرطنین بوده است. تاکید بر مهاجرت به عنوان معضل و گرته‌برداری از سیاست‌های کشورهای دیگر در این زمینه. رئیس سازمان نظام صنفی رایانه‌ای کشور، کمبود نیروی انسانی متخصص را یک بحران جهانی و در ایران یک چالش جدی عنوان کرده است که علاوه بر مشکلات داخلی مانند تحریم‌ها، مهاجرت نیروی انسانی متخصص، به ویژه در حوزه اقتصاد دیجیتال، مانع اصلی توسعه این بخش است. فعالان حوزه اقتصاد دیجیتال معتقدند که مشکل فقط مهاجرت نیست بلکه ضعف آموزش و تربیت نیروی انسانی ماهر در دانشگاه‌ها و مراکز آموزشی نیز به شدت احساس می‌شود: «برخی فارغ‌التحصیلان فاقد مهارت‌های لازم برای ورود به بازار کار هستند و این مسئله باعث کاهش بازدهی و انگیزه نیروی کار می‌شود.» علاوه بر این، دولت در سطح سیاست‌گذاری کلان برای رسیدن به سهم ۱۰ درصدی اقتصاد دیجیتال در تولید ناخالص ملی، نیاز به سرمایه‌گذاری ۲۵ تا ۳۰ میلیارد دلاری در طول برنامه هفتم توسعه را تخمین زده است و در همین راستا یکی از احکام برنامه هفتم مبتنی بر آموزش ۵۰۰هزار نفر نیروی ماهر در این زمینه نوشته شده است.\nاما آنچه هم در فاز اول و هم در فاز دوم این پژوهش مورد مطالعه و پرسش قرار گرفت اول تببین و روشن‌کردن فضای سیاست‌گذاری کشورهای دیگر -با توجه به اینکه مسئله نیروی کار در اقتصاد دیجیتال روز به روز به شکل جهانی بحرانی‌تر می‌شود- و دوم تمرکز بر ایران و مسئله خاص ایران در حوزه منابع انسانی بوده است.\nپرسش اول در فاز اول این پژوهش، علاوه بر مطالعات ترازیابی، مطالعه‌ای برای فهمِ نیازهای کارفرمایان از خلالِ مصاحبه به مدیران منابع انسانیِ پنج شرکت بزرگ فعال در اقتصاد دیجیتال به شکلی دقیق و چندوجهی انجام شد. این مطالعه در پرتو مطالعات پیشین بر روی پدیده مهاجرت و شکل درک مدیران منابع انسانی از فرایندهای جذب و نگهداشتِ نیروی انسانی و چالش‌های آن و همینطور ایده‌های آنان در مورد آینده منابع انسانی تکمیل شد. اطلاعات گردآوری‌شده در این بخش اما بدون در نظرگرفتن یک چارچوب نظری قابل فهم نبود، در نتیجه برای فهم بهتر یافته‌ها یک چارچوب نظری بر این یافته‌ها استوار شده است که می‌تواند وضعیت را بر اساس یافته‌های داخلی و محیط پیرامون توضیح بدهد.\nخلاصه این یافته‌ها را می‌توان این‌طور بیان کرد:\nچین با ایجاد شهرهای فناوری مانند شنژن و سرمایه‌گذاری سالانه ۴۰۰ میلیارد دلار در تحقیق و توسعه1، توانسته است نرخ بازگشت نخبگان را به ۶۳٪ برساند. این موفقیت مبتنی بر «نظریه نهادگرایی تاریخی»2 است که بر نقش دولت در شکل‌دهی به بازار کار تأکید دارد. با این حال، «شکاف فرهنگی» بین نخبگان بازگشته و جامعه محلی (به عنوان مثال، تفاوت در ارزش‌های کاری و سبک مدیریت) مانع ادغام کامل شده است. مطالعه لیو3 نشان می‌دهد که ۴۰٪ از بازگشتگان چینی به دلیل ناسازگاری فرهنگی، مجدداً مهاجرت می‌کنند.\nهند با تکیه بر «اکوسیستم کارآفرینی پویا»4، توانسته است ۵۰ میلیون شغل در بخش فناوری اطلاعات ایجاد کند. این موفقیت ناشی از همکاری بخش خصوصی (مانند شرکت‌های TATA و Infosys) و دولت در ایجاد پارک‌های فناوری است. اما «کیفیت پایین خدمات عمومی» (مانند سیستم آموزشی و بهداشتی) باعث شده است که تنها ۲۵٪ از فارغ‌التحصیلان مهندسی هند جذب بازار کار داخلی شوند5.\nشکست پاکستان در مهار مهاجرت نخبگان، ناشی از نظریه ناهماهنگی مهارتی 6 است. بورس‌های تحصیلی بدون هماهنگی با نیازهای صنعت (مثلاً تمرکز بر رشته‌های علوم انسانی به جای فناوری)، موجب شده است که ۷۰٪ فارغ‌التحصیلان پاکستانی ترجیح دهند در خارج از کشور بمانند 7.\nدر ایران هم بازار کار اقتصاد دیجیتال دشواری‌های زیادی را دارد. اما الزاماً این دشواری‌ها فقط به مسئله مهاجرت برنمی‌گردد، بلکه عوامل دیگری نیز نظیر ناپایداری‌ اقتصادی هم در این بحران سهیم هستند.\nاز خلال مصاحبه‌های کارفرمایان -منابع انسانی پنج شرکت اول فعال در اقتصاد دیجیتال- این فضا این طور ترسیم می‌شود:\n\n\n\n\nجذب و نگه‌داشت نیروهای متخصص برای شرکت‌ها سخت‌تر شده است.\nکیفیت نیروهای انسانی متخصص باقی‌مانده، به نظر مدیران این شرکت‌ها، کمتر از قبل است.\nاختلاف نظر میان مدیران منابع انسانی و رهبران سازمان بیش از پیش آشکار شده است.\nشرکت‌ها از اقدامات دولت درباره مهاجرت ناامیدند.\nعموم رهبران و مدیران سازمان پدیده مهاجرت نیروی انسانی متخصص را پذیرفته‌اند و لزوما برای آن برنامه خاصی ندارند.\n\n\n\n\n\nبرخی با مهاجرت‌کرده‌ها با پرداخت دلاری همکاری‌شان را ادامه می‌دهند.\nهمگی معتقدند که با افزایش دستمزد یا ارائه مشوق‌های مالی جذاب‌تر، می‌توان نیروهای باقی‌مانده بهتر را استخدام کرد.\nبرخی از سازمان‌ها در فرایندهای استخدامی خود تغییراتی داده‌اند.\nبرخی اقدام به برگزاری آکادمی برای تربیت نیروی متخصص مورد نیاز خود کرده‌اند.\nبرخی همکاری‌های خود را با دانشگاه و دانشجویان بیشتر کرده‌اند.\nفعالیت‌های جانشین‌پروری با جدیت بیشتری دنبال می‌شود.\n\n\n\n\n۱. مهاجرت نخبگان و نظریه سرمایه انسانی: از تئوری تا واقعیت بر اساس نظریه سرمایه انسانی8 ، سرمایه‌گذاری در آموزش و مهارت‌افزایی نیروی کار به عنوان موتور محرکه رشد اقتصادی شناخته می‌شود. در اقتصاد دیجیتال، این سرمایه انسانی به دلیل ماهیت فناورانه و رقابت جهانی، اهمیت دوچندانی یافته است. پژوهش حاضر نشان می‌دهد که مهاجرت نیروی متخصص نه تنها یک چالش سازمانی، بلکه یک بحران ساختاری در سطح کلان است.\n۲. فرار مغزها و نابرابری جهانی: نظریه فرار مغزها9 توضیح می‌دهد که چگونه کشورهای در حال توسعه به دلیل نبود زیرساخت‌های پژوهشی، بی‌ثباتی سیاسی، و محدودیت‌های اقتصادی، نخبگان خود را به کشورهای توسعه‌یافته از دست می‌دهند. در این پژوهش، ۸۰٪ پاسخ‌دهندگان بی‌ثباتی اقتصادی ایران را عامل اصلی مهاجرت خود عنوان کرده‌اند. این یافته با مطالعه کاپلان و همکاران (۲۰۱۶) همسوست که نشان دادند ناامنی اقتصادی، انگیزه مهاجرت را در کشورهای خاورمیانه ۴۰٪ افزایش می‌دهد.\n۳. رضایت شغلی و سلسله مراتب نیازهای مازلو: از بقا تا خودشکوفایی نتایج پرسشنامه نشان می‌دهد که ۶۵٪ پاسخ‌دهندگان از حقوق و مزایا ناراضی هستند، و تنها ۳۰٪ احساس می‌کنند سازمان قدردان تلاش‌هایشان است. این یافته‌ها را می‌توان با سلسله مراتب نیازهای مازلو (۱۹۴۳) تحلیل کرد:\n\nنیازهای فیزیولوژیک و امنیت:\nنارضایتی از دستمزد (۷۵٪ پاسخ‌دهندگان) نشان می‌دهد نیازهای پایه کارکنان برآورده نشده است. این مسئله با مطالعه هرتزبرگ (۱۹۵۹) همسوست که نشان داد حقوق ناکافی به عنوان یک «عامل بهداشتی»10 می‌تواند موجب نارضایتی شدید شود.\nنیازهای اجتماعی و احترام:\nفقدان قدردانی سازمانی (۶۰٪ پاسخ‌دهندگان) و ابهام در مسیرهای ارتقاء (۵۵٪) به نیاز به تعلق و احترام آسیب می‌زند. نظریه تبادل اجتماعی11 توضیح می‌دهد که کارکنان زمانی تعهد سازمانی نشان می‌دهند که احساس کنند تلاش‌هایشان به رسمیت شناخته می‌شود.\nنیاز به خودشکوفایی:\nبا وجود رضایت نسبی از همخوانی شغل با مهارت‌ها (۵۰٪)، نبود فرصت‌های یادگیری (۴۰٪) مانع تحقق این نیاز می‌شود. نظریه یادگیری سازمانی12 تأکید می‌کند که سازمان‌ها باید محیطی فراهم کنند که کارکنان بتوانند به طور مستمر رشد کنند.\n\n۴. تعادل کار-زندگی و نابرابری جنسیتی: رویکرد فمینیستی عدم امکان دورکاری (۷۰٪ پاسخ‌دهندگان) و نارضایتی از سیاست‌های تعادل کار-زندگی (۶۰٪) به ویژه برای زنان، نشان‌دهنده نابرابری ساختاری است.\n\nنظریه بار دوگانه13:\nزنان شاغل در اقتصاد دیجیتال، علاوه بر مسئولیت‌های شغلی، بار کار خانگی و مراقبت از خانواده را نیز به دوش می‌کشند. در این پژوهش، ۴۵٪ زنان اعلام کرده‌اند که سیاست‌های شرکت امکان ایفای نقش‌های خانوادگی را فراهم نمی‌کند.\nجنسیت و دستمزد:\nداده‌ها نشان می‌دهد زنان با وجود تحصیلات مشابه، ۲۰٪ کمتر از مردان دستمزد دریافت می‌کنند. این نابرابری با نظریه شکاف دستمزد جنسیتی14 همسوست که عوامل ساختاری مانند تبعیض و تقسیم جنسیتی مشاغل را علت اصلی می‌داند.\n\n۵. فرهنگ سازمانی و نظریه ساختارگرایی: تضاد بین صمیمیت و ناامنی محیط صمیمی اما ناامن (۵۰٪ پاسخ‌دهندگان احساس امنیت روانی ندارند) بازتابی از تضادهای ساختاری است.\n\nنظریه ساختارگرایی گیدنز (۱۹۸۴):\nفرهنگ سازمانی حاصل تعامل پیچیده بین ساختارهای رسمی (مانند قوانین) و کنش‌های روزمره کارکنان است. در این پژوهش، نبود سازوکارهای کنترل رفتارهای ناسالم (مثلاً آزار جنسی)، نشان می‌دهد ساختارهای نظارتی سازمانی ضعیف هستند.\nابهام نقش و کاهش تعهد:\n۶۰٪ پاسخ‌دهندگان اظهار کرده‌اند که اهداف استراتژیک شرکت برایشان نامشخص است. این ابهام با نظریه ابهام نقش15 مرتبط است که نشان می‌دهد عدم وضوح مسئولیت‌ها می‌تواند به استرس و کاهش بهره‌وری منجر شود.\n\n۶. مهاجرت در نظام جهانی: از پیرامون به مرکز نظریه نظام جهانی والرشتاین (۱۹۷۴) توضیح می‌دهد که کشورهای پیرامونی (مانند ایران) به دلیل وابستگی به فناوری و سرمایه کشورهای مرکز (مانند آمریکا و اروپا)، در جذب و حفظ نخبگان ناتوان هستند.\n\nعوامل دافعه16:\n\nبی‌ثباتی اقتصادی: ۸۰٪ پاسخ‌دهندگان این عامل را اصلی‌ترین دلیل مهاجرت عنوان کرده‌اند.\n\nناامنی سیاسی: ۶۵٪ از نبود ثبات در سیاست‌های کلان ابراز نگرانی کرده‌اند.\n\nعوامل جاذبه17:\n\nدستمزدهای دلاری: ۷۰٪ مهاجران بالقوه، جذب فرصت‌های شغلی با درآمد ارزی می‌شوند.\n\nاکوسیستم نوآوری: کشورهای پیشرفته با ارائه زیرساخت‌های پژوهشی (مانند سیلیکون ولی)، نخبگان را جذب می‌کنند.\n\n\n۷. نظام آموزشی و شکاف مهارتی: بحران ساختاری ۷۰٪ پاسخ‌دهندگان معتقدند نظام آموزشی نیروهای متناسب با نیاز بازار تولید نمی‌کند. این مسئله با نظریه شکاف مهارتی18 همخوانی دارد که بر ناتوانی سیستم‌های آموزشی در پاسخگویی به تحولات سریع فناوری تأکید می‌کند.\n\n\n\n\nسناریوی خوشبینانه:\nبا اجرای سیاست‌های کلان (مانند کاهش بوروکراسی) و سازمانی (مانند بهبود حقوق)، می‌توان نرخ مهاجرت را کاهش داد.\nسناریوی بدبینانه:\nتداوم بی‌ثباتی اقتصادی و سیاسی ممکن است باعث خروج ۹۰٪ نیروهای متخصص تا سال ۲۰۳۰ شود.\n\n\n\n\n\n\n۱. بازگشت نخبگان: رویکردی چندبُعدی الهام‌گرفته از الگوی چین مشوق‌های ساختاری: اعمال معافیت مالیاتی ۵ ساله برای شرکت‌هایی که متخصصان بازگشتی را به‌کار می‌گیرند19. زیست‌بوم‌های نوآوری منطقه‌ای: توسعه قطب‌های فناوری در شهرهایی چون اصفهان، شیراز و تبریز، با محوریت مشارکت دولت–بخش خصوصی، مشابه شهرهای خلاق شنژن. سیاست‌های ادغام فرهنگی: طراحی برنامه‌های تطبیق فرهنگی، کارگاه‌های بین‌نسلی و حلقه‌های اجتماعی برای کاهش فاصله ذهنی میان نخبگان بازگشته و نیروهای داخلی20.\n۲. تحول در نظام آموزش و مهارت: رویکرد تلفیقی آموزش–صنعت مدل آموزش دوگانه21: ایجاد برنامه‌های مشترک میان دانشگاه، صنعت و دولت در حوزه‌هایی چون داده‌کاوی، هوش مصنوعی، امنیت سایبری، با الگوبرداری از آلمان. جذب مربیان صنعتی: دعوت از متخصصان فعال در شرکت‌های فناوری داخلی و بین‌المللی برای تدریس دروس عملی در دانشگاه‌ها، مشابه تجربه موفق Infosys در هند. اصلاح نظام رتبه‌بندی دانشگاه‌ها بر مبنای میزان اشتغال‌پذیری فارغ‌التحصیلان.\n۳. کنترل متغیرهای دافعه مهاجرت: رویکرد چندسطحی رفاه شغلی ثبات اقتصاد کلان: تقویت اعتماد به آینده از طریق سیاست‌های ضد تورمی، تسهیل سرمایه‌گذاری و ثبات نرخ ارز. حمایت از نوآوری بومی: تأسیس «صندوق ملی تثبیت نخبگان» با تمرکز بر پایداری استارتاپ‌ها و تأمین مالی پروژه‌های تحقیقاتی جوانان.\n۴. دیپلماسی تخصص‌محور و هماهنگی بین‌المللی تفاهم‌نامه‌های اشتغال و کارآموزی با کشورهای توسعه‌یافته برای تبادل تجربه و انتقال فناوری (مانند کره جنوبی، آلمان). تأسیس شبکه جهانی متخصصان ایرانی مقیم خارج جهت ایجاد همکاری‌های پروژه‌محور از راه دور.\n\n\n\n۱. نظام جبران خدمات بر اساس شایستگی واقعی22 مدل دستمزد رقابتی و شفاف بر مبنای مهارت، بهره‌وری و نوآوری فردی، نه فقط سابقه یا مدارک رسمی 23. سازوکارهای انگیزشی غیرمالی مانند سهام‌داری کارکنان، مالکیت فکری، فرصت سفر علمی و ارتقاء حرفه‌ای.\n۲. تعادل کار–زندگی با رویکرد عدالت جنسیتی الگوهای دورکاری ترکیبی24 برای کارکنان در مشاغل دانش‌بنیان، با هدف کاهش تعارض نقش‌های خانوادگی، به‌ویژه برای زنان\n۳. فرهنگ سازمانی مبتنی بر اعتماد، عدالت و شفافیت نهادهای درون‌سازمانی نظارتی مانند کمیته اخلاق حرفه‌ای و کمیته بررسی نابرابری، برای رسیدگی به تخلفات، تبعیض یا آزار. شفاف‌سازی استراتژیک از طریق جلسات دوره‌ای، تبیین اهداف کلان سازمان و مشارکت کارکنان در طراحی چشم‌انداز مشترک 25\n۴. برنامه‌های رشد حرفه‌ای و یادگیری مادام‌العمر آکادمی‌های یادگیری داخلی در شرکت‌ها برای مهارت‌آموزی عملی و مستمر بر اساس نیاز روز بازار. پیمان‌های بلندمدت با دانشگاه‌ها: حمایت از پایان‌نامه‌های مرتبط با پروژه‌های سازمان، همراه با فرصت‌های اشتغال پایدار.\n\n\n\n\nبازسازی ظرفیت منابع انسانی کشور در بستر اقتصاد دیجیتال مستلزم سه سطح مداخله و هماهنگی است:\nسطح کلان (دولت): مهندسی نظام آموزشی، ارتقاء کیفیت حکمرانی اقتصادی، تسهیل‌گری نهادی و سیاست‌های مشوق بازگشت نخبگان\nسطح میانی (سازمان‌ها): طراحی ساختارهای منعطف، فرهنگ انسانی، انگیزش بلندمدت و توسعه ظرفیت یادگیری\nسطح خرد (فردی): تقویت انگیزه یادگیری، مسئولیت‌پذیری حرفه‌ای و تاب‌آوری در برابر نوسانات اجتماعی.\nهمان‌طور که ایوان ایلیچ و والرشتاین هشدار داده‌اند، هرگونه توسعه انسانی بدون تعادل میان خوداتکایی داخلی و بهره‌گیری نقادانه از تجربه جهانی، به وابستگی و فرسایش سرمایه اجتماعی منجر خواهد شد.\nاقتصاد دیجیتال بدون نیروی انسانی توانمند، تنها نامی بر صفحه کاغذ خواهد بود."
  },
  {
    "objectID": "part05.html#نگاهی-به-یافتههای-مرحله-اول-پژوهش",
    "href": "part05.html#نگاهی-به-یافتههای-مرحله-اول-پژوهش",
    "title": "نتیجه‌گیری",
    "section": "",
    "text": "اقتصاد دیجیتال به عنوان یکی از محرک‌های کلیدی توسعه اقتصادی در ایران و جهان، با چالش‌های مهمی در زمینه نیروی انسانی ماهر مواجه است. کمبود نیروی متخصص در حوزه فناوری اطلاعات و اقتصاد دیجیتال، به ویژه در زمینه‌هایی مانند هوش مصنوعی، امنیت سایبری، اینترنت اشیا و زنجیره بلوکی، یکی از موانع اصلی رشد این بخش است.\nدر فرایند تصویب این پژوهش، کمیته پژوهش از سوی کارفرما بر روی بررسی دو معضل در ارتباط با نیروی انسانی ماهر در بخش اقتصاد دیجیتال تاکید داشت:\nاول؛ سیاست‌های کشورهای دیگر در ارتباط با تأمین نیروی کار در بخش اقتصاد دیجیتال مورد بررسی قرار بگیرد.\nدوم؛ مهاجرت به عنوان یک معضل بزرگ برای شرکت‌های فعال در حوزه اقتصاد دیجیتال مورد بررسی قرار بگیرد.\nاین دو تأکید البته هم‌زمان در فضای رسانه‌ای پیرامون نیروی کار در اقتصاد دیجیتال پرطنین بوده است. تاکید بر مهاجرت به عنوان معضل و گرته‌برداری از سیاست‌های کشورهای دیگر در این زمینه. رئیس سازمان نظام صنفی رایانه‌ای کشور، کمبود نیروی انسانی متخصص را یک بحران جهانی و در ایران یک چالش جدی عنوان کرده است که علاوه بر مشکلات داخلی مانند تحریم‌ها، مهاجرت نیروی انسانی متخصص، به ویژه در حوزه اقتصاد دیجیتال، مانع اصلی توسعه این بخش است. فعالان حوزه اقتصاد دیجیتال معتقدند که مشکل فقط مهاجرت نیست بلکه ضعف آموزش و تربیت نیروی انسانی ماهر در دانشگاه‌ها و مراکز آموزشی نیز به شدت احساس می‌شود: «برخی فارغ‌التحصیلان فاقد مهارت‌های لازم برای ورود به بازار کار هستند و این مسئله باعث کاهش بازدهی و انگیزه نیروی کار می‌شود.» علاوه بر این، دولت در سطح سیاست‌گذاری کلان برای رسیدن به سهم ۱۰ درصدی اقتصاد دیجیتال در تولید ناخالص ملی، نیاز به سرمایه‌گذاری ۲۵ تا ۳۰ میلیارد دلاری در طول برنامه هفتم توسعه را تخمین زده است و در همین راستا یکی از احکام برنامه هفتم مبتنی بر آموزش ۵۰۰هزار نفر نیروی ماهر در این زمینه نوشته شده است.\nاما آنچه هم در فاز اول و هم در فاز دوم این پژوهش مورد مطالعه و پرسش قرار گرفت اول تببین و روشن‌کردن فضای سیاست‌گذاری کشورهای دیگر -با توجه به اینکه مسئله نیروی کار در اقتصاد دیجیتال روز به روز به شکل جهانی بحرانی‌تر می‌شود- و دوم تمرکز بر ایران و مسئله خاص ایران در حوزه منابع انسانی بوده است.\nپرسش اول در فاز اول این پژوهش، علاوه بر مطالعات ترازیابی، مطالعه‌ای برای فهمِ نیازهای کارفرمایان از خلالِ مصاحبه به مدیران منابع انسانیِ پنج شرکت بزرگ فعال در اقتصاد دیجیتال به شکلی دقیق و چندوجهی انجام شد. این مطالعه در پرتو مطالعات پیشین بر روی پدیده مهاجرت و شکل درک مدیران منابع انسانی از فرایندهای جذب و نگهداشتِ نیروی انسانی و چالش‌های آن و همینطور ایده‌های آنان در مورد آینده منابع انسانی تکمیل شد. اطلاعات گردآوری‌شده در این بخش اما بدون در نظرگرفتن یک چارچوب نظری قابل فهم نبود، در نتیجه برای فهم بهتر یافته‌ها یک چارچوب نظری بر این یافته‌ها استوار شده است که می‌تواند وضعیت را بر اساس یافته‌های داخلی و محیط پیرامون توضیح بدهد.\nخلاصه این یافته‌ها را می‌توان این‌طور بیان کرد:\nچین با ایجاد شهرهای فناوری مانند شنژن و سرمایه‌گذاری سالانه ۴۰۰ میلیارد دلار در تحقیق و توسعه1، توانسته است نرخ بازگشت نخبگان را به ۶۳٪ برساند. این موفقیت مبتنی بر «نظریه نهادگرایی تاریخی»2 است که بر نقش دولت در شکل‌دهی به بازار کار تأکید دارد. با این حال، «شکاف فرهنگی» بین نخبگان بازگشته و جامعه محلی (به عنوان مثال، تفاوت در ارزش‌های کاری و سبک مدیریت) مانع ادغام کامل شده است. مطالعه لیو3 نشان می‌دهد که ۴۰٪ از بازگشتگان چینی به دلیل ناسازگاری فرهنگی، مجدداً مهاجرت می‌کنند.\nهند با تکیه بر «اکوسیستم کارآفرینی پویا»4، توانسته است ۵۰ میلیون شغل در بخش فناوری اطلاعات ایجاد کند. این موفقیت ناشی از همکاری بخش خصوصی (مانند شرکت‌های TATA و Infosys) و دولت در ایجاد پارک‌های فناوری است. اما «کیفیت پایین خدمات عمومی» (مانند سیستم آموزشی و بهداشتی) باعث شده است که تنها ۲۵٪ از فارغ‌التحصیلان مهندسی هند جذب بازار کار داخلی شوند5.\nشکست پاکستان در مهار مهاجرت نخبگان، ناشی از نظریه ناهماهنگی مهارتی 6 است. بورس‌های تحصیلی بدون هماهنگی با نیازهای صنعت (مثلاً تمرکز بر رشته‌های علوم انسانی به جای فناوری)، موجب شده است که ۷۰٪ فارغ‌التحصیلان پاکستانی ترجیح دهند در خارج از کشور بمانند 7.\nدر ایران هم بازار کار اقتصاد دیجیتال دشواری‌های زیادی را دارد. اما الزاماً این دشواری‌ها فقط به مسئله مهاجرت برنمی‌گردد، بلکه عوامل دیگری نیز نظیر ناپایداری‌ اقتصادی هم در این بحران سهیم هستند.\nاز خلال مصاحبه‌های کارفرمایان -منابع انسانی پنج شرکت اول فعال در اقتصاد دیجیتال- این فضا این طور ترسیم می‌شود:"
  },
  {
    "objectID": "part05.html#پدیده-مهاجرت-نیروی-انسانی-متخصص-چه-تاثیراتی-در-جذب-و-نگهداشت-این-نیروها-در-شرکتهای-حوزه-فناوری-اطلاعات-دارد",
    "href": "part05.html#پدیده-مهاجرت-نیروی-انسانی-متخصص-چه-تاثیراتی-در-جذب-و-نگهداشت-این-نیروها-در-شرکتهای-حوزه-فناوری-اطلاعات-دارد",
    "title": "نتیجه‌گیری",
    "section": "",
    "text": "جذب و نگه‌داشت نیروهای متخصص برای شرکت‌ها سخت‌تر شده است.\nکیفیت نیروهای انسانی متخصص باقی‌مانده، به نظر مدیران این شرکت‌ها، کمتر از قبل است.\nاختلاف نظر میان مدیران منابع انسانی و رهبران سازمان بیش از پیش آشکار شده است.\nشرکت‌ها از اقدامات دولت درباره مهاجرت ناامیدند.\nعموم رهبران و مدیران سازمان پدیده مهاجرت نیروی انسانی متخصص را پذیرفته‌اند و لزوما برای آن برنامه خاصی ندارند."
  },
  {
    "objectID": "part05.html#نیازها-و-خواستهها-منابع-و-برنامههای-منابع-انسانی-شرکتهای-کارفرما-در-استان-تهران-چیست",
    "href": "part05.html#نیازها-و-خواستهها-منابع-و-برنامههای-منابع-انسانی-شرکتهای-کارفرما-در-استان-تهران-چیست",
    "title": "نتیجه‌گیری",
    "section": "",
    "text": "برخی با مهاجرت‌کرده‌ها با پرداخت دلاری همکاری‌شان را ادامه می‌دهند.\nهمگی معتقدند که با افزایش دستمزد یا ارائه مشوق‌های مالی جذاب‌تر، می‌توان نیروهای باقی‌مانده بهتر را استخدام کرد.\nبرخی از سازمان‌ها در فرایندهای استخدامی خود تغییراتی داده‌اند.\nبرخی اقدام به برگزاری آکادمی برای تربیت نیروی متخصص مورد نیاز خود کرده‌اند.\nبرخی همکاری‌های خود را با دانشگاه و دانشجویان بیشتر کرده‌اند.\nفعالیت‌های جانشین‌پروری با جدیت بیشتری دنبال می‌شود."
  },
  {
    "objectID": "part05.html#تحلیل-جامعهشناختی-مسائل-نیروی-انسانی-در-اقتصاد-دیجیتال-بسط-و-تعمیق",
    "href": "part05.html#تحلیل-جامعهشناختی-مسائل-نیروی-انسانی-در-اقتصاد-دیجیتال-بسط-و-تعمیق",
    "title": "نتیجه‌گیری",
    "section": "",
    "text": "۱. مهاجرت نخبگان و نظریه سرمایه انسانی: از تئوری تا واقعیت بر اساس نظریه سرمایه انسانی8 ، سرمایه‌گذاری در آموزش و مهارت‌افزایی نیروی کار به عنوان موتور محرکه رشد اقتصادی شناخته می‌شود. در اقتصاد دیجیتال، این سرمایه انسانی به دلیل ماهیت فناورانه و رقابت جهانی، اهمیت دوچندانی یافته است. پژوهش حاضر نشان می‌دهد که مهاجرت نیروی متخصص نه تنها یک چالش سازمانی، بلکه یک بحران ساختاری در سطح کلان است.\n۲. فرار مغزها و نابرابری جهانی: نظریه فرار مغزها9 توضیح می‌دهد که چگونه کشورهای در حال توسعه به دلیل نبود زیرساخت‌های پژوهشی، بی‌ثباتی سیاسی، و محدودیت‌های اقتصادی، نخبگان خود را به کشورهای توسعه‌یافته از دست می‌دهند. در این پژوهش، ۸۰٪ پاسخ‌دهندگان بی‌ثباتی اقتصادی ایران را عامل اصلی مهاجرت خود عنوان کرده‌اند. این یافته با مطالعه کاپلان و همکاران (۲۰۱۶) همسوست که نشان دادند ناامنی اقتصادی، انگیزه مهاجرت را در کشورهای خاورمیانه ۴۰٪ افزایش می‌دهد.\n۳. رضایت شغلی و سلسله مراتب نیازهای مازلو: از بقا تا خودشکوفایی نتایج پرسشنامه نشان می‌دهد که ۶۵٪ پاسخ‌دهندگان از حقوق و مزایا ناراضی هستند، و تنها ۳۰٪ احساس می‌کنند سازمان قدردان تلاش‌هایشان است. این یافته‌ها را می‌توان با سلسله مراتب نیازهای مازلو (۱۹۴۳) تحلیل کرد:\n\nنیازهای فیزیولوژیک و امنیت:\nنارضایتی از دستمزد (۷۵٪ پاسخ‌دهندگان) نشان می‌دهد نیازهای پایه کارکنان برآورده نشده است. این مسئله با مطالعه هرتزبرگ (۱۹۵۹) همسوست که نشان داد حقوق ناکافی به عنوان یک «عامل بهداشتی»10 می‌تواند موجب نارضایتی شدید شود.\nنیازهای اجتماعی و احترام:\nفقدان قدردانی سازمانی (۶۰٪ پاسخ‌دهندگان) و ابهام در مسیرهای ارتقاء (۵۵٪) به نیاز به تعلق و احترام آسیب می‌زند. نظریه تبادل اجتماعی11 توضیح می‌دهد که کارکنان زمانی تعهد سازمانی نشان می‌دهند که احساس کنند تلاش‌هایشان به رسمیت شناخته می‌شود.\nنیاز به خودشکوفایی:\nبا وجود رضایت نسبی از همخوانی شغل با مهارت‌ها (۵۰٪)، نبود فرصت‌های یادگیری (۴۰٪) مانع تحقق این نیاز می‌شود. نظریه یادگیری سازمانی12 تأکید می‌کند که سازمان‌ها باید محیطی فراهم کنند که کارکنان بتوانند به طور مستمر رشد کنند.\n\n۴. تعادل کار-زندگی و نابرابری جنسیتی: رویکرد فمینیستی عدم امکان دورکاری (۷۰٪ پاسخ‌دهندگان) و نارضایتی از سیاست‌های تعادل کار-زندگی (۶۰٪) به ویژه برای زنان، نشان‌دهنده نابرابری ساختاری است.\n\nنظریه بار دوگانه13:\nزنان شاغل در اقتصاد دیجیتال، علاوه بر مسئولیت‌های شغلی، بار کار خانگی و مراقبت از خانواده را نیز به دوش می‌کشند. در این پژوهش، ۴۵٪ زنان اعلام کرده‌اند که سیاست‌های شرکت امکان ایفای نقش‌های خانوادگی را فراهم نمی‌کند.\nجنسیت و دستمزد:\nداده‌ها نشان می‌دهد زنان با وجود تحصیلات مشابه، ۲۰٪ کمتر از مردان دستمزد دریافت می‌کنند. این نابرابری با نظریه شکاف دستمزد جنسیتی14 همسوست که عوامل ساختاری مانند تبعیض و تقسیم جنسیتی مشاغل را علت اصلی می‌داند.\n\n۵. فرهنگ سازمانی و نظریه ساختارگرایی: تضاد بین صمیمیت و ناامنی محیط صمیمی اما ناامن (۵۰٪ پاسخ‌دهندگان احساس امنیت روانی ندارند) بازتابی از تضادهای ساختاری است.\n\nنظریه ساختارگرایی گیدنز (۱۹۸۴):\nفرهنگ سازمانی حاصل تعامل پیچیده بین ساختارهای رسمی (مانند قوانین) و کنش‌های روزمره کارکنان است. در این پژوهش، نبود سازوکارهای کنترل رفتارهای ناسالم (مثلاً آزار جنسی)، نشان می‌دهد ساختارهای نظارتی سازمانی ضعیف هستند.\nابهام نقش و کاهش تعهد:\n۶۰٪ پاسخ‌دهندگان اظهار کرده‌اند که اهداف استراتژیک شرکت برایشان نامشخص است. این ابهام با نظریه ابهام نقش15 مرتبط است که نشان می‌دهد عدم وضوح مسئولیت‌ها می‌تواند به استرس و کاهش بهره‌وری منجر شود.\n\n۶. مهاجرت در نظام جهانی: از پیرامون به مرکز نظریه نظام جهانی والرشتاین (۱۹۷۴) توضیح می‌دهد که کشورهای پیرامونی (مانند ایران) به دلیل وابستگی به فناوری و سرمایه کشورهای مرکز (مانند آمریکا و اروپا)، در جذب و حفظ نخبگان ناتوان هستند.\n\nعوامل دافعه16:\n\nبی‌ثباتی اقتصادی: ۸۰٪ پاسخ‌دهندگان این عامل را اصلی‌ترین دلیل مهاجرت عنوان کرده‌اند.\n\nناامنی سیاسی: ۶۵٪ از نبود ثبات در سیاست‌های کلان ابراز نگرانی کرده‌اند.\n\nعوامل جاذبه17:\n\nدستمزدهای دلاری: ۷۰٪ مهاجران بالقوه، جذب فرصت‌های شغلی با درآمد ارزی می‌شوند.\n\nاکوسیستم نوآوری: کشورهای پیشرفته با ارائه زیرساخت‌های پژوهشی (مانند سیلیکون ولی)، نخبگان را جذب می‌کنند.\n\n\n۷. نظام آموزشی و شکاف مهارتی: بحران ساختاری ۷۰٪ پاسخ‌دهندگان معتقدند نظام آموزشی نیروهای متناسب با نیاز بازار تولید نمی‌کند. این مسئله با نظریه شکاف مهارتی18 همخوانی دارد که بر ناتوانی سیستم‌های آموزشی در پاسخگویی به تحولات سریع فناوری تأکید می‌کند."
  },
  {
    "objectID": "part05.html#آینده-منابع-انسانی-در-اقتصاد-دیجیتال-سناریوهای-پیش-رو",
    "href": "part05.html#آینده-منابع-انسانی-در-اقتصاد-دیجیتال-سناریوهای-پیش-رو",
    "title": "نتیجه‌گیری",
    "section": "",
    "text": "سناریوی خوشبینانه:\nبا اجرای سیاست‌های کلان (مانند کاهش بوروکراسی) و سازمانی (مانند بهبود حقوق)، می‌توان نرخ مهاجرت را کاهش داد.\nسناریوی بدبینانه:\nتداوم بی‌ثباتی اقتصادی و سیاسی ممکن است باعث خروج ۹۰٪ نیروهای متخصص تا سال ۲۰۳۰ شود."
  },
  {
    "objectID": "part05.html#سیاستهای-راهبردی-برای-ارتقای-سرمایه-انسانی-در-اقتصاد-دیجیتال-ایران-چارچوبی-برای-همافزایی-میان-دولت-و-بخش-خصوصی",
    "href": "part05.html#سیاستهای-راهبردی-برای-ارتقای-سرمایه-انسانی-در-اقتصاد-دیجیتال-ایران-چارچوبی-برای-همافزایی-میان-دولت-و-بخش-خصوصی",
    "title": "نتیجه‌گیری",
    "section": "",
    "text": "۱. بازگشت نخبگان: رویکردی چندبُعدی الهام‌گرفته از الگوی چین مشوق‌های ساختاری: اعمال معافیت مالیاتی ۵ ساله برای شرکت‌هایی که متخصصان بازگشتی را به‌کار می‌گیرند19. زیست‌بوم‌های نوآوری منطقه‌ای: توسعه قطب‌های فناوری در شهرهایی چون اصفهان، شیراز و تبریز، با محوریت مشارکت دولت–بخش خصوصی، مشابه شهرهای خلاق شنژن. سیاست‌های ادغام فرهنگی: طراحی برنامه‌های تطبیق فرهنگی، کارگاه‌های بین‌نسلی و حلقه‌های اجتماعی برای کاهش فاصله ذهنی میان نخبگان بازگشته و نیروهای داخلی20.\n۲. تحول در نظام آموزش و مهارت: رویکرد تلفیقی آموزش–صنعت مدل آموزش دوگانه21: ایجاد برنامه‌های مشترک میان دانشگاه، صنعت و دولت در حوزه‌هایی چون داده‌کاوی، هوش مصنوعی، امنیت سایبری، با الگوبرداری از آلمان. جذب مربیان صنعتی: دعوت از متخصصان فعال در شرکت‌های فناوری داخلی و بین‌المللی برای تدریس دروس عملی در دانشگاه‌ها، مشابه تجربه موفق Infosys در هند. اصلاح نظام رتبه‌بندی دانشگاه‌ها بر مبنای میزان اشتغال‌پذیری فارغ‌التحصیلان.\n۳. کنترل متغیرهای دافعه مهاجرت: رویکرد چندسطحی رفاه شغلی ثبات اقتصاد کلان: تقویت اعتماد به آینده از طریق سیاست‌های ضد تورمی، تسهیل سرمایه‌گذاری و ثبات نرخ ارز. حمایت از نوآوری بومی: تأسیس «صندوق ملی تثبیت نخبگان» با تمرکز بر پایداری استارتاپ‌ها و تأمین مالی پروژه‌های تحقیقاتی جوانان.\n۴. دیپلماسی تخصص‌محور و هماهنگی بین‌المللی تفاهم‌نامه‌های اشتغال و کارآموزی با کشورهای توسعه‌یافته برای تبادل تجربه و انتقال فناوری (مانند کره جنوبی، آلمان). تأسیس شبکه جهانی متخصصان ایرانی مقیم خارج جهت ایجاد همکاری‌های پروژه‌محور از راه دور.\n\n\n\n۱. نظام جبران خدمات بر اساس شایستگی واقعی22 مدل دستمزد رقابتی و شفاف بر مبنای مهارت، بهره‌وری و نوآوری فردی، نه فقط سابقه یا مدارک رسمی 23. سازوکارهای انگیزشی غیرمالی مانند سهام‌داری کارکنان، مالکیت فکری، فرصت سفر علمی و ارتقاء حرفه‌ای.\n۲. تعادل کار–زندگی با رویکرد عدالت جنسیتی الگوهای دورکاری ترکیبی24 برای کارکنان در مشاغل دانش‌بنیان، با هدف کاهش تعارض نقش‌های خانوادگی، به‌ویژه برای زنان\n۳. فرهنگ سازمانی مبتنی بر اعتماد، عدالت و شفافیت نهادهای درون‌سازمانی نظارتی مانند کمیته اخلاق حرفه‌ای و کمیته بررسی نابرابری، برای رسیدگی به تخلفات، تبعیض یا آزار. شفاف‌سازی استراتژیک از طریق جلسات دوره‌ای، تبیین اهداف کلان سازمان و مشارکت کارکنان در طراحی چشم‌انداز مشترک 25\n۴. برنامه‌های رشد حرفه‌ای و یادگیری مادام‌العمر آکادمی‌های یادگیری داخلی در شرکت‌ها برای مهارت‌آموزی عملی و مستمر بر اساس نیاز روز بازار. پیمان‌های بلندمدت با دانشگاه‌ها: حمایت از پایان‌نامه‌های مرتبط با پروژه‌های سازمان، همراه با فرصت‌های اشتغال پایدار."
  },
  {
    "objectID": "part05.html#ضرورت-پیوند-سهسطحی-توسعه-منابع-انسانی-در-ایران",
    "href": "part05.html#ضرورت-پیوند-سهسطحی-توسعه-منابع-انسانی-در-ایران",
    "title": "نتیجه‌گیری",
    "section": "",
    "text": "بازسازی ظرفیت منابع انسانی کشور در بستر اقتصاد دیجیتال مستلزم سه سطح مداخله و هماهنگی است:\nسطح کلان (دولت): مهندسی نظام آموزشی، ارتقاء کیفیت حکمرانی اقتصادی، تسهیل‌گری نهادی و سیاست‌های مشوق بازگشت نخبگان\nسطح میانی (سازمان‌ها): طراحی ساختارهای منعطف، فرهنگ انسانی، انگیزش بلندمدت و توسعه ظرفیت یادگیری\nسطح خرد (فردی): تقویت انگیزه یادگیری، مسئولیت‌پذیری حرفه‌ای و تاب‌آوری در برابر نوسانات اجتماعی.\nهمان‌طور که ایوان ایلیچ و والرشتاین هشدار داده‌اند، هرگونه توسعه انسانی بدون تعادل میان خوداتکایی داخلی و بهره‌گیری نقادانه از تجربه جهانی، به وابستگی و فرسایش سرمایه اجتماعی منجر خواهد شد.\nاقتصاد دیجیتال بدون نیروی انسانی توانمند، تنها نامی بر صفحه کاغذ خواهد بود."
  },
  {
    "objectID": "part05.html#footnotes",
    "href": "part05.html#footnotes",
    "title": "نتیجه‌گیری",
    "section": "پاورقی",
    "text": "پاورقی\n\n\nطبق آمار ۲۰۲۲↩︎\nپیرسون، ۲۰۰۰↩︎\nلیو ۲۰۰۱↩︎\nIsenberg, 2011↩︎\nآمار ۲۰۲۳↩︎\nSkills Mismatch↩︎\nگزارش بانک جهانی، ۲۰۲۲↩︎\nبکر، ۱۹۶۴↩︎\nBhagwati & Hamada, 1974↩︎\nHygiene Factor↩︎\nBlau, 1964↩︎\nآرجریس و شون، ۱۹۷۸↩︎\nHochschild, 1989↩︎\nBlau & Kahn, 2017↩︎\nKahn et al., 1964↩︎\nPush Factors↩︎\nPull Factors↩︎\nBrown et al., 2001↩︎\nمطابق مطالعات لیو، ۲۰۲۱↩︎\nپیرسون، ۲۰۰۰↩︎\nDual Education↩︎\nMerit-Based↩︎\nارجاع به نظریه انگیزشی هرتزبرگ، ۱۹۵۹↩︎\nHybrid Work↩︎\nگیدنز، ۱۹۸۴↩︎"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "اعضای تیم پژوهش",
    "section": "",
    "text": "Our Report Team\n  \n  \n \n \n  اعضای تیم پژوهش\n\n  \n  \n  \n  \n  نفیسه آزاد\n  مدیر پروژه\n  \n\n  \n  \n  \n  \n  مارال لطیفی\n  پژوهش‌گر\n  \n\n  \n  \n  \n  \n  زهرا توحیدی\n  پژوهش‌گر\n  \n\n  \n  \n  \n  \n  رامیار خلیلی\n  پژوهش‌گر و برنامه‌نویس"
  },
  {
    "objectID": "part03.html",
    "href": "part03.html",
    "title": "نمونه‌گیری",
    "section": "",
    "text": "حال باید از میان ۴۷۹۴۷۵ نفر شاغلان این حوزه، به طور تصادفی نمونه‌ای انتخاب کرد. حداقل حجم این نمونه، بر اساس فرمول کوکران با خطای ۰.۰۵ درصد، ۳۸۴ نمونه می‌شود. با توجه به این که ممکن است در پر شدن پرسش‌نامه مشکلاتی پیش‌بینی نشده رخ دهد، تصمیم گرفتیم ۵۰۰ پرسش‌نامه پر شود تا بتوان حداقل ۴۰۰ پرسش‌نامه قابل قبول داشت.\nمساله این است که این پرسش‌نامه‌ها بین چه کسانی پخش شود. یعنی افرادی را که باید پرسش‌نامه پر کنند چگونه بیابیم؟ با توجه به این که شاغلان در شرکت‌ها برای پژوهش ما مهم هستند، این افراد را باید در شرکت‌ها یافت. پس راه دسترسی به آنان از طریق شرکت‌هایشان است. حال مساله از یافتن افراد به یافتن شرکت‌ها تغییر می‌کند.\nمی‌توان شرکت‌ها را به صورت تصادفی انتخاب کرد. اما با توجه به این که شرکت‌های زیر ۵۰ نفر بخش بزرگی از شرکت‌ها را شامل می‌شوند، با احتمال بسیار بیشتری انتخاب می‌گردند و افراد شاغل در آن‌ها سهم بیشتری در میان پاسخ‌دهندگان خواهند داشت. بنابراین اریب ناپسندی در کار ایجاد خواهد شد. بنابراین انتخاب چنین روشی برای نمونه‌گیری روا نیست و باید سراغ نمونه‌گیری طبقه‌بندی رفت.\n\n\n\n\nدر نمونه‌گیری طبقه‌بندی باید به دنبال متغیری گشت که نمونه از آن نظر کاملا معرف باشد. حوزه فعالیت می‌تواند چنین متغیری قلمداد شود. اما اگر شرکت‌ها را بر اساس حوزه فعالیتشان طبقه‌بندی کنیم، تمام اعضای جمعیت احتمال انتخاب یکسانی نخواهند داشت و احتمال انتخاب از میان شرکت‌های پرجمعیت‌تر، به خاطر جمعیت بیشترشان و سهم بیشتری که در ترکیب جمعیتی هر دسته خواهند داشت، بیشتر خواهد بود.بنابراین شرایط و اهداف و انگیزه‌های کارکنان شرکت‌های بزرگ‌تر بازتاب پررنگ‌تری در تحلیل نهایی خواهد یافت. خود این شرکت‌ها به قدر کافی بر مسایل خودشان متمرکز بوده‌اند و به اندازه کافی دسترسی به تریبون‌های گوناگون دارند که مسایل خود را مطرح سازند. در این پژوهش هم به لحاظ اخلاقی، هم به لحاظ دقت آماری، بهتر است طبقه‌بندی دیگری اعمال شود.\nتعداد کارکنان متغیر دیگری است که می‌توان مبنای طبقه‌بندی باشد. از لحاظ این که مسایل شرکت‌های هم‌اندازه متناسب با سهم خودشان در بازار کار بررسی خواهد شد، مشکل نمونه‌گیری تصادفی را نخواهد داشت و از این لحاظ که گروه‌های کم‌جمعیت نیز در دسته‌های جداگانه قرار خواهند گرفت و مستقل از شرکت‌های بزرگ در نمونه‌گیری نماینده خواهند داشت، مشکل دسته‌بندی بر اساس حوزه فعالیت را نیز حل کرده‌ایم. در عین حال متغیری است که بر اساس داده‌های استخراج‌شده از جاب‌ویژن (با دقتی قابل قبول) به دست آمده است و نیازی به جمع‌آوری داده دیگری ندارد. پس مبنای دسته‌بندی را تعداد کارکنان قرار می‌دهیم و به دنبال دسته‌بندی‌های استانداردی می‌گردیم که در بازار کار ایران یا جهان مورد قبول باشند.\n\n\n\n\n\nدر ایران تعریف مشخص و واحدی از بنگاه‌های کوچک و متوسط (SME)وجود ندارد و سازمان‌ها و ارگان‌های مختلف از تعاریف متفاوتی استفاده می‌کنند. به‌طور کلی، تعریف این بنگاه‌ها اغلب بر اساس تعداد کارکنان ارائه می‌شود. سازمان‌ها بسته به نیازهای خود، طبقه‌بندی‌های گوناگونی را لحاظ کرده‌اند.\n\n\n\n\n\nوزارت صنعت، معدن و تجارت و وزارت جهاد کشاورزی: بنگاه‌های کوچک و متوسط را واحدهای صنعتی و خدماتی با کمتر از 50 نفر کارکن تعریف می‌کنند\nمرکز آمار ایران: طبقه‌بندی کسب‌وکارها به صورت زیر است:\n\n1 وتا 9 کارگر: کسب‌وکارهای خرد\n10 تا 49 کارگر: کسب‌وکارهای کوچک\n50 تا 99 کارگر: کسب‌وکارهای متوسط\nبیش از 100 کارگر: کسب‌وکارهای بزرگ\n\nآیین‌نامه اجرایی گسترش بنگاه‌های کوچک و زودبازده (1384): بنگاه‌های تولیدی (کالا و خدمات) با کمتر از 50 نفر کارکن را بنگاه کوچک می‌نامد\nاداره آمار بانک مرکزی: تعریف مشابهی ارائه کرده است که واحدهای با کمتر از 10 نفر کارکن به‌عنوان خرد، 10 تا 49 نفر کوچک، 50 تا 99 نفر متوسط و بالای 100 نفر بزرگ دانسته می‌شوند.\n\n\n\n\n\n\nبنگاه‌های کوچک و متوسط دارای ویژگی‌های کیفی متمایزی هستند. برخی از این ویژگی‌ها عبارتند از: ارائه خدمات به مشتریان محلی یا داشتن سهم کوچکی از بازار. مدیریت و مالکیت توسط یک فرد یا گروه کوچک. دریافت کمک محدود از منابع مالی و انجام فعالیت به‌طور مستقل. فعالیت در کنار مؤسسات بزرگ و تأمین محصولات برای آن‌ها. تعاریف کیفی باید شامل چند ویژگی به‌طور همزمان باشند تا ماهیت SMEها را به درستی نشان دهند. برای مثال، این بنگاه‌ها معمولاً دارای معیارهایی همچون وحدت مالکیت و مدیریت، اندازه کوچک‌تر نسبت به شاخص‌های صنعت مربوطه و محیط کاری محلی هستند.\n\n\n\n\n\nدر ایران، SMEها حدود ۷ تا ۹ درصد تولید ناخالص داخلی (GDP) را تأمین کرده و ۶۰ درصد اشتغال کشور را ایجاد می‌کنند. بر اساس آمار: ۹۴ درصد واحدهای صنعتی شامل SMEها هستند. این صنایع ۴۳ درصد از مشاغل صنعتی کشور را فراهم می‌کنند. اقتصاد کشور به شدت تحت تأثیر شرکت‌های دولتی و شبه‌دولتی است که بیش از ۸۰ درصد اقتصاد را کنترل می‌کنند، به‌ویژه در حوزه‌های نفت، گاز و پتروشیمی. این وابستگی‌ها نقش SMEها را در اقتصاد کشور پررنگ‌تر می‌سازد.\n\n\n\n\n\nوجود تعاریف مختلف از SMEها نیاز به یک تعریف مشترک را ضروری می‌سازد. این امر موجب خواهد شد:\n\nشاخص‌های اقتصادی ایران با استانداردهای بین‌المللی قابل مقایسه شوند.\nسیاست‌های اقتصادی نهادها همسو و هماهنگ گردد.\n\nاتاق بازرگانی می‌تواند نقش مهمی در توسعه SMEها ایفا کند. با تدوین یک سند ملی می‌توان ظرفیت‌ها و چالش‌های این بخش را ارزیابی و تأثیرات اقتصادی، اجتماعی و فرهنگی آن‌ها را در مناطق مختلف کشور تحلیل کرد. نتیجه‌گیری این سند می‌تواند برنامه‌ای جامع برای توسعه متوازن و پایدار SMEها بر اساس پتانسیل‌های هر منطقه ارائه دهد.\n\n\n\n\n\n\nبا این اوصاف، نمی‌توان تعریف‌های نهادهای دیگر را بر داده‌هایی که جمع آورده‌ایم اعمال کرد چون هم استانداردی در میانشان وجود ندارد و هم شرکت‌های بزرگی را که با آن‌ها نیز سر و کار داریم در بر نمی‌گیرند. با همان دسته‌بندی ارائه‌شده در وبسایت جاب‌ویژن طبقه‌بندی را انجام خواهیم داد؛ با علم به این که داده‌ها به صورت خوداظهاری در سایت ثبت می‌شوند و مکانیسمی برای تایید و صحت‌سنجی آن‌ها وجود ندارد.\n\n\n\n\n\nبا توجه به تعداد پرسش‌نامه‌های مورد نیاز، یعنی ۵۰۰ پرسش‌نامه، در ابتدا حساب کردیم هر دسته به طور کلی چند پرسش‌نامه باید پر کند. سپس از آن جا که زمان اجرای پیمایش محدود است، در نظر گرفتیم که حداقل ۳ و حداکثر ۱۰ شرکت در هر دسته انتخاب شوند. سپس برای هر دسته، این تعداد را به طور تصادفی و با استفاده از برنامه ساده پایتونی حساب کردیم. بر اساس این عدد انتخاب شده در هر دسته، محاسبه کردیم که هر شرکت چند پرسش‌نامه باید پر کند. نتیجه این محاسبات را در جدول زیر می‌بینید:\n\n\n\n\n\n\n\n\n\n\n\nکل پرسش‌نامه\nتعداد شرکت\nتعداد نفر پرکننده در شرکت\n\n\n\n\nزیر 10 نفر\n18\n4\n5\n\n\n11 تا 50 نفر\n102\n6\n17\n\n\n51 تا 200 نفر\n120\n4\n30\n\n\n201 تا 500 نفر\n60\n5\n12\n\n\n501 تا 1000 نفر\n44\n5\n9\n\n\n1001 تا 5000 نفر\n94\n5\n19\n\n\nبیش از 5000 نفر\n66\n2\n33\n\n\nکل\n504\n31\n508\n\n\n\n\n\n\n\n\n\nسپس برنامه‌ای پایتونی نوشتیم که از میان شرکت‌های استخراج و پالوده شده، بر حسب دسته‌بندی تعداد کارکنان و به تعداد شرکت‌ها، به طور تصادفی، از هر دسته شرکت‌هایی را انتخاب کند و فهرستی از ۳۱ شرکت در اختیارمان قرار دهد.\n\n\n\n\n\nهر کدام از شرکت‌های این لیست چک می‌شوند که وبسایت فعال داشته باشند. اگر داشتند، به لیست تماس اضافه می‌شوند. اگر وبسایت فعال نداشتند یا اطلاعات موثقی از فعالیتشان در جستجوی ساده اینترنتی یافت نشد، آن‌ها را از لیست ۳۱ تایی خود خارج می‌کنیم و شرکتی از همان دسته‌بندی جایگزین آن‌ها می‌شود. در صورتی که با شرکتی تماس گرفته شد و مایل به همکاری در این پژوهش نبودند، آنان نیز با شرکتی دیگر جایگزین خواهند شد. نکته مهم قابل توجه این است که پس از پاکسازی اولیه و تثبیت ۸۳۶۱ شرکت، تعداد کل شرکت‌ها تغییری نمی‌کند، یعنی شرکتی از لیست اصلی شرکت‌ها حذف نمی‌گردد. بلکه از لیست‌های کاری حذف می‌شود. حذف از لیست اصلی به معنای تغییر در احتمال انتخاب شرکت‌هاست، شرکت‌های بعد از مرحله حذف احتمال بیشتری برای انتخاب شدن دارند. کارکنان آنان نیز با احتمالی متفاوت انتخاب می‌شوند. پس، اگر در میانه راه شرکتی را حذف کرده باشیم، با نمونه‌ای از افراد تصادفی روبرو هستیم که با احتمال یکسانی انتخاب نشده‌اند و نتایج تحلیل نسبت به این تغییرات بی‌تفاوت نخواهد بود."
  },
  {
    "objectID": "part03.html#دستهبندی",
    "href": "part03.html#دستهبندی",
    "title": "نمونه‌گیری",
    "section": "",
    "text": "در نمونه‌گیری طبقه‌بندی باید به دنبال متغیری گشت که نمونه از آن نظر کاملا معرف باشد. حوزه فعالیت می‌تواند چنین متغیری قلمداد شود. اما اگر شرکت‌ها را بر اساس حوزه فعالیتشان طبقه‌بندی کنیم، تمام اعضای جمعیت احتمال انتخاب یکسانی نخواهند داشت و احتمال انتخاب از میان شرکت‌های پرجمعیت‌تر، به خاطر جمعیت بیشترشان و سهم بیشتری که در ترکیب جمعیتی هر دسته خواهند داشت، بیشتر خواهد بود.بنابراین شرایط و اهداف و انگیزه‌های کارکنان شرکت‌های بزرگ‌تر بازتاب پررنگ‌تری در تحلیل نهایی خواهد یافت. خود این شرکت‌ها به قدر کافی بر مسایل خودشان متمرکز بوده‌اند و به اندازه کافی دسترسی به تریبون‌های گوناگون دارند که مسایل خود را مطرح سازند. در این پژوهش هم به لحاظ اخلاقی، هم به لحاظ دقت آماری، بهتر است طبقه‌بندی دیگری اعمال شود.\nتعداد کارکنان متغیر دیگری است که می‌توان مبنای طبقه‌بندی باشد. از لحاظ این که مسایل شرکت‌های هم‌اندازه متناسب با سهم خودشان در بازار کار بررسی خواهد شد، مشکل نمونه‌گیری تصادفی را نخواهد داشت و از این لحاظ که گروه‌های کم‌جمعیت نیز در دسته‌های جداگانه قرار خواهند گرفت و مستقل از شرکت‌های بزرگ در نمونه‌گیری نماینده خواهند داشت، مشکل دسته‌بندی بر اساس حوزه فعالیت را نیز حل کرده‌ایم. در عین حال متغیری است که بر اساس داده‌های استخراج‌شده از جاب‌ویژن (با دقتی قابل قبول) به دست آمده است و نیازی به جمع‌آوری داده دیگری ندارد. پس مبنای دسته‌بندی را تعداد کارکنان قرار می‌دهیم و به دنبال دسته‌بندی‌های استانداردی می‌گردیم که در بازار کار ایران یا جهان مورد قبول باشند."
  },
  {
    "objectID": "part03.html#تعریف-و-اهمیت-smeها-در-ایران",
    "href": "part03.html#تعریف-و-اهمیت-smeها-در-ایران",
    "title": "نمونه‌گیری",
    "section": "",
    "text": "در ایران تعریف مشخص و واحدی از بنگاه‌های کوچک و متوسط (SME)وجود ندارد و سازمان‌ها و ارگان‌های مختلف از تعاریف متفاوتی استفاده می‌کنند. به‌طور کلی، تعریف این بنگاه‌ها اغلب بر اساس تعداد کارکنان ارائه می‌شود. سازمان‌ها بسته به نیازهای خود، طبقه‌بندی‌های گوناگونی را لحاظ کرده‌اند.\n\n\n\n\n\nوزارت صنعت، معدن و تجارت و وزارت جهاد کشاورزی: بنگاه‌های کوچک و متوسط را واحدهای صنعتی و خدماتی با کمتر از 50 نفر کارکن تعریف می‌کنند\nمرکز آمار ایران: طبقه‌بندی کسب‌وکارها به صورت زیر است:\n\n1 وتا 9 کارگر: کسب‌وکارهای خرد\n10 تا 49 کارگر: کسب‌وکارهای کوچک\n50 تا 99 کارگر: کسب‌وکارهای متوسط\nبیش از 100 کارگر: کسب‌وکارهای بزرگ\n\nآیین‌نامه اجرایی گسترش بنگاه‌های کوچک و زودبازده (1384): بنگاه‌های تولیدی (کالا و خدمات) با کمتر از 50 نفر کارکن را بنگاه کوچک می‌نامد\nاداره آمار بانک مرکزی: تعریف مشابهی ارائه کرده است که واحدهای با کمتر از 10 نفر کارکن به‌عنوان خرد، 10 تا 49 نفر کوچک، 50 تا 99 نفر متوسط و بالای 100 نفر بزرگ دانسته می‌شوند.\n\n\n\n\n\n\nبنگاه‌های کوچک و متوسط دارای ویژگی‌های کیفی متمایزی هستند. برخی از این ویژگی‌ها عبارتند از: ارائه خدمات به مشتریان محلی یا داشتن سهم کوچکی از بازار. مدیریت و مالکیت توسط یک فرد یا گروه کوچک. دریافت کمک محدود از منابع مالی و انجام فعالیت به‌طور مستقل. فعالیت در کنار مؤسسات بزرگ و تأمین محصولات برای آن‌ها. تعاریف کیفی باید شامل چند ویژگی به‌طور همزمان باشند تا ماهیت SMEها را به درستی نشان دهند. برای مثال، این بنگاه‌ها معمولاً دارای معیارهایی همچون وحدت مالکیت و مدیریت، اندازه کوچک‌تر نسبت به شاخص‌های صنعت مربوطه و محیط کاری محلی هستند.\n\n\n\n\n\nدر ایران، SMEها حدود ۷ تا ۹ درصد تولید ناخالص داخلی (GDP) را تأمین کرده و ۶۰ درصد اشتغال کشور را ایجاد می‌کنند. بر اساس آمار: ۹۴ درصد واحدهای صنعتی شامل SMEها هستند. این صنایع ۴۳ درصد از مشاغل صنعتی کشور را فراهم می‌کنند. اقتصاد کشور به شدت تحت تأثیر شرکت‌های دولتی و شبه‌دولتی است که بیش از ۸۰ درصد اقتصاد را کنترل می‌کنند، به‌ویژه در حوزه‌های نفت، گاز و پتروشیمی. این وابستگی‌ها نقش SMEها را در اقتصاد کشور پررنگ‌تر می‌سازد.\n\n\n\n\n\nوجود تعاریف مختلف از SMEها نیاز به یک تعریف مشترک را ضروری می‌سازد. این امر موجب خواهد شد:\n\nشاخص‌های اقتصادی ایران با استانداردهای بین‌المللی قابل مقایسه شوند.\nسیاست‌های اقتصادی نهادها همسو و هماهنگ گردد.\n\nاتاق بازرگانی می‌تواند نقش مهمی در توسعه SMEها ایفا کند. با تدوین یک سند ملی می‌توان ظرفیت‌ها و چالش‌های این بخش را ارزیابی و تأثیرات اقتصادی، اجتماعی و فرهنگی آن‌ها را در مناطق مختلف کشور تحلیل کرد. نتیجه‌گیری این سند می‌تواند برنامه‌ای جامع برای توسعه متوازن و پایدار SMEها بر اساس پتانسیل‌های هر منطقه ارائه دهد."
  },
  {
    "objectID": "part03.html#انتخاب-مبنای-دستهبندی",
    "href": "part03.html#انتخاب-مبنای-دستهبندی",
    "title": "نمونه‌گیری",
    "section": "",
    "text": "با این اوصاف، نمی‌توان تعریف‌های نهادهای دیگر را بر داده‌هایی که جمع آورده‌ایم اعمال کرد چون هم استانداردی در میانشان وجود ندارد و هم شرکت‌های بزرگی را که با آن‌ها نیز سر و کار داریم در بر نمی‌گیرند. با همان دسته‌بندی ارائه‌شده در وبسایت جاب‌ویژن طبقه‌بندی را انجام خواهیم داد؛ با علم به این که داده‌ها به صورت خوداظهاری در سایت ثبت می‌شوند و مکانیسمی برای تایید و صحت‌سنجی آن‌ها وجود ندارد."
  },
  {
    "objectID": "part03.html#انجام-نمونهگیری",
    "href": "part03.html#انجام-نمونهگیری",
    "title": "نمونه‌گیری",
    "section": "",
    "text": "با توجه به تعداد پرسش‌نامه‌های مورد نیاز، یعنی ۵۰۰ پرسش‌نامه، در ابتدا حساب کردیم هر دسته به طور کلی چند پرسش‌نامه باید پر کند. سپس از آن جا که زمان اجرای پیمایش محدود است، در نظر گرفتیم که حداقل ۳ و حداکثر ۱۰ شرکت در هر دسته انتخاب شوند. سپس برای هر دسته، این تعداد را به طور تصادفی و با استفاده از برنامه ساده پایتونی حساب کردیم. بر اساس این عدد انتخاب شده در هر دسته، محاسبه کردیم که هر شرکت چند پرسش‌نامه باید پر کند. نتیجه این محاسبات را در جدول زیر می‌بینید:\n\n\n\n\n\n\n\n\n\n\n\nکل پرسش‌نامه\nتعداد شرکت\nتعداد نفر پرکننده در شرکت\n\n\n\n\nزیر 10 نفر\n18\n4\n5\n\n\n11 تا 50 نفر\n102\n6\n17\n\n\n51 تا 200 نفر\n120\n4\n30\n\n\n201 تا 500 نفر\n60\n5\n12\n\n\n501 تا 1000 نفر\n44\n5\n9\n\n\n1001 تا 5000 نفر\n94\n5\n19\n\n\nبیش از 5000 نفر\n66\n2\n33\n\n\nکل\n504\n31\n508\n\n\n\n\n\n\n\n\n\nسپس برنامه‌ای پایتونی نوشتیم که از میان شرکت‌های استخراج و پالوده شده، بر حسب دسته‌بندی تعداد کارکنان و به تعداد شرکت‌ها، به طور تصادفی، از هر دسته شرکت‌هایی را انتخاب کند و فهرستی از ۳۱ شرکت در اختیارمان قرار دهد."
  },
  {
    "objectID": "part03.html#چرخه-انتخاب-شرکتها",
    "href": "part03.html#چرخه-انتخاب-شرکتها",
    "title": "نمونه‌گیری",
    "section": "",
    "text": "هر کدام از شرکت‌های این لیست چک می‌شوند که وبسایت فعال داشته باشند. اگر داشتند، به لیست تماس اضافه می‌شوند. اگر وبسایت فعال نداشتند یا اطلاعات موثقی از فعالیتشان در جستجوی ساده اینترنتی یافت نشد، آن‌ها را از لیست ۳۱ تایی خود خارج می‌کنیم و شرکتی از همان دسته‌بندی جایگزین آن‌ها می‌شود. در صورتی که با شرکتی تماس گرفته شد و مایل به همکاری در این پژوهش نبودند، آنان نیز با شرکتی دیگر جایگزین خواهند شد. نکته مهم قابل توجه این است که پس از پاکسازی اولیه و تثبیت ۸۳۶۱ شرکت، تعداد کل شرکت‌ها تغییری نمی‌کند، یعنی شرکتی از لیست اصلی شرکت‌ها حذف نمی‌گردد. بلکه از لیست‌های کاری حذف می‌شود. حذف از لیست اصلی به معنای تغییر در احتمال انتخاب شرکت‌هاست، شرکت‌های بعد از مرحله حذف احتمال بیشتری برای انتخاب شدن دارند. کارکنان آنان نیز با احتمالی متفاوت انتخاب می‌شوند. پس، اگر در میانه راه شرکتی را حذف کرده باشیم، با نمونه‌ای از افراد تصادفی روبرو هستیم که با احتمال یکسانی انتخاب نشده‌اند و نتایج تحلیل نسبت به این تغییرات بی‌تفاوت نخواهد بود."
  },
  {
    "objectID": "part04.html",
    "href": "part04.html",
    "title": "نتیجه پرسش‌نامه",
    "section": "",
    "text": "پرسش‌نامه‌ها در سایت پرس‌لاین ساخته شد و به طور آنلاین بر اساس جمعیت نمونه در اختیار مشارکت‌کنندگان قرار گرفت. با اضافه شدن هر پاسخ، از طریق API پرس‌لاین فایل داده‌ها به صورت روزانه دانلود می‌شود و بر اساس آن جدول‌ها و نمودارهای آماری تولید می‌گردند.\n\n\nCode\n# imports and functions\nimport json\nimport requests\nimport arabic_reshaper\nfrom bidi.algorithm import get_display\nfrom matplotlib import font_manager, rc\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport matplotlib.cm as cm\nimport matplotlib.colors as mcolors\nfrom matplotlib.lines import Line2D\nfrom collections import Counter, defaultdict\n\n\nCOLORS = {\n    \"danger\": \"#e74c3c\",\n    \"warning\": \"#f39c12\",\n    \"primary\": \"#375a7f\",\n    \"info\": \"#3498db\",\n    \"success\": \"#00bc8c\",\n    \"secondary\": \"#444\",\n    \"light\": \"#adb5bd\",\n    \"dark\": \"#303030\"\n}\n\n\nSURVEY_ID = \"1617468\"\n\nBASE_SURVEY_URL = \"https://survey.porsline.ir\"\n\nwith open(\"psk.txt\",'r') as fh:\n    api_key = fh.readline().strip()\napi_key_text = f\"API-Key {api_key}\"\n\nheaders = {\n  'Authorization': api_key_text,\n  'Content-Type': 'application/json'\n}\n\nurl = BASE_SURVEY_URL + f\"/api/v2/surveys/{SURVEY_ID}/responses/results-table\"\n\nresponse = requests.request(\"GET\", url, headers=headers)\nn_responders = int(response.json()[\"responders_count\"])\n\n\n\n# تابع تبدیل متن فارسی\ndef prepare_persian_text(text):\n    reshaped_text = arabic_reshaper.reshape(text)\n    return get_display(reshaped_text)\n# تنظیم فونت فارسی\nfont_path = \"fonts/xb-zar/Zar/XB Zar.ttf\"  # مسیر فونت  # مسیر فونت فارسی\nprop = font_manager.FontProperties(fname=font_path)\nrc('font', family=prop.get_name())\n\n\n\n# Load the excel file\ndf = pd.read_excel('Phase02.xlsx')\n\n\n# Pre-Proccessing\n# ======================================================================================================\n\n## Size unification\n\nordered_company_sizes = [\n    'کمتر از ۵۰ نفر',\n    '۵۱ تا ۲۰۰ نفر',  # Combined category\n    '۲۰۰ تا ۵۰۰ نفر',\n    'بیش از ۵۰۰ نفر'\n]\nordered_ages = [\n    'کمتر از ۲۵ سال',\n    '۲۶ تا ۳۵ سال',\n    '۳۶ تا ۴۵ سال',\n    'بالای ۴۵ سال'\n]\n\n# Create a mapping from the original size values to the desired order\nsize_mapping = {\n    size: '۵۱ تا ۲۰۰ نفر'\n    for size in df['اندازه شرکت:'].unique()\n    if '۵۱ تا ۱۰۰ نفر' in size or '۱۰۱ تا ۲۰۰ نفر' in size\n}\nsize_mapping.update({\n    size: size\n    for size in df['اندازه شرکت:'].unique()\n    if 'کمتر از ۵۰ نفر' in size or '۲۰۰ تا ۵۰۰ نفر' in size or 'بیش از ۵۰۰ نفر' in size\n})\n\ndf['اندازه شرکت:'] = df['اندازه شرکت:'].map(size_mapping)\n\ndf.insert(17, 'score_section_2', None)\ndf.insert(24, 'score_section_3', None)\ndf.insert(31, 'score_section_4', None)\ndf.insert(36, 'score_section_5', None)\ndf.insert(43, 'score_section_6', None)\ndf.insert(48, 'score_section_7', None)\ndf.insert(54, 'score_section_8', None)\n\nQUESTIONS = df.columns.tolist()\n\nsection2_answer_order = [\n    'به هیچ وجه',\n    'کم',\n    'متوسط',\n    'زیاد',\n    'خیلی زیاد'\n]\n\nsection3_answer_order = [\n    'خیلی مخالفم',\n    'مخالفم',\n    'تا حدودی',\n    'موافقم',\n    \"خیلی موافقم\"\n]\n\nsection6_answer_order = [\n    'به هیچ وجه',\n    'کم',\n    'تا حدودی',\n    'زیاد',\n    'خیلی زیاد'\n]\n\n# Assiging Questions to each sections\n\nsection_2_questions = [QUESTIONS[11], QUESTIONS[12],QUESTIONS[13],QUESTIONS[14],QUESTIONS[15],QUESTIONS[16]]\nsection_3_questions = [QUESTIONS[18], QUESTIONS[19], QUESTIONS[20], QUESTIONS[21], QUESTIONS[22], QUESTIONS[23]]\nsection_4_questions = [QUESTIONS[25], QUESTIONS[26], QUESTIONS[27], QUESTIONS[28], QUESTIONS[29], QUESTIONS[30]]\nsection_5_questions = [QUESTIONS[32], QUESTIONS[33], QUESTIONS[34], QUESTIONS[35]]\nsection_6_questions = [QUESTIONS[37], QUESTIONS[38], QUESTIONS[39], QUESTIONS[40], QUESTIONS[41], QUESTIONS[42]]\nsection_7_questions = [QUESTIONS[44], QUESTIONS[45], QUESTIONS[46], QUESTIONS[47]]\nsection_8_questions = [QUESTIONS[49], QUESTIONS[50], QUESTIONS[51], QUESTIONS[52], QUESTIONS[53]]\nsection_9_questions = [QUESTIONS[55], QUESTIONS[56], QUESTIONS[57], QUESTIONS[58], QUESTIONS[59], QUESTIONS[60], QUESTIONS[61]]\n\n\n\ndef compute_section_score(df, question_cols, score_col, answer_order):\n    score_map = {text: i + 1 for i, text in enumerate(answer_order)}\n    \n    # Map answers to scores column by column\n    numeric_answers = df[question_cols].apply(lambda col: col.map(score_map))\n    \n    # Compute the row-wise average (skip NaNs)\n    df[score_col] = numeric_answers.mean(axis=1)\n    df[score_col] = df[score_col].round(3)\n    \n    return df\n\n# Computing scores for each section\n\ndf = compute_section_score(df, section_2_questions, 'score_section_2' , section2_answer_order)\ndf = compute_section_score(df, section_3_questions, 'score_section_3' , section3_answer_order)\ndf = compute_section_score(df, section_4_questions, 'score_section_4' , section3_answer_order)\ndf = compute_section_score(df, section_5_questions, 'score_section_5' , section3_answer_order)\ndf = compute_section_score(df, section_6_questions, 'score_section_6' , section6_answer_order)\ndf = compute_section_score(df, section_7_questions, 'score_section_7' , section6_answer_order)\ndf = compute_section_score(df, section_8_questions, 'score_section_8' , section6_answer_order)\n\n# University mapping\n\ndef load_university_map(filepath=\"universities.json\"):\n    with open(filepath, \"r\", encoding=\"utf-8\") as f:\n        return json.load(f)\n\ndef classify_universities(df, column, uni_map, inplace=True):\n    cleaned_series = df[column].str.strip()\n    mapped = cleaned_series.map(uni_map).fillna(\"نامشخص\")\n    if inplace:\n        df[column] = mapped\n    else:\n        return mapped\n\nuni_map = load_university_map()\nclassify_universities(df, QUESTIONS[5], uni_map)\n\n# =======================================================================================================\n\ndef plot_builder(df, column_name, ordered_list=None, colors=None, title=None, xlabel=None, ylabel=None):\n  \"\"\"\n  Generates a bar chart from a DataFrame column with optional ordering,\n  coloring, and hatching, with automatic width adjustment.\n \n\n  Args:\n  df (pd.DataFrame): The DataFrame containing the data.\n  column_name (str): The name of the column to plot.\n  ordered_list (list, optional): A list specifying the desired order of categories.\n  colors (dict, optional): A dictionary mapping categories to colors.\n  title (str, optional): The title of the plot.\n  xlabel (str, optional): The x-axis label.\n  ylabel (str, optional): The y-axis label.\n  \"\"\"\n \n\n  # Check if the column exists\n  if column_name not in df.columns:\n    print(f\"Error: The column '{column_name}' does not exist in the DataFrame.\")\n    return  # Exit the function if the column is missing\n \n\n  if ordered_list:\n      # Create a mapping and categorical column for sorting\n      value_mapping = {\n      value: ordered_value\n      for ordered_value in ordered_list\n      for value in df[column_name].unique()\n      if ordered_value in df[column_name].unique() and ordered_value == value\n        }\n\n      categorical_value = pd.Categorical(df[column_name].map(value_mapping), categories=ordered_list, ordered=True)\n      df_sorted = df.assign(sorted_value=categorical_value).sort_values('sorted_value')\n      \n      unique_values_sorted = df_sorted['sorted_value'].unique()\n      counts_sorted = df_sorted['sorted_value'].value_counts().reindex(ordered_list).fillna(0)\n      x_labels = [prepare_persian_text(val) for val in counts_sorted.index]\n  else:\n      # If no ordered list is provided, use the default order\n      counts_sorted = df[column_name].value_counts()\n      x_labels = [prepare_persian_text(val) for val in counts_sorted.index]\n      unique_values_sorted = counts_sorted.index\n  \n\n  # Determine colors and hatching\n  hatch_patterns = ['/', '.', 'o', None]  # Hatch patterns, None for no hatch\n  if colors:\n      bar_colors = [colors.get(val, COLORS['dark']) for val in unique_values_sorted] # Use 'dark' as fallback\n      bar_hatches = [None] * len(unique_values_sorted) # No hatches if colors are provided\n  else:\n      default_color_list = [COLORS['primary'], COLORS['success'], COLORS['warning'], COLORS['danger'], COLORS['info']]\n      bar_colors = [default_color_list[i % len(default_color_list)] for i in range(len(unique_values_sorted))]\n      if len(unique_values_sorted) &gt; len(default_color_list):\n          bar_hatches = [hatch_patterns[i % len(hatch_patterns)] for i in range(len(unique_values_sorted))]\n      else:\n          bar_hatches = [None] * len(unique_values_sorted)\n \n  \n  # Calculate figure width\n  num_bars = len(counts_sorted)\n  bar_width = 0.8  # Default bar width\n  spacing = 0.2  # Spacing between bars\n  estimated_plot_width = num_bars * (bar_width + spacing)\n  min_width = 8  # Minimum figure width\n  fig_width = max(min_width, estimated_plot_width)\n  plt.figure(figsize=(fig_width, 6))  # Adjust height as needed\n \n\n  # Create the bar chart\n  for i, (val, count) in enumerate(counts_sorted.items()):\n      plt.bar(val, count, color=bar_colors[i], hatch=bar_hatches[i])\n \n\n  # Add labels and title\n  if title:\n      plt.title(prepare_persian_text(title))\n  if xlabel:\n      plt.xlabel(prepare_persian_text(xlabel))\n  if ylabel:\n      plt.ylabel(prepare_persian_text(ylabel))\n \n\n  # Add counts above each bar and adjust y-axis limits\n  max_count = max(counts_sorted.values)\n  plt.ylim(0, max_count * 1.1)\n  for i, count in enumerate(counts_sorted.values):\n      per = round((count / sum(counts_sorted)) * 100, 2)\n      plt.text(counts_sorted.index[i], count + max_count * 0.02, str(int(count)) + f\", ({per}%) \", ha='center', va='bottom')\n \n\n  # Calculating rotation angel\n  if num_bars == 2:\n      ang = 0\n  else:\n      ang = 45\n  # Change x-axis labels\n  plt.xticks(counts_sorted.index, x_labels, rotation= ang, ha='right')\n \n\n  # Show the plot\n  plt.tight_layout()\n  plt.show()\n\n\ndef plot_stacked_bar_chart_from_counts(counts_dict, title=\"Stacked Bar Chart\",\n                    xlabel=\"Category\", ylabel=\"Count\",\n                    colors=None, max_labels=10):\n  \"\"\"\n  Generates stacked bar charts from a counts dictionary (like output of count_elements_in_dataframe).\n  Applies prepare_persian_text to labels and uses COLORS and hatch patterns.\n \n\n  Args:\n  counts_dict (dict):  A dictionary where keys are column names (x-axis categories)\n              and values are dictionaries of element counts.\n  title (str, optional): Title of the plot.\n  xlabel (str, optional): Label for the x-axis.\n  ylabel (str, optional): Label for the y-axis.\n  colors (dict, optional):  Dictionary mapping elements to colors.\n  max_labels (int, optional): Maximum number of x-axis labels to display.\n  \"\"\"\n \n  farsi_priority = [\n    \"اولویت اول\",\n    \"اولویت دوم\",\n    \"اولویت سوم\",\n    \"اولویت چهارم\",\n    \"اولویت پنجم\",\n    \"اولویت ششم\",\n    \"اولویت هفتم\",\n    \"اولویت هشتم\"\n  ]\n  farsi_labels = [prepare_persian_text(label) for label in farsi_priority]\n    \n  fig, ax = plt.subplots()\n  bottom = np.zeros(len(counts_dict))\n\n  x_labels = list(counts_dict.keys())\n \n\n  # Filter x-axis labels if there are too many\n  if len(x_labels) &gt; max_labels:\n      x_labels_filtered = [prepare_persian_text(label) for label in x_labels[:max_labels]] + [prepare_persian_text('Other')]\n      counts_dict_filtered = {k: v for k in x_labels if k in x_labels[:max_labels]}\n      counts_dict_filtered[prepare_persian_text('Other')] = {}\n      for k in x_labels[max_labels:]:\n          for item, count in counts_dict[k].items():\n              if pd.notna(item):\n                  counts_dict_filtered[prepare_persian_text('Other')].get(item, 0) + count\n                  x_labels = x_labels_filtered\n                  counts_dict = counts_dict_filtered\n  else:\n      x_labels = [prepare_persian_text(label) for label in x_labels]\n \n\n  all_elements = set()\n  for counts in counts_dict.values():\n      for element in counts.keys():\n          if pd.notna(element): # Ignore NaN in element collection\n              all_elements.add(element)\n      elements = sorted(list(all_elements))\n \n\n  # Color Handling (No Hatches)\n  if colors is None:\n      default_color_list = [COLORS['primary'], COLORS['success'], COLORS['warning'], COLORS['danger'],\n                   COLORS.get('purple', 'purple'), COLORS.get('violet', 'violet'), COLORS['info'],COLORS.get('olive', 'olive')] # Added purple and pink\n      colors = {elements[i % len(elements)]: default_color_list[i % len(default_color_list)] for i in range(len(elements))}\n      bar_hatches = [None] * len(elements) # No hatches\n  else:\n      bar_hatches = [None] * len(elements) # No hatches if custom colors\n\n  # Calculate bar width for legend positioning\n  bar_width = 0.8  # Default bar width (adjust as needed)\n  legend_x_offset = bar_width\n  rightmost_bar_x = len(x_labels) - 1 # X-position of the rightmost bar (0-indexed)\n \n\n  for i, col in enumerate(x_labels):\n      counts = counts_dict[col]\n      current_bottom = np.zeros(1) # Initialize bottom for text placement within each bar\n      for j, element in enumerate(elements):\n          count = counts.get(element, 0)\n          if count &gt; 0:\n              ax.bar(col, count, bottom=bottom[i], color=colors.get(element, 'gray'), hatch=bar_hatches[j])\n              # Add count labels\n              text_y = bottom[i] + count / 2\n              ax.text(col, text_y, str(count), ha='center', va='center', color='white', fontsize=11) # Adjust fontsize as needed\n              bottom[i] += count\n\n          ax.set_xticks(range(len(x_labels)), farsi_labels[:len(x_labels)], rotation=45, ha='right')\n          ax.set_xlabel(prepare_persian_text(xlabel))\n          ax.set_ylabel(prepare_persian_text(ylabel))\n          ax.set_title(prepare_persian_text(title))\n    \n  ax.legend(handles=[plt.Rectangle((0, 0), 1, 1, color=colors.get(elements[i], 'gray'))\n         for i in sorted(range(len(elements)), reverse=True)],\n       labels=[prepare_persian_text(el) for el in sorted(elements, reverse = True)], title=prepare_persian_text(\"Categories\"),\n       bbox_to_anchor=(0.2 + legend_x_offset, 0.5), loc='upper left') # Position legend\n  \n\n  plt.show()\n\n\n\ndef column_elemnt_counter (df, hdr):\n    column_name= hdr\n    separator = \"،\"\n    new_data = []\n    max_items = 0\n    for _, row in df.iterrows():\n        items = str(row[column_name]).split(separator)\n        items = [item.strip() for item in items]\n        new_data.append(items)\n        max_items = max(max_items, len(items))\n        new_df = pd.DataFrame(new_data)\n        new_df.columns = [f'priority{str(i + 1).zfill(2)}' for i in range(max_items)] # Create column name\n\n    column_element_counts = {}\n    for col in new_df.columns:\n        try:\n            new_df[col] = new_df[col].replace('nan', None)\n        # Use value_counts() with dropna=False to include NaN counts\n            counts = new_df[col].value_counts(dropna=True)\n            # Convert to dictionary, handling potential type issues in keys\n            column_element_counts[col] = {str(k): int(v) for k, v in counts.items()} \n        except TypeError as e:\n            print(f\"TypeError encountered in column '{col}': {e}\")\n            # Handle the error appropriately, e.g., skip the column or use a default\n            column_element_counts[col] = {}  # Or some other default\n        except Exception as e:\n            print(f\"An unexpected error occurred in column '{col}': {e}\")\n            column_element_counts[col] = {}  # Or some other default\n\n    return column_element_counts\n\n\n\ndef plot_responses_by_category(\n    df,\n    category_col,\n    question_col,\n    ordered_list=None,\n    category_sort=None,\n    COLORS=COLORS,\n    title=None,\n    xlabel=None,\n    ylabel=None,\n    percent=False,\n):\n    \"\"\"\n    Plots how different categories answered a specific question using Matplotlib.\n\n    Args:\n        df (pd.DataFrame): DataFrame containing the data.\n        category_col (str): Column with categories (e.g., gender).\n        question_col (str): Column with responses to the question.\n        title (str, optional): Plot title.\n        percent (bool, optional): If True, show percent instead of count.\n        ordered_list (list, optional): Custom order for question responses (bars).\n        COLORS (dict, optional): Dict of color values.\n        category_sort (list, optional): Custom order for categories (x-axis).\n        xlabel (str, optional): X-axis label.\n        ylabel (str, optional): Y-axis label.\n    \"\"\"\n\n    # Group counts\n    count_df = df.groupby([category_col, question_col]).size().unstack(fill_value=0)\n\n    # Reorder columns if ordered_list is provided\n    if ordered_list:\n        count_df = count_df[[col for col in ordered_list if col in count_df.columns]]\n\n    # Reorder index (categories) if category_sort is provided\n    if category_sort:\n        count_df = count_df.reindex([cat for cat in category_sort if cat in count_df.index])\n\n    # Convert to percent if needed\n    if percent:\n        count_df = count_df.div(count_df.sum(axis=1), axis=0) * 100\n\n    # Prepare texts\n    count_df.index = [prepare_persian_text(str(idx)) for idx in count_df.index]\n    count_df.columns = [prepare_persian_text(str(col)) for col in count_df.columns]\n\n    # Plot sizing\n    num_categories = count_df.shape[0]\n    bar_width = 0.8\n    spacing = 0.3\n    estimated_width = num_categories * (bar_width + spacing)\n    fig_width = max(8, estimated_width)\n    plt.figure(figsize=(fig_width, 6))\n\n    # Define colors\n    n_bars = len(count_df.columns)\n    color_list = []\n\n    if COLORS:\n        color_list = list(COLORS.values())\n\n    # Extend with Set2 only if needed (avoid duplicates)\n    if n_bars &gt; len(color_list):\n        extra_colors = list(cm.Set2.colors)\n        needed = n_bars - len(color_list)\n        color_list += extra_colors[:needed]\n\n    bar_colors = color_list[:n_bars]\n\n    # Plot\n    ax = count_df.plot(\n        kind='bar',\n        stacked=percent,\n        edgecolor='black',\n        color=bar_colors,\n        width=bar_width,\n        ax=plt.gca()\n    )\n\n    # Title\n    if title:\n        ax.set_title(prepare_persian_text(title), fontsize=16, pad=20)\n\n    # Axis labels\n    if xlabel:\n        ax.set_xlabel(prepare_persian_text(xlabel), fontsize=14, labelpad=10)\n    if ylabel:\n        label = ylabel if ylabel else ('درصد' if percent else 'تعداد')\n        ax.set_ylabel(prepare_persian_text(label), fontsize=14, labelpad=10)\n\n    # Tick styling\n    ax.set_xticks(range(len(count_df.index)))\n    ax.set_xticklabels(count_df.index, rotation=45, ha='right', fontsize=12)\n    ax.tick_params(axis='x', pad=10)\n\n    # Label bars\n    max_val = count_df.values.max()\n    for container in ax.containers:\n        ax.bar_label(container,\n                     fmt='%.1f%%' if percent else '%.0f',\n                     label_type='edge',\n                     fontsize=10,\n                     padding=3)\n\n    # Adjust spacing\n    ax.set_ylim(0, max_val * 1.15)\n\n    # Legend outside\n    ax.legend(\n        title=prepare_persian_text('پاسخ'),\n        bbox_to_anchor=(1.01, 1),\n        loc='upper left',\n        borderaxespad=0.\n    )\n\n    plt.subplots_adjust(right=0.8)\n    plt.show()\n\ndef plot_score_hist_by_category(\n    df,\n    category_col,\n    score_col,\n    bins=5,\n    COLORS=COLORS,\n    title=None,\n    xlabel=None,\n    ylabel=None,\n    category_sort=None\n):\n    \"\"\"\n    Plots histograms of a numeric score column with one subplot per category.\n\n    Args:\n        df (pd.DataFrame): DataFrame with the data.\n        category_col (str): Column for grouping (e.g., gender).\n        score_col (str): Numeric column to plot histogram for.\n        bins (int or list, optional): Number of bins or bin edges.\n        COLORS (dict): Dict of colors for each category.\n        title (str, optional): Overall plot title.\n        xlabel (str, optional): X-axis label (shared).\n        ylabel (str, optional): Y-axis label (shared).\n        category_sort (list, optional): Custom order for categories.\n    \"\"\"\n\n    # Determine categories\n    categories = df[category_col].dropna().unique()\n    if category_sort:\n        categories = [cat for cat in category_sort if cat in categories]\n    else:\n        categories = sorted(categories)\n\n    n_cats = len(categories)\n    fig, axes = plt.subplots(n_cats, 1, figsize=(8, 5 * n_cats), sharex=True)\n\n    if n_cats == 1:\n        axes = [axes]\n\n    fallback_colors = list(cm.Set2.colors)\n\n    # Consistent binning and x-limits\n    min_score = 1\n    max_score = 5\n    bin_edges = np.linspace(min_score, max_score, bins + 1)\n\n    for i, cat in enumerate(categories):\n        ax = axes[i]\n        subset = df[df[category_col] == cat][score_col].dropna()\n        color = COLORS.get(cat, fallback_colors[i % len(fallback_colors)]) if COLORS else fallback_colors[i % len(fallback_colors)]\n    \n        # Histogram\n        counts, bins_edges, patches = ax.hist(\n            subset,\n            bins=bins,\n            color=color,\n            edgecolor='black',\n            alpha=0.8\n        )\n    \n        # Mean line\n        mean_val = subset.mean()\n        ax.axvline(mean_val, color='black', linestyle='--', linewidth=1.5)\n        ax.text(mean_val + 0.001, ax.get_ylim()[1] * 1.02, \"\",\n                rotation=0, fontsize=10, color=COLORS['primary'])\n\n        # Median Line\n        median = subset.median()\n\n        ax.axvline(median, color='orange', linestyle='--', linewidth=2, label=prepare_persian_text('میانه'))\n        \n        # Optional: add label on the line\n        ax.text(median, ax.get_ylim()[1] * 0.9, \"\",\n                rotation=90, color='red', fontsize=10, ha='right')\n\n        # legends for mead and median\n        legend_elements = [\n            Line2D([0], [0], color='black', linestyle='--', linewidth=1.5,\n                   label=f\"{prepare_persian_text('میانگین')}: {mean_val:.3f}\"),\n            Line2D([0], [0], color='orange', linestyle='--', linewidth=1.5,\n                   label=f\"{prepare_persian_text('میانه')}: {median:.3f}\")\n        ]\n        #ax.legend(handles=legend_elements, fontsize=10, loc='upper right')\n        ax.legend(\n            handles=legend_elements,\n            fontsize=10,\n            loc='upper left',\n            bbox_to_anchor=(1.05, 1),\n            borderaxespad=0.\n        )\n                \n        # Add bar labels\n        for rect, count in zip(patches, counts):\n            if count &gt; 0:\n                ax.text(\n                    rect.get_x() + rect.get_width() / 2,\n                    rect.get_height(),\n                    f'{int(count)}',\n                    ha='center',\n                    va='bottom',\n                    fontsize=9\n                )\n\n        \n        # Axis labels\n        ax.set_title(prepare_persian_text(str(cat)), fontsize=14, pad=20)\n        ax.set_ylabel(prepare_persian_text(ylabel if ylabel else 'تعداد'), fontsize=12, labelpad=10)\n        #ax.set_xlabel(prepare_persian_text(xlabel if xlabel else score_col), fontsize=12, labelpad=10)\n        ax.tick_params(axis='x', labelsize=10,labelbottom=True)\n\n        ax.set_xlim(min_score - 0.2, max_score + 0.2)\n        ax.grid(axis='y', linestyle='--', alpha=0.5)\n        ax.grid(axis='x', linestyle='--', alpha=0.5)\n\n    # Shared title\n    if title:\n        fig.suptitle(prepare_persian_text(title), fontsize=16, y=1.005)\n\n    # Spacing\n    plt.subplots_adjust(top=0.94, bottom=0.06, left=0.08, right=0.95, hspace=0.5)\n    plt.show()\n\n\n\n\n\nCode\nimport plotly.express as px\n\n\ndef plotly_plot_builder(df, column_name, ordered_list=None, colors=None, title=None, xlabel=None, ylabel=None):\n    if column_name not in df.columns:\n        print(f\"Error: The column '{column_name}' does not exist.\")\n        return\n\n    # Count occurrences\n    counts = df[column_name].value_counts().reset_index()\n    counts.columns = [column_name, 'count']\n\n    # Reorder if needed\n    if ordered_list:\n        counts[column_name] = pd.Categorical(counts[column_name], categories=ordered_list, ordered=True)\n        counts = counts.sort_values(column_name)\n\n    # Color setup\n    color_sequence = None\n    if colors:\n        counts['color'] = counts[column_name].map(colors)\n        color_sequence = counts['color'].tolist()\n\n    # Figure width\n    base_width = 300\n    min_width = 600\n    max_width = 1200\n    num_bars = len(counts)\n    figure_width = min(max(num_bars * base_width, min_width), max_width)\n\n    # Create plot\n    fig = px.bar(\n        counts,\n        x=column_name,\n        y='count',\n        text='count',\n        color=counts[column_name] if colors else None,\n        color_discrete_sequence=color_sequence if colors else px.colors.qualitative.Set2,\n        width=figure_width,\n        height=500\n    )\n\n    # Adjust y-axis to add more headroom above bars\n    max_count = counts['count'].max()\n    fig.update_yaxes(range=[0, max_count * 1.2])\n\n    # Styling updates\n    fig.update_traces(\n        textposition='outside',\n        cliponaxis=False  # allow text to go outside the bar\n    )\n\n    fig.update_layout(\n        title=dict(\n            text=title,\n            x=0.5,  # center title\n            xanchor='center'\n        ),\n        font=dict(family=\"Vazirmatn, Arial\", size=14),\n        xaxis_title=xlabel,\n        yaxis_title=ylabel,\n        xaxis_tickangle=-45 if num_bars &gt; 2 else 0,\n        bargap=0.3,\n        bargroupgap=0.2,\n        margin=dict(t=80, b=120),  # More space above and below plot area\n    )\n\n    fig.show()"
  },
  {
    "objectID": "part04.html#مقدمه",
    "href": "part04.html#مقدمه",
    "title": "نتیجه پرسش‌نامه",
    "section": "",
    "text": "پرسش‌نامه‌ها در سایت پرس‌لاین ساخته شد و به طور آنلاین بر اساس جمعیت نمونه در اختیار مشارکت‌کنندگان قرار گرفت. با اضافه شدن هر پاسخ، از طریق API پرس‌لاین فایل داده‌ها به صورت روزانه دانلود می‌شود و بر اساس آن جدول‌ها و نمودارهای آماری تولید می‌گردند.\n\n\nCode\n# imports and functions\nimport json\nimport requests\nimport arabic_reshaper\nfrom bidi.algorithm import get_display\nfrom matplotlib import font_manager, rc\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport matplotlib.cm as cm\nimport matplotlib.colors as mcolors\nfrom matplotlib.lines import Line2D\nfrom collections import Counter, defaultdict\n\n\nCOLORS = {\n    \"danger\": \"#e74c3c\",\n    \"warning\": \"#f39c12\",\n    \"primary\": \"#375a7f\",\n    \"info\": \"#3498db\",\n    \"success\": \"#00bc8c\",\n    \"secondary\": \"#444\",\n    \"light\": \"#adb5bd\",\n    \"dark\": \"#303030\"\n}\n\n\nSURVEY_ID = \"1617468\"\n\nBASE_SURVEY_URL = \"https://survey.porsline.ir\"\n\nwith open(\"psk.txt\",'r') as fh:\n    api_key = fh.readline().strip()\napi_key_text = f\"API-Key {api_key}\"\n\nheaders = {\n  'Authorization': api_key_text,\n  'Content-Type': 'application/json'\n}\n\nurl = BASE_SURVEY_URL + f\"/api/v2/surveys/{SURVEY_ID}/responses/results-table\"\n\nresponse = requests.request(\"GET\", url, headers=headers)\nn_responders = int(response.json()[\"responders_count\"])\n\n\n\n# تابع تبدیل متن فارسی\ndef prepare_persian_text(text):\n    reshaped_text = arabic_reshaper.reshape(text)\n    return get_display(reshaped_text)\n# تنظیم فونت فارسی\nfont_path = \"fonts/xb-zar/Zar/XB Zar.ttf\"  # مسیر فونت  # مسیر فونت فارسی\nprop = font_manager.FontProperties(fname=font_path)\nrc('font', family=prop.get_name())\n\n\n\n# Load the excel file\ndf = pd.read_excel('Phase02.xlsx')\n\n\n# Pre-Proccessing\n# ======================================================================================================\n\n## Size unification\n\nordered_company_sizes = [\n    'کمتر از ۵۰ نفر',\n    '۵۱ تا ۲۰۰ نفر',  # Combined category\n    '۲۰۰ تا ۵۰۰ نفر',\n    'بیش از ۵۰۰ نفر'\n]\nordered_ages = [\n    'کمتر از ۲۵ سال',\n    '۲۶ تا ۳۵ سال',\n    '۳۶ تا ۴۵ سال',\n    'بالای ۴۵ سال'\n]\n\n# Create a mapping from the original size values to the desired order\nsize_mapping = {\n    size: '۵۱ تا ۲۰۰ نفر'\n    for size in df['اندازه شرکت:'].unique()\n    if '۵۱ تا ۱۰۰ نفر' in size or '۱۰۱ تا ۲۰۰ نفر' in size\n}\nsize_mapping.update({\n    size: size\n    for size in df['اندازه شرکت:'].unique()\n    if 'کمتر از ۵۰ نفر' in size or '۲۰۰ تا ۵۰۰ نفر' in size or 'بیش از ۵۰۰ نفر' in size\n})\n\ndf['اندازه شرکت:'] = df['اندازه شرکت:'].map(size_mapping)\n\ndf.insert(17, 'score_section_2', None)\ndf.insert(24, 'score_section_3', None)\ndf.insert(31, 'score_section_4', None)\ndf.insert(36, 'score_section_5', None)\ndf.insert(43, 'score_section_6', None)\ndf.insert(48, 'score_section_7', None)\ndf.insert(54, 'score_section_8', None)\n\nQUESTIONS = df.columns.tolist()\n\nsection2_answer_order = [\n    'به هیچ وجه',\n    'کم',\n    'متوسط',\n    'زیاد',\n    'خیلی زیاد'\n]\n\nsection3_answer_order = [\n    'خیلی مخالفم',\n    'مخالفم',\n    'تا حدودی',\n    'موافقم',\n    \"خیلی موافقم\"\n]\n\nsection6_answer_order = [\n    'به هیچ وجه',\n    'کم',\n    'تا حدودی',\n    'زیاد',\n    'خیلی زیاد'\n]\n\n# Assiging Questions to each sections\n\nsection_2_questions = [QUESTIONS[11], QUESTIONS[12],QUESTIONS[13],QUESTIONS[14],QUESTIONS[15],QUESTIONS[16]]\nsection_3_questions = [QUESTIONS[18], QUESTIONS[19], QUESTIONS[20], QUESTIONS[21], QUESTIONS[22], QUESTIONS[23]]\nsection_4_questions = [QUESTIONS[25], QUESTIONS[26], QUESTIONS[27], QUESTIONS[28], QUESTIONS[29], QUESTIONS[30]]\nsection_5_questions = [QUESTIONS[32], QUESTIONS[33], QUESTIONS[34], QUESTIONS[35]]\nsection_6_questions = [QUESTIONS[37], QUESTIONS[38], QUESTIONS[39], QUESTIONS[40], QUESTIONS[41], QUESTIONS[42]]\nsection_7_questions = [QUESTIONS[44], QUESTIONS[45], QUESTIONS[46], QUESTIONS[47]]\nsection_8_questions = [QUESTIONS[49], QUESTIONS[50], QUESTIONS[51], QUESTIONS[52], QUESTIONS[53]]\nsection_9_questions = [QUESTIONS[55], QUESTIONS[56], QUESTIONS[57], QUESTIONS[58], QUESTIONS[59], QUESTIONS[60], QUESTIONS[61]]\n\n\n\ndef compute_section_score(df, question_cols, score_col, answer_order):\n    score_map = {text: i + 1 for i, text in enumerate(answer_order)}\n    \n    # Map answers to scores column by column\n    numeric_answers = df[question_cols].apply(lambda col: col.map(score_map))\n    \n    # Compute the row-wise average (skip NaNs)\n    df[score_col] = numeric_answers.mean(axis=1)\n    df[score_col] = df[score_col].round(3)\n    \n    return df\n\n# Computing scores for each section\n\ndf = compute_section_score(df, section_2_questions, 'score_section_2' , section2_answer_order)\ndf = compute_section_score(df, section_3_questions, 'score_section_3' , section3_answer_order)\ndf = compute_section_score(df, section_4_questions, 'score_section_4' , section3_answer_order)\ndf = compute_section_score(df, section_5_questions, 'score_section_5' , section3_answer_order)\ndf = compute_section_score(df, section_6_questions, 'score_section_6' , section6_answer_order)\ndf = compute_section_score(df, section_7_questions, 'score_section_7' , section6_answer_order)\ndf = compute_section_score(df, section_8_questions, 'score_section_8' , section6_answer_order)\n\n# University mapping\n\ndef load_university_map(filepath=\"universities.json\"):\n    with open(filepath, \"r\", encoding=\"utf-8\") as f:\n        return json.load(f)\n\ndef classify_universities(df, column, uni_map, inplace=True):\n    cleaned_series = df[column].str.strip()\n    mapped = cleaned_series.map(uni_map).fillna(\"نامشخص\")\n    if inplace:\n        df[column] = mapped\n    else:\n        return mapped\n\nuni_map = load_university_map()\nclassify_universities(df, QUESTIONS[5], uni_map)\n\n# =======================================================================================================\n\ndef plot_builder(df, column_name, ordered_list=None, colors=None, title=None, xlabel=None, ylabel=None):\n  \"\"\"\n  Generates a bar chart from a DataFrame column with optional ordering,\n  coloring, and hatching, with automatic width adjustment.\n \n\n  Args:\n  df (pd.DataFrame): The DataFrame containing the data.\n  column_name (str): The name of the column to plot.\n  ordered_list (list, optional): A list specifying the desired order of categories.\n  colors (dict, optional): A dictionary mapping categories to colors.\n  title (str, optional): The title of the plot.\n  xlabel (str, optional): The x-axis label.\n  ylabel (str, optional): The y-axis label.\n  \"\"\"\n \n\n  # Check if the column exists\n  if column_name not in df.columns:\n    print(f\"Error: The column '{column_name}' does not exist in the DataFrame.\")\n    return  # Exit the function if the column is missing\n \n\n  if ordered_list:\n      # Create a mapping and categorical column for sorting\n      value_mapping = {\n      value: ordered_value\n      for ordered_value in ordered_list\n      for value in df[column_name].unique()\n      if ordered_value in df[column_name].unique() and ordered_value == value\n        }\n\n      categorical_value = pd.Categorical(df[column_name].map(value_mapping), categories=ordered_list, ordered=True)\n      df_sorted = df.assign(sorted_value=categorical_value).sort_values('sorted_value')\n      \n      unique_values_sorted = df_sorted['sorted_value'].unique()\n      counts_sorted = df_sorted['sorted_value'].value_counts().reindex(ordered_list).fillna(0)\n      x_labels = [prepare_persian_text(val) for val in counts_sorted.index]\n  else:\n      # If no ordered list is provided, use the default order\n      counts_sorted = df[column_name].value_counts()\n      x_labels = [prepare_persian_text(val) for val in counts_sorted.index]\n      unique_values_sorted = counts_sorted.index\n  \n\n  # Determine colors and hatching\n  hatch_patterns = ['/', '.', 'o', None]  # Hatch patterns, None for no hatch\n  if colors:\n      bar_colors = [colors.get(val, COLORS['dark']) for val in unique_values_sorted] # Use 'dark' as fallback\n      bar_hatches = [None] * len(unique_values_sorted) # No hatches if colors are provided\n  else:\n      default_color_list = [COLORS['primary'], COLORS['success'], COLORS['warning'], COLORS['danger'], COLORS['info']]\n      bar_colors = [default_color_list[i % len(default_color_list)] for i in range(len(unique_values_sorted))]\n      if len(unique_values_sorted) &gt; len(default_color_list):\n          bar_hatches = [hatch_patterns[i % len(hatch_patterns)] for i in range(len(unique_values_sorted))]\n      else:\n          bar_hatches = [None] * len(unique_values_sorted)\n \n  \n  # Calculate figure width\n  num_bars = len(counts_sorted)\n  bar_width = 0.8  # Default bar width\n  spacing = 0.2  # Spacing between bars\n  estimated_plot_width = num_bars * (bar_width + spacing)\n  min_width = 8  # Minimum figure width\n  fig_width = max(min_width, estimated_plot_width)\n  plt.figure(figsize=(fig_width, 6))  # Adjust height as needed\n \n\n  # Create the bar chart\n  for i, (val, count) in enumerate(counts_sorted.items()):\n      plt.bar(val, count, color=bar_colors[i], hatch=bar_hatches[i])\n \n\n  # Add labels and title\n  if title:\n      plt.title(prepare_persian_text(title))\n  if xlabel:\n      plt.xlabel(prepare_persian_text(xlabel))\n  if ylabel:\n      plt.ylabel(prepare_persian_text(ylabel))\n \n\n  # Add counts above each bar and adjust y-axis limits\n  max_count = max(counts_sorted.values)\n  plt.ylim(0, max_count * 1.1)\n  for i, count in enumerate(counts_sorted.values):\n      per = round((count / sum(counts_sorted)) * 100, 2)\n      plt.text(counts_sorted.index[i], count + max_count * 0.02, str(int(count)) + f\", ({per}%) \", ha='center', va='bottom')\n \n\n  # Calculating rotation angel\n  if num_bars == 2:\n      ang = 0\n  else:\n      ang = 45\n  # Change x-axis labels\n  plt.xticks(counts_sorted.index, x_labels, rotation= ang, ha='right')\n \n\n  # Show the plot\n  plt.tight_layout()\n  plt.show()\n\n\ndef plot_stacked_bar_chart_from_counts(counts_dict, title=\"Stacked Bar Chart\",\n                    xlabel=\"Category\", ylabel=\"Count\",\n                    colors=None, max_labels=10):\n  \"\"\"\n  Generates stacked bar charts from a counts dictionary (like output of count_elements_in_dataframe).\n  Applies prepare_persian_text to labels and uses COLORS and hatch patterns.\n \n\n  Args:\n  counts_dict (dict):  A dictionary where keys are column names (x-axis categories)\n              and values are dictionaries of element counts.\n  title (str, optional): Title of the plot.\n  xlabel (str, optional): Label for the x-axis.\n  ylabel (str, optional): Label for the y-axis.\n  colors (dict, optional):  Dictionary mapping elements to colors.\n  max_labels (int, optional): Maximum number of x-axis labels to display.\n  \"\"\"\n \n  farsi_priority = [\n    \"اولویت اول\",\n    \"اولویت دوم\",\n    \"اولویت سوم\",\n    \"اولویت چهارم\",\n    \"اولویت پنجم\",\n    \"اولویت ششم\",\n    \"اولویت هفتم\",\n    \"اولویت هشتم\"\n  ]\n  farsi_labels = [prepare_persian_text(label) for label in farsi_priority]\n    \n  fig, ax = plt.subplots()\n  bottom = np.zeros(len(counts_dict))\n\n  x_labels = list(counts_dict.keys())\n \n\n  # Filter x-axis labels if there are too many\n  if len(x_labels) &gt; max_labels:\n      x_labels_filtered = [prepare_persian_text(label) for label in x_labels[:max_labels]] + [prepare_persian_text('Other')]\n      counts_dict_filtered = {k: v for k in x_labels if k in x_labels[:max_labels]}\n      counts_dict_filtered[prepare_persian_text('Other')] = {}\n      for k in x_labels[max_labels:]:\n          for item, count in counts_dict[k].items():\n              if pd.notna(item):\n                  counts_dict_filtered[prepare_persian_text('Other')].get(item, 0) + count\n                  x_labels = x_labels_filtered\n                  counts_dict = counts_dict_filtered\n  else:\n      x_labels = [prepare_persian_text(label) for label in x_labels]\n \n\n  all_elements = set()\n  for counts in counts_dict.values():\n      for element in counts.keys():\n          if pd.notna(element): # Ignore NaN in element collection\n              all_elements.add(element)\n      elements = sorted(list(all_elements))\n \n\n  # Color Handling (No Hatches)\n  if colors is None:\n      default_color_list = [COLORS['primary'], COLORS['success'], COLORS['warning'], COLORS['danger'],\n                   COLORS.get('purple', 'purple'), COLORS.get('violet', 'violet'), COLORS['info'],COLORS.get('olive', 'olive')] # Added purple and pink\n      colors = {elements[i % len(elements)]: default_color_list[i % len(default_color_list)] for i in range(len(elements))}\n      bar_hatches = [None] * len(elements) # No hatches\n  else:\n      bar_hatches = [None] * len(elements) # No hatches if custom colors\n\n  # Calculate bar width for legend positioning\n  bar_width = 0.8  # Default bar width (adjust as needed)\n  legend_x_offset = bar_width\n  rightmost_bar_x = len(x_labels) - 1 # X-position of the rightmost bar (0-indexed)\n \n\n  for i, col in enumerate(x_labels):\n      counts = counts_dict[col]\n      current_bottom = np.zeros(1) # Initialize bottom for text placement within each bar\n      for j, element in enumerate(elements):\n          count = counts.get(element, 0)\n          if count &gt; 0:\n              ax.bar(col, count, bottom=bottom[i], color=colors.get(element, 'gray'), hatch=bar_hatches[j])\n              # Add count labels\n              text_y = bottom[i] + count / 2\n              ax.text(col, text_y, str(count), ha='center', va='center', color='white', fontsize=11) # Adjust fontsize as needed\n              bottom[i] += count\n\n          ax.set_xticks(range(len(x_labels)), farsi_labels[:len(x_labels)], rotation=45, ha='right')\n          ax.set_xlabel(prepare_persian_text(xlabel))\n          ax.set_ylabel(prepare_persian_text(ylabel))\n          ax.set_title(prepare_persian_text(title))\n    \n  ax.legend(handles=[plt.Rectangle((0, 0), 1, 1, color=colors.get(elements[i], 'gray'))\n         for i in sorted(range(len(elements)), reverse=True)],\n       labels=[prepare_persian_text(el) for el in sorted(elements, reverse = True)], title=prepare_persian_text(\"Categories\"),\n       bbox_to_anchor=(0.2 + legend_x_offset, 0.5), loc='upper left') # Position legend\n  \n\n  plt.show()\n\n\n\ndef column_elemnt_counter (df, hdr):\n    column_name= hdr\n    separator = \"،\"\n    new_data = []\n    max_items = 0\n    for _, row in df.iterrows():\n        items = str(row[column_name]).split(separator)\n        items = [item.strip() for item in items]\n        new_data.append(items)\n        max_items = max(max_items, len(items))\n        new_df = pd.DataFrame(new_data)\n        new_df.columns = [f'priority{str(i + 1).zfill(2)}' for i in range(max_items)] # Create column name\n\n    column_element_counts = {}\n    for col in new_df.columns:\n        try:\n            new_df[col] = new_df[col].replace('nan', None)\n        # Use value_counts() with dropna=False to include NaN counts\n            counts = new_df[col].value_counts(dropna=True)\n            # Convert to dictionary, handling potential type issues in keys\n            column_element_counts[col] = {str(k): int(v) for k, v in counts.items()} \n        except TypeError as e:\n            print(f\"TypeError encountered in column '{col}': {e}\")\n            # Handle the error appropriately, e.g., skip the column or use a default\n            column_element_counts[col] = {}  # Or some other default\n        except Exception as e:\n            print(f\"An unexpected error occurred in column '{col}': {e}\")\n            column_element_counts[col] = {}  # Or some other default\n\n    return column_element_counts\n\n\n\ndef plot_responses_by_category(\n    df,\n    category_col,\n    question_col,\n    ordered_list=None,\n    category_sort=None,\n    COLORS=COLORS,\n    title=None,\n    xlabel=None,\n    ylabel=None,\n    percent=False,\n):\n    \"\"\"\n    Plots how different categories answered a specific question using Matplotlib.\n\n    Args:\n        df (pd.DataFrame): DataFrame containing the data.\n        category_col (str): Column with categories (e.g., gender).\n        question_col (str): Column with responses to the question.\n        title (str, optional): Plot title.\n        percent (bool, optional): If True, show percent instead of count.\n        ordered_list (list, optional): Custom order for question responses (bars).\n        COLORS (dict, optional): Dict of color values.\n        category_sort (list, optional): Custom order for categories (x-axis).\n        xlabel (str, optional): X-axis label.\n        ylabel (str, optional): Y-axis label.\n    \"\"\"\n\n    # Group counts\n    count_df = df.groupby([category_col, question_col]).size().unstack(fill_value=0)\n\n    # Reorder columns if ordered_list is provided\n    if ordered_list:\n        count_df = count_df[[col for col in ordered_list if col in count_df.columns]]\n\n    # Reorder index (categories) if category_sort is provided\n    if category_sort:\n        count_df = count_df.reindex([cat for cat in category_sort if cat in count_df.index])\n\n    # Convert to percent if needed\n    if percent:\n        count_df = count_df.div(count_df.sum(axis=1), axis=0) * 100\n\n    # Prepare texts\n    count_df.index = [prepare_persian_text(str(idx)) for idx in count_df.index]\n    count_df.columns = [prepare_persian_text(str(col)) for col in count_df.columns]\n\n    # Plot sizing\n    num_categories = count_df.shape[0]\n    bar_width = 0.8\n    spacing = 0.3\n    estimated_width = num_categories * (bar_width + spacing)\n    fig_width = max(8, estimated_width)\n    plt.figure(figsize=(fig_width, 6))\n\n    # Define colors\n    n_bars = len(count_df.columns)\n    color_list = []\n\n    if COLORS:\n        color_list = list(COLORS.values())\n\n    # Extend with Set2 only if needed (avoid duplicates)\n    if n_bars &gt; len(color_list):\n        extra_colors = list(cm.Set2.colors)\n        needed = n_bars - len(color_list)\n        color_list += extra_colors[:needed]\n\n    bar_colors = color_list[:n_bars]\n\n    # Plot\n    ax = count_df.plot(\n        kind='bar',\n        stacked=percent,\n        edgecolor='black',\n        color=bar_colors,\n        width=bar_width,\n        ax=plt.gca()\n    )\n\n    # Title\n    if title:\n        ax.set_title(prepare_persian_text(title), fontsize=16, pad=20)\n\n    # Axis labels\n    if xlabel:\n        ax.set_xlabel(prepare_persian_text(xlabel), fontsize=14, labelpad=10)\n    if ylabel:\n        label = ylabel if ylabel else ('درصد' if percent else 'تعداد')\n        ax.set_ylabel(prepare_persian_text(label), fontsize=14, labelpad=10)\n\n    # Tick styling\n    ax.set_xticks(range(len(count_df.index)))\n    ax.set_xticklabels(count_df.index, rotation=45, ha='right', fontsize=12)\n    ax.tick_params(axis='x', pad=10)\n\n    # Label bars\n    max_val = count_df.values.max()\n    for container in ax.containers:\n        ax.bar_label(container,\n                     fmt='%.1f%%' if percent else '%.0f',\n                     label_type='edge',\n                     fontsize=10,\n                     padding=3)\n\n    # Adjust spacing\n    ax.set_ylim(0, max_val * 1.15)\n\n    # Legend outside\n    ax.legend(\n        title=prepare_persian_text('پاسخ'),\n        bbox_to_anchor=(1.01, 1),\n        loc='upper left',\n        borderaxespad=0.\n    )\n\n    plt.subplots_adjust(right=0.8)\n    plt.show()\n\ndef plot_score_hist_by_category(\n    df,\n    category_col,\n    score_col,\n    bins=5,\n    COLORS=COLORS,\n    title=None,\n    xlabel=None,\n    ylabel=None,\n    category_sort=None\n):\n    \"\"\"\n    Plots histograms of a numeric score column with one subplot per category.\n\n    Args:\n        df (pd.DataFrame): DataFrame with the data.\n        category_col (str): Column for grouping (e.g., gender).\n        score_col (str): Numeric column to plot histogram for.\n        bins (int or list, optional): Number of bins or bin edges.\n        COLORS (dict): Dict of colors for each category.\n        title (str, optional): Overall plot title.\n        xlabel (str, optional): X-axis label (shared).\n        ylabel (str, optional): Y-axis label (shared).\n        category_sort (list, optional): Custom order for categories.\n    \"\"\"\n\n    # Determine categories\n    categories = df[category_col].dropna().unique()\n    if category_sort:\n        categories = [cat for cat in category_sort if cat in categories]\n    else:\n        categories = sorted(categories)\n\n    n_cats = len(categories)\n    fig, axes = plt.subplots(n_cats, 1, figsize=(8, 5 * n_cats), sharex=True)\n\n    if n_cats == 1:\n        axes = [axes]\n\n    fallback_colors = list(cm.Set2.colors)\n\n    # Consistent binning and x-limits\n    min_score = 1\n    max_score = 5\n    bin_edges = np.linspace(min_score, max_score, bins + 1)\n\n    for i, cat in enumerate(categories):\n        ax = axes[i]\n        subset = df[df[category_col] == cat][score_col].dropna()\n        color = COLORS.get(cat, fallback_colors[i % len(fallback_colors)]) if COLORS else fallback_colors[i % len(fallback_colors)]\n    \n        # Histogram\n        counts, bins_edges, patches = ax.hist(\n            subset,\n            bins=bins,\n            color=color,\n            edgecolor='black',\n            alpha=0.8\n        )\n    \n        # Mean line\n        mean_val = subset.mean()\n        ax.axvline(mean_val, color='black', linestyle='--', linewidth=1.5)\n        ax.text(mean_val + 0.001, ax.get_ylim()[1] * 1.02, \"\",\n                rotation=0, fontsize=10, color=COLORS['primary'])\n\n        # Median Line\n        median = subset.median()\n\n        ax.axvline(median, color='orange', linestyle='--', linewidth=2, label=prepare_persian_text('میانه'))\n        \n        # Optional: add label on the line\n        ax.text(median, ax.get_ylim()[1] * 0.9, \"\",\n                rotation=90, color='red', fontsize=10, ha='right')\n\n        # legends for mead and median\n        legend_elements = [\n            Line2D([0], [0], color='black', linestyle='--', linewidth=1.5,\n                   label=f\"{prepare_persian_text('میانگین')}: {mean_val:.3f}\"),\n            Line2D([0], [0], color='orange', linestyle='--', linewidth=1.5,\n                   label=f\"{prepare_persian_text('میانه')}: {median:.3f}\")\n        ]\n        #ax.legend(handles=legend_elements, fontsize=10, loc='upper right')\n        ax.legend(\n            handles=legend_elements,\n            fontsize=10,\n            loc='upper left',\n            bbox_to_anchor=(1.05, 1),\n            borderaxespad=0.\n        )\n                \n        # Add bar labels\n        for rect, count in zip(patches, counts):\n            if count &gt; 0:\n                ax.text(\n                    rect.get_x() + rect.get_width() / 2,\n                    rect.get_height(),\n                    f'{int(count)}',\n                    ha='center',\n                    va='bottom',\n                    fontsize=9\n                )\n\n        \n        # Axis labels\n        ax.set_title(prepare_persian_text(str(cat)), fontsize=14, pad=20)\n        ax.set_ylabel(prepare_persian_text(ylabel if ylabel else 'تعداد'), fontsize=12, labelpad=10)\n        #ax.set_xlabel(prepare_persian_text(xlabel if xlabel else score_col), fontsize=12, labelpad=10)\n        ax.tick_params(axis='x', labelsize=10,labelbottom=True)\n\n        ax.set_xlim(min_score - 0.2, max_score + 0.2)\n        ax.grid(axis='y', linestyle='--', alpha=0.5)\n        ax.grid(axis='x', linestyle='--', alpha=0.5)\n\n    # Shared title\n    if title:\n        fig.suptitle(prepare_persian_text(title), fontsize=16, y=1.005)\n\n    # Spacing\n    plt.subplots_adjust(top=0.94, bottom=0.06, left=0.08, right=0.95, hspace=0.5)\n    plt.show()\n\n\n\n\n\nCode\nimport plotly.express as px\n\n\ndef plotly_plot_builder(df, column_name, ordered_list=None, colors=None, title=None, xlabel=None, ylabel=None):\n    if column_name not in df.columns:\n        print(f\"Error: The column '{column_name}' does not exist.\")\n        return\n\n    # Count occurrences\n    counts = df[column_name].value_counts().reset_index()\n    counts.columns = [column_name, 'count']\n\n    # Reorder if needed\n    if ordered_list:\n        counts[column_name] = pd.Categorical(counts[column_name], categories=ordered_list, ordered=True)\n        counts = counts.sort_values(column_name)\n\n    # Color setup\n    color_sequence = None\n    if colors:\n        counts['color'] = counts[column_name].map(colors)\n        color_sequence = counts['color'].tolist()\n\n    # Figure width\n    base_width = 300\n    min_width = 600\n    max_width = 1200\n    num_bars = len(counts)\n    figure_width = min(max(num_bars * base_width, min_width), max_width)\n\n    # Create plot\n    fig = px.bar(\n        counts,\n        x=column_name,\n        y='count',\n        text='count',\n        color=counts[column_name] if colors else None,\n        color_discrete_sequence=color_sequence if colors else px.colors.qualitative.Set2,\n        width=figure_width,\n        height=500\n    )\n\n    # Adjust y-axis to add more headroom above bars\n    max_count = counts['count'].max()\n    fig.update_yaxes(range=[0, max_count * 1.2])\n\n    # Styling updates\n    fig.update_traces(\n        textposition='outside',\n        cliponaxis=False  # allow text to go outside the bar\n    )\n\n    fig.update_layout(\n        title=dict(\n            text=title,\n            x=0.5,  # center title\n            xanchor='center'\n        ),\n        font=dict(family=\"Vazirmatn, Arial\", size=14),\n        xaxis_title=xlabel,\n        yaxis_title=ylabel,\n        xaxis_tickangle=-45 if num_bars &gt; 2 else 0,\n        bargap=0.3,\n        bargroupgap=0.2,\n        margin=dict(t=80, b=120),  # More space above and below plot area\n    )\n\n    fig.show()"
  },
  {
    "objectID": "part04.html#اطلاعات-زمینهای",
    "href": "part04.html#اطلاعات-زمینهای",
    "title": "نتیجه پرسش‌نامه",
    "section": "اطلاعات زمینه‌ای",
    "text": "اطلاعات زمینه‌ای\nبخش اول پرسش‌نامه مربوط به اطلاعات زمینه‌ای پاسخ‌دهندگان است شامل جنس، سن، تحصیلات و وضعیت تأهل که نشان می‌دهد جمعیت پاسخ‌دهندگان به لحاظ جنس و تأهل متعادل، به لحاظ سن در بازه سنی ۲۶ تا ۳۵ سال و به لحاظ تحصیلات از سطح کارشناسی بالاترند.\n\nپراکندگی جنسیت\n\n\nCode\n# Check if the column exists\nif 'جنسیت شما:' not in df.columns:\n    print(\"Error: The column 'جنسیت شما:' does not exist in the excel file.\")\nelse:\n    # Count the occurrences of each gender\n    gender_counts = df['جنسیت شما:'].value_counts()\n\n    # Define colors using the COLORS dictionary\n    gender_color_mapping = {\n        'زن': COLORS['success'],  \n        'مرد': COLORS['danger']    \n    }\n    colors = {gender: gender_color_mapping.get(gender, COLORS['dark']) for gender in gender_counts.index}  # Use 'dark' as a fallback\n\n    # Create the bar chart\n    plt.bar(gender_counts.index, gender_counts.values, color=[colors[gender] for gender in gender_counts.index])\n\n    # Add labels and title\n    plt.title(prepare_persian_text('پراکندگی جنسیت'))\n    plt.xlabel(prepare_persian_text('جنسیت'))\n    plt.ylabel(prepare_persian_text('تعداد'))\n\n    # Change x-axis labels\n    new_labels = {'زن': prepare_persian_text('زن'), 'مرد': prepare_persian_text('مرد')}\n    plt.xticks(gender_counts.index, [new_labels[gender] for gender in gender_counts.index], rotation=0)\n\n    # Show the plot\n    plt.show()\n\n\n\n\n\n\n\n\n\n\n\nپراکندگی سن\n\n\nCode\n# Check if the column exists\nif 'سن شما:' not in df.columns:\n    print(\"Error: The column 'سن شما:' does not exist in the excel file.\")\nelse:\n    # Define the desired order of age groups\n    ordered_ages = [\n        'کمتر از ۲۵ سال',\n        '۲۶ تا ۳۵ سال',\n        '۳۶ تا ۴۵ سال',\n        'بالای ۴۵ سال'\n    ]\n\n    # Create a mapping from the original age values to the desired order\n    age_mapping = {\n        age: ordered_age\n        for ordered_age in ordered_ages\n        for age in df['سن شما:'].unique() if ordered_age in df['سن شما:'].unique() and ordered_age in age\n    }\n\n    # Create a categorical column for sorting\n    categorical_age = pd.Categorical(df['سن شما:'].map(age_mapping), categories=ordered_ages, ordered=True)\n    df_sorted = df.assign(sorted_age=categorical_age).sort_values('sorted_age')\n\n    # Get the unique age groups in the sorted order\n    unique_ages_sorted = df_sorted['sorted_age'].unique()\n\n    # Count the occurrences of each age group in the sorted order\n    age_counts_sorted = df_sorted['sorted_age'].value_counts().reindex(ordered_ages).fillna(0)\n\n    # Create a color dictionary (using explicit colors from COLORS - you'll need to adapt)\n    # This is where you'll need to decide how to map your age groups to your COLORS\n    # I'm providing a placeholder mapping - YOU MUST CHANGE THIS!\n    age_color_mapping = {\n        'کمتر از ۲۵ سال': COLORS['primary'],\n        '۲۶ تا ۳۵ سال': COLORS['success'],\n        '۳۶ تا ۴۵ سال': COLORS['warning'],\n        'بالای ۴۵ سال': COLORS['danger']\n    }\n    colors = {age: age_color_mapping.get(age, COLORS['dark']) for age in unique_ages_sorted} # Use 'dark' as a fallback\n\n    # Define new labels (using the desired order)\n    x_labels = [prepare_persian_text(age) for age in age_counts_sorted.index]\n\n    # Create the bar chart\n    plt.bar(age_counts_sorted.index, age_counts_sorted.values, color=[colors[age] for age in age_counts_sorted.index])\n\n    # Add labels and title\n    plt.title(prepare_persian_text('پراکندگی سن'))\n    plt.xlabel(prepare_persian_text('بازه سنی'))\n    plt.ylabel(prepare_persian_text('تعداد'))\n\n    # Add the counts above each bar and adjust y-axis limits\n    max_count = max(age_counts_sorted.values)\n    plt.ylim(0, max_count * 1.1)  # Increase y-axis limit by 10% to accommodate annotations\n    for i, count in enumerate(age_counts_sorted.values):\n        plt.text(age_counts_sorted.index[i], count + max_count * 0.02, str(int(count)), ha='center', va='bottom')  # Adjust vertical position as a fraction of max_count\n\n    # Change x-axis labels\n    plt.xticks(age_counts_sorted.index, x_labels, rotation=45, ha='right') # Rotate for better readability\n\n    # Show the plot\n    plt.tight_layout()\n    plt.show()\n\n\n\n\n\n\n\n\n\n\n\nوضعیت تأهل\n\n\nCode\n\ntemp_order = ['متأهل', 'مجرد']\ntemp_colors = {\n    'مجرد': COLORS['success'],\n    'متأهل': COLORS['primary']\n}\n\n\nplot_builder(df,QUESTIONS[2],ordered_list=temp_order, colors=temp_colors, title='وضعیت تأهل', xlabel='وضعیت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nتحصیلات\n\n\nCode\ntemp_order = ['دیپلم', 'کاردانی', 'کارشناسی', 'کارشناسی ارشد یا بالاتر']\ntemp_colors = {\n    temp_order[0]: COLORS['primary'],\n    temp_order[1]: COLORS['success'],\n    temp_order[2]: COLORS['warning'],\n    temp_order[3]: COLORS['danger']\n}\n\n\nplot_builder(df,QUESTIONS[3],ordered_list=temp_order, colors=temp_colors, title='پراکندگی تحصیلات', xlabel='مقطع', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nدانشگاه محل تحصیل\n\n\nCode\nplot_builder(df,QUESTIONS[5], title='پراکندگی دانشگاه محل تحصیل', xlabel='دانشگاه', ylabel='تعداد')"
  },
  {
    "objectID": "part04.html#بخش-۱-وضعیت-اشتغال",
    "href": "part04.html#بخش-۱-وضعیت-اشتغال",
    "title": "نتیجه پرسش‌نامه",
    "section": "بخش ۱: وضعیت اشتغال",
    "text": "بخش ۱: وضعیت اشتغال\nعموم مشارکت‌کنندگان بیش از ۴ سال سابقه کار دارند. مدت ماندگاریشان در شغل فعلی به نسبت زیاد (۱ تا ۷ سال) است. اکثریت مطلق آنان به صورت قراردادی استخدام شده‌اند و بیشتر در زمینه برنامه‌نویسی فعالیت می‌کنند.\n\nسابقه کار در حوزه فناوری اطلاعات\n\n\nCode\n\ntemp_order = ['کمتر از ۱ سال', '۱ تا ۳ سال', '۴ تا ۷ سال', 'بیش از ۷ سال']\ntemp_colors = {\n    temp_order[0]: COLORS['primary'],\n    temp_order[1]: COLORS['success'],\n    temp_order[2]: COLORS['warning'],\n    temp_order[3]: COLORS['danger']\n}\n\nplot_builder(df,QUESTIONS[6],ordered_list=temp_order, colors=temp_colors, title='پراکندگی سابقه کار در حوزه فناوری اطلاعات', xlabel='تعداد سال فعالیت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nمدت زمان فعالیت در شرکت کنونی\n\n\nCode\n\n\ntemp_order = ['کمتر از ۱ سال', '۱ تا ۳ سال', '۴ تا ۷ سال', 'بیش از ۷ سال']\ntemp_colors = {\n    temp_order[0]: COLORS['primary'],\n    temp_order[1]: COLORS['success'],\n    temp_order[2]: COLORS['warning'],\n    temp_order[3]: COLORS['danger']\n}\n\n\nplot_builder(df,QUESTIONS[7],ordered_list=temp_order, colors=temp_colors, title='پراکندگی سابقه فعالیت در شرکت کنونی', xlabel='تعداد سال فعالیت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nنوع قرارداد\n\n\nCode\n\n\nplot_builder(df,QUESTIONS[8], title='نوع قرارداد با شرکت کنونی', xlabel='نوع قرارداد', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nاصلی‌ترین نقش یا عنوان شغلی فعلی\n\n\nCode\nplot_builder(df,QUESTIONS[9], title='اصلی‌ترین نقش یا شغل', xlabel='عنوان شغلی', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nپراکندگی اندازه شرکت\n\n\nCode\n\n# Check if the column exists\nif 'اندازه شرکت:' not in df.columns:\n    print(\"Error: The column 'اندازه شرکت:' does not exist in the excel file.\")\nelse:\n    # Define the desired order of company sizes with the combined category\n    \"\"\"\n    ordered_sizes = [\n        'کمتر از ۵۰ نفر',\n        '۵۱ تا ۲۰۰ نفر',  # Combined category\n        '۲۰۰ تا ۵۰۰ نفر',\n        'بیش از ۵۰۰ نفر'\n    ]\n\n    # Create a mapping from the original size values to the desired order\n    size_mapping = {\n        size: '۵۱ تا ۲۰۰ نفر'\n        for size in df['اندازه شرکت:'].unique()\n        if '۵۱ تا ۱۰۰ نفر' in size or '۱۰۱ تا ۲۰۰ نفر' in size\n    }\n    size_mapping.update({\n        size: size\n        for size in df['اندازه شرکت:'].unique()\n        if 'کمتر از ۵۰ نفر' in size or '۲۰۰ تا ۵۰۰ نفر' in size or 'بیش از ۵۰۰ نفر' in size\n    })\n\n    # Create a categorical column for sorting\n    \"\"\"\n    #categorical_size = pd.Categorical(df['اندازه شرکت:'].map(size_mapping), categories=ordered_sizes, ordered=True)\n    categorical_size = pd.Categorical(df['اندازه شرکت:'], categories=ordered_company_sizes, ordered=True)\n    df_sorted = df.assign(sorted_size=categorical_size).sort_values('sorted_size')\n\n    # Get the unique company sizes in the sorted order\n    unique_sizes_sorted = df_sorted['sorted_size'].unique()\n\n    # Count the occurrences of each company size in the sorted order\n    size_counts_sorted = df_sorted['sorted_size'].value_counts().reindex(ordered_company_sizes).fillna(0)\n\n    size_color_mapping = {\n        'کمتر از ۵۰ نفر': COLORS['primary'],\n        '۵۱ تا ۲۰۰ نفر': COLORS['success'],\n        '۲۰۰ تا ۵۰۰ نفر': COLORS['warning'],\n        'بیش از ۵۰۰ نفر': COLORS['danger']\n    }\n    colors = {size: size_color_mapping.get(size, COLORS['dark']) for size in unique_sizes_sorted} # Use 'dark' as a fallback\n\n    # Define new labels (using the desired order)\n    x_labels = [prepare_persian_text(size) for size in size_counts_sorted.index]\n\n    # Create the bar chart\n    plt.bar(size_counts_sorted.index, size_counts_sorted.values, color=[colors[size] for size in size_counts_sorted.index])\n\n    # Add labels and title\n    plt.title(prepare_persian_text('توزیع اندازه شرکت'))\n    plt.xlabel(prepare_persian_text('اندازه شرکت'))\n    plt.ylabel(prepare_persian_text('تعداد'))\n\n    # Add the counts above each bar and adjust y-axis limits\n    max_count = max(size_counts_sorted.values)\n    plt.ylim(0, max_count * 1.1)  # Increase y-axis limit by 10% to accommodate annotations\n    for i, count in enumerate(size_counts_sorted.values):\n        plt.text(size_counts_sorted.index[i], count + max_count * 0.02, str(int(count)), ha='center', va='bottom')  # Adjust vertical position as a fraction of max_count\n\n    # Change x-axis labels\n    plt.xticks(size_counts_sorted.index, x_labels, rotation=45, ha='right')\n\n    # Show the plot\n    plt.tight_layout()\n    plt.show()\n\n\n\n\n\n\n\n\n\n\n\nپراکندگی نقش‌ها بر حسب جنس\n\n\nCode\nplot_responses_by_category(df, df[QUESTIONS[0]], df[QUESTIONS[9]],title= \"پراکندگی نقش‌ها بر حسب جنس\")"
  },
  {
    "objectID": "part04.html#بخش-۲-رضایت-شغلی-و-تجربه-کاری",
    "href": "part04.html#بخش-۲-رضایت-شغلی-و-تجربه-کاری",
    "title": "نتیجه پرسش‌نامه",
    "section": "بخش ۲: رضایت شغلی و تجربه کاری",
    "text": "بخش ۲: رضایت شغلی و تجربه کاری\nدر این بخش میزان رضایت مشارکت‌کنندگان از شغل خود سنجیده شده است. این رضایت با هفت سنجه و با استفاده از طیف لیکرت آزموده شده است. به نظر می‌رسد در مجموع میزان رضایت مشارکت‌کنندگان از شرح شغل و هم‌خوانی آن با مهارت‌ها و علاقه‌مندی‌های آن‌ها از سطح متوسط بالاتر است. اکثر مشارکت‌کنندگان تأثیرگذاری خود در موفقیت کلی سازمان را زیاد و خیلی زیاد ارزیابی کرده‌اند. اما این توزیع در مورد ارزیابی مشارکت‌کنندگان از این که سازمان قدردان تلاش‌های آن‌هاست تغییر می‌کند و به نسبت دیگر سنجه‌ها وضعیت متفاوتی را نشان می‌دهد. در مجموع می‌توان ادعا کرد که مشارکت‌کنندگان اگر چه از فعالیت‌های شغلی خود راضی هستند و آن را موثر می‌دانند، اما از دیده شدن این تلاش‌ها و قدردانی سازمان رضایت ندارند.\n\nاز شرح شغل خود راضی هستم\n\n\nCode\ntemp_order = [\n    'به هیچ وجه',\n    'کم',\n    'متوسط',\n    'زیاد',\n    'خیلی زیاد'\n]\ntemp_colors = {\n    temp_order[0]: COLORS['danger'],\n    temp_order[1]: COLORS['warning'],\n    temp_order[2]: COLORS['primary'],\n    temp_order[3]: COLORS['info'],\n    temp_order[4]: COLORS['success']\n}\nplot_builder(df,section_2_questions[0],temp_order, temp_colors, title='از شرح شغل خود راضی هستم', xlabel='میزان موافقت', ylabel='تعداد')\nplotly_plot_builder(df,section_2_questions[0],temp_order, temp_colors, title='از شرح شغل خود راضی هستم', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nاز وظایفی که به من داده می‌شود راضی هستم.\n\n\nCode\nplot_builder(df,section_2_questions[1],temp_order, temp_colors, title='از وظایفی که به من داده می‌شود راضی هستم', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nاحساس می‌کنم شغل من با مهارت‌ها و علاقه‌مندی‌هایم هم‌خوانی دارد.\n\n\nCode\nplot_builder(df,section_2_questions[2],temp_order, temp_colors, title='احساس می‌کنم شغل من با مهارت‌ها و علاقه‌مندی‌هایم هم‌خوانی دارد', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nدر کل، از شغل و موقعیت شغلی فعلی خود رضایت دارم.\n\n\nCode\nplot_builder(df,section_2_questions[3],temp_order, temp_colors, title='در کل، از شغل و موقعیت شغلی فعلی خود رضایت دارم.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nاحساس می‌کنم که شغلم در موفقیت کلی سازمان تأثیرگذار است.\n\n\nCode\nplot_builder(df,section_2_questions[4],temp_order, temp_colors, title='احساس می‌کنم که شغلم در موفقیت کلی سازمان تأثیرگذار است.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nمی‌توان گفت سازمان قدردان تلاش‌های من است.\n\n\nCode\nplot_builder(df,section_2_questions[5],temp_order, temp_colors, title='می‌توان گفت سازمان قدردان تلاش‌های من است.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nامتیاز سنجه\n\nامتیاز کلی رضایت شغلی و تجربه کاری بر حسب جنس\n\n\nCode\nplot_score_hist_by_category(\n    df,\n    QUESTIONS[0],\n    'score_section_2',\n    bins=10,\n    title='امتیاز کلی رضایت شغلی و تجربه کاری بر حسب جنس',\n    xlabel=\"نمره\",\n    ylabel=None,\n    category_sort=None\n)\n\n\n\n\n\n\n\n\n\n\n\n\nامتیاز کلی رضایت شغلی و تجربه کاری بر حسب سن\n\n\nCode\nplot_score_hist_by_category(\n    df,\n    QUESTIONS[1],\n    'score_section_2',\n    bins=10,\n    title='امتیاز کلی رضایت شغلی و تجربه کاری بر حسب سن',\n    xlabel=\"نمره\",\n    ylabel=None,\n    category_sort=ordered_ages\n)\n\n\n\n\n\n\n\n\n\n\n\n\nامتیاز کلی رضایت شغلی و تجربه کاری بر حسب دانشگاه محل تحصیل\n\n\nCode\nplot_score_hist_by_category(\n    df,\n    QUESTIONS[5],\n    'score_section_2',\n    bins=10,\n    title='امتیاز کلی رضایت شغلی و تجربه کاری بر حسب دانشگاه محل تحصیل',\n    xlabel=\"نمره\",\n    ylabel=None,\n)\n\n\n\n\n\n\n\n\n\n\n\nامتیاز کلی رضایت شغلی و تجربه کاری بر حسب اندازه شرکت\n\n\nCode\nplot_score_hist_by_category(\n    df,\n    QUESTIONS[10],\n    'score_section_2',\n    bins=10,\n    title='امتیاز کلی رضایت شغلی و تجربه کاری بر حسب اندازه شرکت',\n    xlabel=\"نمره\",\n    ylabel=None,\n    category_sort=ordered_company_sizes\n)"
  },
  {
    "objectID": "part04.html#بخش-۳-تعادل-کار-و-زندگی",
    "href": "part04.html#بخش-۳-تعادل-کار-و-زندگی",
    "title": "نتیجه پرسش‌نامه",
    "section": "بخش ۳: تعادل کار و زندگی",
    "text": "بخش ۳: تعادل کار و زندگی\nدر این بخش با استفاده از شش سنجه از مشارکت‌کنندگان خواسته شده تا تعادل میان کار و زندگی شخصی خود را ارزیابی کنند. به نظر می‌رسد در هیچ کدام از این سنجه‌ها اکثریت مطلق وجود ندارد. گزینه تاحدودی در همه سنجه‌ها درصد بالایی را به خود اختصاص داده است. در مورد زمان کاری، مشارکت‌کنندگان به دو گروه موافق و مخالف تقسیم می‌شوند. اکثریت مشارکت‌کنندگان امکان استفاده از دورکاری ندارند. در مورد میزان اهمیت سلامت جسمی و روانی کارکنان از جانب شرکت، پاسخ‌دهندگان نظر مشترکی ندارند. اکثریت آنان از سیاست‌ها و برنامه‌های شرکت برای حفظ تعادل کار و زندگی ناراضی هستند.\n\nزمان کاری من مناسب است و به من اجازه می‌دهد بین کار و زندگی تعادل برقرار کنم.\n\n\nCode\ntemp_order = [\n    'خیلی مخالفم',\n    'مخالفم',\n    'تا حدودی',\n    'موافقم',\n    \"خیلی موافقم\"\n]\ntemp_colors = {\n    temp_order[0]: COLORS['danger'],\n    temp_order[1]: COLORS['warning'],\n    temp_order[2]: COLORS['primary'],\n    temp_order[3]: COLORS['info'],\n    temp_order[4]: COLORS['success']\n}\nplot_builder(df,section_3_questions[0],ordered_list=temp_order, colors=temp_colors, title='زمان کاری من مناسب است و به من اجازه می‌دهد بین کار و زندگی تعادل برقرار کنم.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nشرکت امکان دورکاری برای من فراهم می‌کند.\n\n\nCode\nplot_builder(df,section_3_questions[1],temp_order, temp_colors, title='شرکت امکان دورکاری برای من فراهم می‌کند.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nشرکت به سلامت جسمی  کارکنان اهمیت می‌دهد.\n\n\nCode\nplot_builder(df,section_3_questions[2],temp_order, temp_colors, title='شرکت به سلامت جسمی  کارکنان اهمیت می‌دهد.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nشرکت به سلامت روانی کارکنان اهمیت می‌دهد.\n\n\nCode\nplot_builder(df,section_3_questions[3],temp_order, temp_colors, title='شرکت به سلامت روانی کارکنان اهمیت می‌دهد.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nشرایط کار در این شرکت امکان ایفای دیگر نقش‌ها و مسئولیت‌‌های کارکنان در زندگی (مانند والد بودن، همسر بودن، مراقبت از اعضای خانواده و …) را فراهم می‌کند.\n\n\nCode\nplot_builder(df,section_3_questions[4],temp_order, temp_colors, title='شرایط کار در این شرکت امکان ایفای دیگر نقش‌ها و مسئولیت‌‌های کارکنان در زندگی (مانند والد بودن، همسر بودن، مراقبت از اعضای خانواده و ...) را فراهم می‌کند.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nاز سیاست‌ها و برنامه‌های شرکت برای حفظ تعادل کار و زندگی رضایت دارم.\n\n\nCode\nplot_builder(df,section_3_questions[5],temp_order, temp_colors, title='از سیاست‌ها و برنامه‌های شرکت برای حفظ تعادل کار و زندگی رضایت دارم.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nامتیاز سنجه\n\nامتیاز کلی تعادل کار و زندگی بر حسب جنس\n\n\nCode\nplot_score_hist_by_category(\n    df,\n    QUESTIONS[0],\n    'score_section_3',\n    bins=10,\n    title='امتیاز کلی تعادل کار و زندگی بر حسب جنس',\n    xlabel=\"نمره\",\n    ylabel=None,\n    category_sort=None\n)\n\n\n\n\n\n\n\n\n\n\n\nامتیاز کلی تعادل کار و زندگی بر حسب سن\n\n\nCode\nplot_score_hist_by_category(\n    df,\n    QUESTIONS[1],\n    'score_section_3',\n    bins=10,\n    title='امتیاز کلی تعادل کار و زندگی بر حسب سن',\n    xlabel=\"نمره\",\n    ylabel=None,\n    category_sort=ordered_ages\n)\n\n\n\n\n\n\n\n\n\n\n\nامتیاز کلی تعادل کار و زندگی بر حسب دانشگاه محل تحصیل\n\n\nCode\nplot_score_hist_by_category(\n    df,\n    QUESTIONS[5],\n    'score_section_3',\n    bins=10,\n    title='امتیاز کلی تعادل کار و زندگی بر حسب دانشگاه محل تحصیل',\n    xlabel=\"نمره\",\n    ylabel=None,\n)\n\n\n\n\n\n\n\n\n\n\n\nامتیاز کلی تعادل کار و زندگی بر حسب اندازه شرکت\n\n\nCode\nplot_score_hist_by_category(\n    df,\n    QUESTIONS[10],\n    'score_section_3',\n    bins=10,\n    title='امتیاز کلی تعادل کار و زندگی بر حسب اندازه شرکت',\n    xlabel=\"نمره\",\n    ylabel=None,\n    category_sort=ordered_company_sizes\n)\n\n\n\n\n\n\n\n\n\n\n\n\nامکان ایفای دیگر نقش‌ها و مسئولیت‌ها بر حسب جنس\n\n\nCode\nplot_responses_by_category(df, df[QUESTIONS[0]], df[QUESTIONS[22]],title= \"امکان ایفای دیگر نقش‌ها و مسئولیت‌ها بر حسب جنس\",\n                          ordered_list=section3_answer_order)\n\n\n\n\n\n\n\n\n\n\n\nاهمیت سلامت جسمی کارکنان برای شرکت بر حسب اندازه شرکت\n\n\nCode\nplot_responses_by_category(df, df[QUESTIONS[10]], df[QUESTIONS[20]],title= \"اهمیت سلامت جسمی کارکنان برای شرکت بر حسب اندازه شرکت\",\n                          ordered_list=section3_answer_order, category_sort=ordered_company_sizes)\n\n\n\n\n\n\n\n\n\n\n\nاهمیت سلامت روان کارکنان برای شرکت بر حسب اندازه شرکت\n\n\nCode\nplot_responses_by_category(df, df[QUESTIONS[10]], df[QUESTIONS[21]],title= \"اهمیت سلامت روان کارکنان برای شرکت بر حسب اندازه شرکت\",\n                          ordered_list=section3_answer_order, category_sort=ordered_company_sizes)\n\n\n\n\n\n\n\n\n\n\n\nتعادل کار و زندگی با سایز شرکت\n\n\nCode\nplot_responses_by_category(df, df[QUESTIONS[10]], df[QUESTIONS[23]],title= \"رضایت کارکنان از سیاست‌ها و برنامه‌های شرکت‌ برای حفظ تعادل کار و زندگی بر حسب اندازه شرکت\",\n                          ordered_list=section3_answer_order, category_sort=ordered_company_sizes)"
  },
  {
    "objectID": "part04.html#بخش-۴-حقوق-و-مزایا",
    "href": "part04.html#بخش-۴-حقوق-و-مزایا",
    "title": "نتیجه پرسش‌نامه",
    "section": "بخش ۴: حقوق و مزایا",
    "text": "بخش ۴: حقوق و مزایا\nبرخلاف بخش‌های پیشین که مشارکت‌کنندگان که توزیع نسبتا متعادلی میان مخالف و موافق داشتند، تعداد ناراضیان از حقوق و مزایا بسیار بیشتر است. عموم مشارکت‌کنندگان نه تنها از حقوق و مزایای خود رضایت ندارند، بلکه آن را در مقایسه با دیگر شرکت‌ها رقابتی نمی‌دانند و توزیع آن را نیز عادلانه و منصفانه نمی‌بینند. به باور آنان، حقوق و مزایایی که می‌گیرند نسبت به اهمیت کاری که انجام می‌دهند منصفانه نیست.\n\nاز میزان حقوق و مزایای دریافتی خود رضایت دارم.\n\n\nCode\nplot_builder(df,section_4_questions[0],temp_order, temp_colors, title='از میزان حقوق و مزایای دریافتی خود رضایت دارم.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nحقوق من در این شرکت در مقایسه با دیگر شرکت‌ها رقابتی است.\n\n\nCode\nplot_builder(df,section_4_questions[1],temp_order, temp_colors, title='حقوق من در این شرکت در مقایسه با دیگر شرکت‌ها رقابتی است.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nمزایای جانبی شرکت (بیمه، پاداش، مرخصی و …) از کیفیت کافی برخوردار است.\n\n\nCode\nplot_builder(df,section_4_questions[2],temp_order, temp_colors, title='مزایای جانبی شرکت (بیمه، پاداش، مرخصی و ...) از کیفیت کافی برخوردار است.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nتوزیع دستمزد در سازمان ما عادلانه است.\n\n\nCode\nplot_builder(df,section_4_questions[3],temp_order, temp_colors, title='توزیع دستمزد در سازمان ما عادلانه است.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nحقوق و مزایای من با توجه به میزان کارم منصفانه است.\n\n\nCode\nplot_builder(df,section_4_questions[4],temp_order, temp_colors, title='حقوق و مزایای من با توجه به میزان کارم منصفانه است.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nحقوق و مزایای من با توجه به اهمیت کارم منصفانه است.\n\n\nCode\nplot_builder(df,section_4_questions[5],temp_order, temp_colors, title='حقوق و مزایای من با توجه به اهمیت کارم منصفانه است.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nسنجه کلی\n\nامتیاز کلی حقوق و مزایا بر حسب اندازه شرکت\n\n\nCode\nplot_score_hist_by_category(\n    df,\n    QUESTIONS[10],\n    'score_section_4',\n    bins=10,\n    title='امتیاز کلی حقوق و مزایا بر حسب اندازه شرکت',\n    xlabel=\"نمره\",\n    ylabel=None,\n    category_sort=ordered_company_sizes\n)"
  },
  {
    "objectID": "part04.html#بخش-۵-فرصتهای-رشد-و-آموزش",
    "href": "part04.html#بخش-۵-فرصتهای-رشد-و-آموزش",
    "title": "نتیجه پرسش‌نامه",
    "section": "بخش ۵: فرصت‌های رشد و آموزش",
    "text": "بخش ۵: فرصت‌های رشد و آموزش\nدر این بخش با استفاده از چهار سنجه، نظر مشارکت‌کنندگان نسبت به فرصت‌هایی که شرکت برای ارتقای شغلی و یادگیری در اختیار آنان قرار می‌دهد سنجیده شده است. پاسخ‌ها نشان می‌دهد که بیشترین نارضایتی در این بخش، مربوط به مسیرهای ارتقای شغلی است که مشارکت‌کنندکان رأی به عدم شفافیت مسیرهای آن داده‌اند. رأی مشارکت‌کنندگان درباره فرصت‌های یادگیری در شرکت، نسبتا متعادل و مثبت است؛ به ویژه ارزیابی‌شان از امکان یادگیری از همکاران و مدیرانشان. همین طور فرصت‌های کافی برای رشد حرفه‌ای برایشان وجود دارد.\n\nمسیرهای روشن و مشخصی برای ارتقاء شغلی در سازمان وجود دارد.\n\n\nCode\nplot_builder(df,section_5_questions[0],temp_order, temp_colors, title='مسیرهای روشن و مشخصی برای ارتقاء شغلی در سازمان وجود دارد.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nمن از برنامه‌های آموزشی و توسعه مهارت‌ها در شرکت بهره‌مند شده‌ام.\n\n\nCode\nplot_builder(df,section_5_questions[1],temp_order, temp_colors, title='من از برنامه‌های آموزشی و توسعه مهارت‌ها در شرکت بهره‌مند شده‌ام.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nفرصت‌های کافی برای یادگیری و رشد حرفه‌ای در شرکت وجود دارد.\n\n\nCode\nplot_builder(df,section_5_questions[2],temp_order, temp_colors, title='فرصت‌های کافی برای یادگیری و رشد حرفه‌ای در شرکت وجود دارد.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nامکان یادگیری از همکاران و مدیران در شرکت وجود دارد.\n\n\nCode\nplot_builder(df,section_5_questions[3],temp_order, temp_colors, title='امکان یادگیری از همکاران و مدیران در شرکت وجود دارد.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nسنجه کلی\n\n\nمسیرهای روشن و مشخص رشد و ارتقا بر حسب اندازه شرکت\n\n\nCode\nplot_responses_by_category(df, df[QUESTIONS[10]], df[QUESTIONS[32]],title= \"مسیرهای روشن و مشخص رشد و ارتقا بر حسب اندازه شرکت\",\n                          ordered_list=section3_answer_order, category_sort=ordered_company_sizes)"
  },
  {
    "objectID": "part04.html#بخش-۶-فرهنگ-سازمانی-و-محیط-کار",
    "href": "part04.html#بخش-۶-فرهنگ-سازمانی-و-محیط-کار",
    "title": "نتیجه پرسش‌نامه",
    "section": "بخش ۶: فرهنگ سازمانی و محیط کار",
    "text": "بخش ۶: فرهنگ سازمانی و محیط کار\nدر این بخش با بهره‌گیری از شش سنجه نظر مشارکت‌کنندگان در ارتباط با میزان احساس امنیت و هم‌خوانی ارزشی و رفتاری با سازمان سنجیده شده است. در حالی که رضایت از فرهنگ سازمان و ارزش‌های شرکت مشارکت‌کنندگان را به دو گروه موافق و مخالف تقسیم می‌کند، اکثریت مشارکت‌کنندگان اظهار کرده‌اند که شرکت آن‌ها را همان طور که هستند می‌پذیرد و محیط کارشان صمیمی و مشارکت‌محور است. هر چند که به نظر نمی‌رسد افراد احساس کنند سازمان برای کنترل رفتار ناسالم (بین فردی و سازمانی) ساز و کارهای موثری داشته باشد.\n\nاز فرهنگ سازمانی و ارزش‌های شرکت رضایت دارم.\n\n\nCode\ntemp_order = [\n    'به هیچ وجه',\n    'کم',\n    'تا حدودی',\n    'زیاد',\n    'خیلی زیاد'\n]\ntemp_colors = {\n    temp_order[0]: COLORS['danger'],\n    temp_order[1]: COLORS['warning'],\n    temp_order[2]: COLORS['primary'],\n    temp_order[3]: COLORS['info'],\n    temp_order[4]: COLORS['success']\n}\n\nplot_builder(df,section_6_questions[0],temp_order, temp_colors, title='از فرهنگ سازمانی و ارزش‌های شرکت رضایت دارم.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nشرکت مرا همانطور که هستم می پذیرد.\n\n\nCode\nplot_builder(df,section_6_questions[1],temp_order, temp_colors, title='شرکت مرا همانطور که هستم می پذیرد.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nمحیط کار من صمیمی و مشارکت‌محور است.\n\n\nCode\nplot_builder(df,section_6_questions[2],temp_order, temp_colors, title='محیط کار من صمیمی و مشارکت‌محور است.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nدر این سازمان  امنیت شغلی دارم.\n\n\nCode\nplot_builder(df,section_6_questions[3],temp_order, temp_colors, title='در این سازمان  امنیت شغلی دارم.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nسازوکار کارآمدی برای کنترل رفتارهای ناسالم سازمانی (رقابت ناسالم، خبرچینی، تخریب وجهه همکاران و…) در سازمان ما وجود دارد.\n\n\nCode\nplot_builder(df,section_6_questions[4],temp_order, temp_colors, title='سازوکار کارآمدی برای کنترل رفتارهای ناسالم سازمانی (رقابت ناسالم، خبرچینی، تخریب وجهه همکاران و...) در سازمان ما وجود دارد.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nسازوکار کارآمدی برای کنترل رفتارهای ناسالم بین فردی (انواع آزار محیط کار از قبیل آزار جنسی یا سوء استفاده از قدرت) در سازمان ما وجود دارد.\n\n\nCode\nplot_builder(df,section_6_questions[5],temp_order, temp_colors, title='سازوکار کارآمدی برای کنترل رفتارهای ناسالم بین فردی (انواع آزار محیط کار از قبیل آزار جنسی یا سوء استفاده از قدرت) در سازمان ما وجود دارد.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nسنجه کلی\n\n\nرضایت از فرهنگ و ارزش‌های شرکت بر حسب جنس\n\n\nCode\nplot_responses_by_category(df, df[QUESTIONS[0]], df[QUESTIONS[37]],title= \"رضایت از فرهنگ و ارزش‌های شرکت بر حسب جنس\",\n                          ordered_list=section6_answer_order)\n\n\n\n\n\n\n\n\n\n\n\nوجود ساز و کار کارآمد برای کنترل رفتارهای ناسالم سازمانی بر حسب جنس\n\n\nCode\nplot_responses_by_category(df, df[QUESTIONS[0]], df[QUESTIONS[41]],title= \"وجود ساز و کار کارآمد برای کنترل رفتارهای ناسالم سازمانی بر حسب جنس\",\n                          ordered_list=section6_answer_order)\n\n\n\n\n\n\n\n\n\n\n\nوجود ساز و کار کارآمد برای کنترل رفتارهای ناسالم سازمانی بر حسب اندازه شرکت\n\n\nCode\nplot_responses_by_category(df, df[QUESTIONS[10]], df[QUESTIONS[41]],title= \"وجود ساز و کار کارآمد برای کنترل رفتارهای ناسالم سازمانی بر حسب اندازه شرکت\",\n                          ordered_list=section6_answer_order, category_sort=ordered_company_sizes)\n\n\n\n\n\n\n\n\n\n\n\nوجود ساز و کار کارآمد برای کنترل رفتارهای ناسالم بین فردی بر حسب جنس\n\n\nCode\nplot_responses_by_category(df, df[QUESTIONS[0]], df[QUESTIONS[42]],title= \"وجود ساز و کار کارآمد برای کنترل رفتارهای ناسالم بین فردی بر حسب جنس\",\n                          ordered_list=section6_answer_order)\n\n\n\n\n\n\n\n\n\n\n\nوجود ساز و کار کارآمد برای کنترل رفتارهای ناسالم بین فردی بر حسب اندازه شرکت\n\n\nCode\nplot_responses_by_category(df, df[QUESTIONS[10]], df[QUESTIONS[42]],title= \"وجود ساز و کار کارآمد برای کنترل رفتارهای ناسالم بین فردی بر حسب اندازه شرکت\",\n                          ordered_list=section6_answer_order, category_sort=ordered_company_sizes)"
  },
  {
    "objectID": "part04.html#بخش-۷-مدیریت-و-رهبری",
    "href": "part04.html#بخش-۷-مدیریت-و-رهبری",
    "title": "نتیجه پرسش‌نامه",
    "section": "بخش ۷: مدیریت و رهبری",
    "text": "بخش ۷: مدیریت و رهبری\nدر این بخش با استفاده از ۴ سنجه نظر مشارکت‌کنندگان درباره عمل‌کرد مدیرانشان پرسیده شده است. در مجموع به نظر می‌رسد مشارکت‌کنندگان از عمل‌کرد مدیران خود راضی هستند هرچند بیشتر آنان گزینه محافظه‌کارانه تاحدودی را ترجیح داده‌اند. در مورد شفاف و منطقی بودن تصمیم‌‌گیری‌های مدیران، مخالفت‌ها بیشتر از دیگر سنجه‌هاست.\n\nاز حمایت و راهنمایی‌های مدیر مستقیم خود رضایت دارم.\n\n\nCode\nplot_builder(df,section_7_questions[0],temp_order, temp_colors, title='از حمایت و راهنمایی‌های مدیر مستقیم خود رضایت دارم.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nمدیران بازخوردهای من را می‌شنوند و به آن‌ها عمل می‌کنند.\n\n\nCode\nplot_builder(df,section_7_questions[1],temp_order, temp_colors, title='مدیران بازخوردهای من را می‌شنوند و به آن‌ها عمل می‌کنند.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nتصمیم‌گیری‌های مدیران برای من شفاف و منطقی است.\n\n\nCode\nplot_builder(df,section_7_questions[2],temp_order, temp_colors, title='تصمیم‌گیری‌های مدیران برای من شفاف و منطقی است.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nاعتبار و تشویق کاری که انجام می‌دهم به خودم (نه به مدیر مافوقم) می‌رسد.\n\n\nCode\nplot_builder(df,section_7_questions[3],temp_order, temp_colors, title='اعتبار و تشویق کاری که انجام می‌دهم به خودم (نه به مدیر مافوقم) می‌رسد.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nسنجه کلی\n\nامتیاز کلی مدیریت و رهبری بر حسب اندازه شرکت\n\n\nCode\nplot_score_hist_by_category(\n    df,\n    QUESTIONS[10],\n    'score_section_7',\n    bins=10,\n    title='امتیاز کلی مدیریت و رهبری بر حسب اندازه شرکت',\n    xlabel=\"نمره\",\n    ylabel=None,\n    category_sort=ordered_company_sizes\n)"
  },
  {
    "objectID": "part04.html#بخش-۸-دیدگاههای-کلان-نسبت-به-سازمان",
    "href": "part04.html#بخش-۸-دیدگاههای-کلان-نسبت-به-سازمان",
    "title": "نتیجه پرسش‌نامه",
    "section": "بخش ۸: دیدگاه‌های کلان نسبت به سازمان",
    "text": "بخش ۸: دیدگاه‌های کلان نسبت به سازمان\nدر این بخش دیدگاه‌های کلان مشارکت‌کنندگان به ویژه در حوزه فناوری اطلاعات، با بهره‌گیری از پنج سنجه، سنجیده شده است. مشارکت‌کنندگان اگر شرکت‌های خود را در حوزه فناوری اطلاعات پیشرو می‌دانند، اما پیاده‌سازی فناوری‌های جدید را متوسط ارزیابی می‌کنند. رویکرد آن‌ها در ارتباط با روشن بودن استراتژی‌ها، انعطاف‌پذیری شرکت و اختصاص منابع و بودجه برای رسیدن به اهداف استراتژیک بدبینانه‌تر است. در این بخش هم مانند بخش‌های قبلی، استراتژی‌ها و اهداف کلی شرکت برای مشارکت‌کنندگان روشن نیست.\n\nشرکت ما در حوزه IT پیشرو است.\n\n\nCode\nplot_builder(df,section_8_questions[0],temp_order, temp_colors, title='شرکت ما در حوزه IT پیشرو است.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nشرکت نوآوری‌ها و فناوری‌های جدید را به خوبی پیاده‌سازی می‌کند.\n\n\nCode\nplot_builder(df,section_8_questions[1],temp_order, temp_colors, title='شرکت نوآوری‌ها و فناوری‌های جدید را به خوبی پیاده‌سازی می‌کند.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nاستراتژی‌ها و اهداف کلی شرکت برای من روشن هستند.\n\n\nCode\nplot_builder(df,section_8_questions[2],temp_order, temp_colors, title='استراتژی‌ها و اهداف کلی شرکت برای من روشن هستند.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nشرکت در مواجهه با تغییرات فناوری و نیازهای بازار انعطاف‌پذیری مطلوبی دارد.\n\n\nCode\nplot_builder(df,section_8_questions[3],temp_order, temp_colors, title='شرکت در مواجهه با تغییرات فناوری و نیازهای بازار انعطاف‌پذیری مطلوبی دارد.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nمنابع و بودجه شرکت به درستی برای دستیابی به اهداف استراتژیک تخصیص داده می‌شوند.\n\n\nCode\nplot_builder(df,section_8_questions[4],temp_order, temp_colors, title='منابع و بودجه شرکت به درستی برای دستیابی به اهداف استراتژیک تخصیص داده می‌شوند.', xlabel='میزان موافقت', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nسنجه کلی"
  },
  {
    "objectID": "part04.html#بخش-۹-تصمیم-به-ماندن-یا-ترک-شرکت",
    "href": "part04.html#بخش-۹-تصمیم-به-ماندن-یا-ترک-شرکت",
    "title": "نتیجه پرسش‌نامه",
    "section": "بخش ۹: تصمیم به ماندن یا ترک شرکت",
    "text": "بخش ۹: تصمیم به ماندن یا ترک شرکت\nدر این بخش اصلی‌ترین موضوع مورد توجه این پژوهش سنجیده شده است، یعنی قصد جابجایی، قصد مهاجرت و عوامل بازدارنده. همان طور که دیده می‌شود، فرصت‌های شغلی جایگزین برای اکثریت مطلق مشارکت‌کنندگان وجود دارد. به نظر می‌رسد جابجایی به شرکت‌های بزرگ‌تر اصلی‌ترین هدف مهاجرت‌های شغلی باشد. علاوه بر این، برخلاف انتظار پژوهش‌گران، مشارکت‌کنندگان تمایل دارند تا در موقعیت شغلی خود باقی بمانند و عامل حقوق و مزایا هم در ماندن و هم در رفتن از سازمان نقش اصلی را دارد. اگرچه اکثریت مشارکت‌کنندگان در این پژوهش در دو سال آینده قصد مهاجرت ندارند، اولین عامل ترغیب آنان که می‌خواهند مهاجرت کنند، بی‌ثباتی اقتصادی ایران و آخرین عامل مسأله آزادی اجتماعی در ایران است.\n\nدر سال گذشته پیشنهاد شغلی دیگری داشته‌اید؟\n\n\nCode\ntemp_order = ['خیر', 'بله']\ntemp_colors = {\n    'بله': COLORS['success'],\n    'خیر': COLORS['danger']\n}\n\n\nplot_builder(df,section_9_questions[0],temp_order, temp_colors, title='در سال گذشته پیشنهاد شغلی دیگری داشته‌اید؟', xlabel='پاسخ', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nاگر از این شرکت بروید قصد دارید:\n\n\nCode\nplot_builder(df,section_9_questions[1], title='اگر از این شرکت بروید قصد دارید:', xlabel='پاسخ', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nآیا قصد دارید تا دو سال آینده همچنان در این شرکت بمانید؟\n\n\nCode\ntemp_order = [\n    'به هیچ وجه',\n    'احتمالاً نه',\n    'مطمئن نیستم',\n    'احتمالاً بله',\n    'قطعاً بله'\n]\n\ntemp_colors = {\n    temp_order[0]: COLORS['danger'],\n    temp_order[1]: COLORS['warning'],\n    temp_order[2]: COLORS['primary'],\n    temp_order[3]: COLORS['info'],\n    temp_order[4]: COLORS['success']\n}\nplot_builder(df,section_9_questions[2],temp_order, temp_colors, title='آیا قصد دارید تا دو سال آینده همچنان در این شرکت بمانید؟', xlabel='پاسخ', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nاگر قصد ماندن دارید کدام‌یک از عوامل زیر شما را به ماندن ترغیب می‌کند؟ (با شماره گذاری اولویت بندی کنید)\n\n\nCode\n\nplot_stacked_bar_chart_from_counts(column_elemnt_counter(df,section_9_questions[3]), \n                                   title = \"اولویت عوامل در ترغیب به ماندن در شرکت\",\n                                   xlabel = \"اولویت\",\n                                   ylabel = \"تعداد\",\n                                  )\n\n\n\n\n\n\n\n\n\n\n\nاگر قصد رفتن از سازمان را دارید کدام‌یک از عوامل زیر بیش‌ترین تأثیر را بر تصمیم شما دارد؟\n\n\nCode\nplot_stacked_bar_chart_from_counts(column_elemnt_counter(df,section_9_questions[4]), \n                                   title = \"اولویت عوامل در ترغیب به رفتن از شرکت\",\n                                   xlabel = \"اولویت\",\n                                   ylabel = \"تعداد\"\n                                  )\n\n\n\n\n\n\n\n\n\n\n\nآیا طی دو سال آینده قصد مهاجرت دارید؟\n\n\nCode\ntemp_order = ['خیر', 'بله']\ntemp_colors = {\n    'بله': COLORS['success'],\n    'خیر': COLORS['danger']\n}\n\n\nplot_builder(df,section_9_questions[5],temp_order, temp_colors, title='آیا طی دو سال آینده قصد مهاجرت دارید؟', xlabel='پاسخ', ylabel='تعداد')\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_responses_by_category(df, section_9_questions[5], df[QUESTIONS[5]],title= \"قصد مهاجرت بر حسب دانشگاه محل تحصیل\",\n                          xlabel= \"دانشگاه\", ylabel=\"تعداد\")\n\n\n\n\n\n\n\n\n\n\n\nاگر قصد مهاجرت دارید کدام‌ یک از عوامل زیر بیش‌ترین تأثیر را در تصمیم شما دارد؟\n\n\nCode\nplot_stacked_bar_chart_from_counts(column_elemnt_counter(df,section_9_questions[6]), \n                                   title = \"اولویت عوامل در ترغیب به مهاجرت\",\n                                   xlabel = \"اولویت\",\n                                   ylabel = \"تعداد\"\n                                  )"
  },
  {
    "objectID": "part01.html",
    "href": "part01.html",
    "title": "طراحی",
    "section": "",
    "text": "طراحی\n\nدر ابتدا و پیش از طراحی پرسش‌نامه، در پی آن برآمدیم تا بفهمیم منابع انسانی شرکت‌ها زمانی که نیرویی از آن شرکت می‌رود معمولا چه می‌پرسند. مساله‌ای که توجه ما را به خود جلب کرد این بود که جستجوی در منابع نشانمان داد عمده پژوهش‌های صورت گرفته روی موضوع ترک سازمان، در حوزه منابع انسانی سازمان‌هاست و جامعه‌شناسان پرسش‌نامه استانداردی برای آن ندارند. همین طور به واسطه ورود انسان‌شناسان به استارت‌آپ‌ها و در دست گرفتن فرایندهای طراحی تجربه کاربری، بخش‌های گوناگون منابع انسانی سازمان‌ها نیز از رویکردهای انسان‌شناسانه اثر پذیرفته‌اند و در هنگام خروج افراد از سازمان، به جای پرسش‌نامه خروج استاندارد، مصاحبه خروج دارند. به عبارت دیگر، اغلب توصیه‌هایی که به منابع انسانی سازمان‌ها می‌شد که چه و چطور بپرسند رویکردی کیفی داشتند و به جای این که پرسش‌نامه‌ای آماده پیشنهاد دهند که در اختیار افراد قرار گیرد تا پر کنند و بخش منابع انسانی را از کم و کاستی‌ها باخبر سازند، بیشتر بر گفتگو و مصاحبه تاکید داشتند و پرسش‌های کلی پیشنهاد می‌دادند. از این رو، متوجه شدیم که بر خلاف تصور قبلی ما، رویکردهای پژوهش‌های کیفی به واسطه حضور انسان‌شناسان و جامعه‌شناسان در بخش‌های طراحی کاربری شرکت‌های خارجی و گسترش حیطه نفوذ و اثربخشی آنان به دیگر بخش‌هایی که با گروه‌های انسانی سر و کار دارند، کم کم جای رویکردهای کیفی را در شرکت‌های فناورانه باز کرده است.\nچنین شد که به جای مبنا قرار دادن پرسش‌نامه‌ای از پیش تعیین‌شده،‌ خود دست به کار طراحی پرسش‌نامه‌ای بر اساس نیاز پروژه و نتایج برآمده از فاز پیشین شدیم. ساختار پرسش‌نامه\nپرسش‌نامه ۹ بخش دارد. بخش اول پرسش‌هایی هستند که به اطلاعات زمینه‌ای می‌پردازند. بخش‌های دوم تا هشتم درباره محیط و شرایط کار هستند و تلاش دارند تصویری از برداشت فرد از وضعیت خود در شرکت ترسیم کنند. بخش نهم به مساله ترک شرکت و مهاجرت می‌پردازد. ۵۶ پرسش از مشارکت‌کنندگان پرسیده می‌شود و به طور میانگین پر کردن آن ۶ دقیقه از هر فرد زمان می‌گیرد.\nجدول زیر شمایی کلی از پرسش‌نامه ارائه می‌دهد:\n\n \n  \n  \n  جدول سوال‌های پرسش‌نامه\n  \n \n \n  \n  \n\n\n\nشماره سوال\nبخش\nموضوع بخش\nشماره سوال در بخش\nسوال\nنوع\n\n\n\n\n1\n1\nاطلاعات زمینه‌ای\n1\nجنسیت شما\nچند گزینه‌ای - تک انتخابی\n\n\n2\n1\nاطلاعات زمینه‌ای\n2\nسن شما\nچند گزینه‌ای - تک انتخابی\n\n\n3\n1\nاطلاعات زمینه‌ای\n3\nوضعیت تاهل\nچند گزینه‌ای - تک انتخابی\n\n\n4\n1\nاطلاعات زمینه‌ای\n4\nسطح تحصیلات\nچند گزینه‌ای - تک انتخابی\n\n\n5\n1\nاطلاعات زمینه‌ای\n5\nرشته تحصیلی\nکوتاه پاسخ\n\n\n6\n1\nاطلاعات زمینه‌ای\n6\nدانشگاه محل تحصیل\nکوتاه پاسخ\n\n\n7\n1\nاطلاعات زمینه‌ای\n7\nسابقه کار شما در حوزه فناوری اطلاعات\nچند گزینه‌ای - تک انتخابی\n\n\n8\n1\nاطلاعات زمینه‌ای\n8\nمدت زمان فعالیت شما در شرکت فعلی\nچند گزینه‌ای - تک انتخابی\n\n\n9\n1\nاطلاعات زمینه‌ای\n9\nنوع قراردادتان با شرکت\nچند گزینه‌ای - تک انتخابی\n\n\n10\n1\nاطلاعات زمینه‌ای\n10\nاصلی‌ترین نقش یا عنوان شغلی فعلی شما\nچند گزینه‌ای - تک انتخابی\n\n\n11\n1\nاطلاعات زمینه‌ای\n11\nاندازه شرکت\nچند گزینه‌ای - تک انتخابی\n\n\n12\n2\nرضایت شغلی و تجربه کاری\n1\nاز شرح شغل خود راضی هستم\nطیفی - لیکرت\n\n\n13\n2\nرضایت شغلی و تجربه کاری\n2\nاز وظایفی که به من داده می‌شود راضی هستم\nطیفی - لیکرت\n\n\n14\n2\nرضایت شغلی و تجربه کاری\n3\nاحساس می‌کنم شغل من با مهارت‌ها و علاقه‌مندی‌هایم هم‌خوانی دارد\nطیفی - لیکرت\n\n\n15\n2\nرضایت شغلی و تجربه کاری\n4\nدر کل، از شغل و موقعیت شغلی فعلی خود رضایت دارم\nطیفی - لیکرت\n\n\n16\n2\nرضایت شغلی و تجربه کاری\n5\nاحساس می‌کنم که شغلم در موفقیت کلی سازمان تأثیرگذار است\nطیفی - لیکرت\n\n\n17\n2\nرضایت شغلی و تجربه کاری\n6\nمی‌توان گفت سازمان قدردان تلاش‌های من است\nطیفی - لیکرت\n\n\n18\n3\nتعادل کار و زندگی\n1\nزمان کاری من مناسب است و به من اجازه می‌دهد بین کار و زندگی تعادل برقرار کنم\nطیفی - لیکرت\n\n\n19\n3\nتعادل کار و زندگی\n2\nشرکت امکان دورکاری برای من فراهم می‌کند\nطیفی - لیکرت\n\n\n20\n3\nتعادل کار و زندگی\n3\nشرکت به سلامت جسمی کارکنان اهمیت می‌دهد\nطیفی - لیکرت\n\n\n21\n3\nتعادل کار و زندگی\n4\nشرکت به سلامت روانی کارکنان اهمیت می‌دهد\nطیفی - لیکرت\n\n\n22\n3\nتعادل کار و زندگی\n5\nشرایط کار در این شرکت امکان ایفای دیگر نقش‌ها و مسئولیت‌‌های کارکنان در زندگی (مانند والد بودن، همسر بودن، مراقبت از اعضای خانواده و ...) را فراهم می‌کند\nطیفی - لیکرت\n\n\n23\n3\nتعادل کار و زندگی\n6\nاز سیاست‌ها و برنامه‌های شرکت برای حفظ تعادل کار و زندگی رضایت دارم\nطیفی - لیکرت\n\n\n24\n4\nحقوق و مزایا\n1\nاز میزان حقوق و مزایای دریافتی خود رضایت دارم\nطیفی - لیکرت\n\n\n25\n4\nحقوق و مزایا\n2\nحقوق من در این شرکت در مقایسه با دیگر شرکت‌ها رقابتی است\nطیفی - لیکرت\n\n\n26\n4\nحقوق و مزایا\n3\nمزایای جانبی شرکت (بیمه، پاداش، مرخصی و ...) از کیفیت کافی برخوردار است\nطیفی - لیکرت\n\n\n27\n4\nحقوق و مزایا\n4\nتوزیع دستمزد در سازمان ما عادلانه است\nطیفی - لیکرت\n\n\n28\n4\nحقوق و مزایا\n5\nحقوق و مزایای من با توجه به میزان کارم منصفانه است\nطیفی - لیکرت\n\n\n29\n4\nحقوق و مزایا\n6\nحقوق و مزایای من با توجه به اهمیت کارم منصفانه است\nطیفی - لیکرت\n\n\n30\n5\nفرصت‌های رشد و آموزش\n1\nمسیرهای روشن و مشخصی برای ارتقاء شغلی در سازمان وجود دارد\nطیفی - لیکرت\n\n\n31\n5\nفرصت‌های رشد و آموزش\n2\nمن از برنامه‌های آموزشی و توسعه مهارت‌ها در شرکت بهره‌مند شده‌ام\nطیفی - لیکرت\n\n\n32\n5\nفرصت‌های رشد و آموزش\n3\nفرصت‌های کافی برای یادگیری و رشد حرفه‌ای در شرکت وجود دارد\nطیفی - لیکرت\n\n\n33\n5\nفرصت‌های رشد و آموزش\n4\nامکان یادگیری از همکاران و مدیران در شرکت وجود دارد.\nطیفی - لیکرت\n\n\n34\n6\nفرهنگ سازمانی و محیط کار\n1\nاز فرهنگ سازمانی و ارزش‌های شرکت رضایت دارم\nطیفی - لیکرت\n\n\n35\n6\nفرهنگ سازمانی و محیط کار\n2\nشرکت مرا همانطور که هستم می‌پذیرد\nطیفی - لیکرت\n\n\n36\n6\nفرهنگ سازمانی و محیط کار\n3\nمحیط کار من صمیمی و مشارکت‌محور است\nطیفی - لیکرت\n\n\n37\n6\nفرهنگ سازمانی و محیط کار\n4\nدر این سازمان امنیت شغلی دارم\nطیفی - لیکرت\n\n\n38\n6\nفرهنگ سازمانی و محیط کار\n5\nسازوکار کارآمدی برای کنترل رفتارهای ناسالم سازمانی (رقابت ناسالم، خبرچینی، تخریب وجهه همکاران و...) در سازمان ما وجود دارد\nطیفی - لیکرت\n\n\n39\n6\nفرهنگ سازمانی و محیط کار\n6\nسازوکار کارآمدی برای کنترل رفتارهای ناسالم بین فردی (انواع آزار محیط کار از قبیل آزار جنسی یا سوء استفاده از قدرت) در سازمان ما وجود دارد\nطیفی - لیکرت\n\n\n40\n7\nمدیریت و رهبری\n1\nاز حمایت و راهنمایی‌های مدیر مستقیم خود رضایت دارم\nطیفی - لیکرت\n\n\n41\n7\nمدیریت و رهبری\n2\nاعتبار و تشویق کاری که انجام می‌دهم به خودم (نه به مدیر مافوقم) می‌رسد\nطیفی - لیکرت\n\n\n42\n7\nمدیریت و رهبری\n3\nمدیران بازخوردهای من را می‌شنوند و به آن‌ها عمل می‌کنند\nطیفی - لیکرت\n\n\n43\n7\nمدیریت و رهبری\n4\nتصمیم‌گیری‌های مدیران برای من شفاف و منطقی است\nطیفی - لیکرت\n\n\n44\n8\nدیدگاه‌های کلان نسبت به سازمان\n1\nشرکت ما در حوزه IT پیشرو است\nطیفی - لیکرت\n\n\n45\n8\nدیدگاه‌های کلان نسبت به سازمان\n2\nشرکت نوآوری‌ها و فناوری‌های جدید را به خوبی پیاده‌سازی می‌کند\nطیفی - لیکرت\n\n\n46\n8\nدیدگاه‌های کلان نسبت به سازمان\n3\nاستراتژی‌ها و اهداف کلی شرکت برای من روشن هستند\nطیفی - لیکرت\n\n\n47\n8\nدیدگاه‌های کلان نسبت به سازمان\n4\nشرکت در مواجهه با تغییرات فناوری و نیازهای بازار انعطاف‌پذیری مطلوبی دارد\nطیفی - لیکرت\n\n\n48\n8\nدیدگاه‌های کلان نسبت به سازمان\n5\nمنابع و بودجه شرکت به درستی برای دستیابی به اهداف استراتژیک تخصیص داده می‌شوند\nطیفی - لیکرت\n\n\n49\n9\nتصمیم به ماندن یا ترک شرکت\n1\nدر سال گذشته پیشنهاد شغلی دیگری داشته‌اید؟\nچند گزینه‌ای - تک پاسخ\n\n\n50\n9\nتصمیم به ماندن یا ترک شرکت\n2\nاگر از این شرکت بروید قصد دارید:\nچند گزینه‌ای - تک پاسخ\n\n\n51\n9\nتصمیم به ماندن یا ترک شرکت\n3\nآیا قصد دارید تا دو سال آینده همچنان در این شرکت بمانید\nچند گزینه‌ای - تک پاسخ\n\n\n52\n9\nتصمیم به ماندن یا ترک شرکت\n4\nاگر قصد ماندن دارید کدام‌یک از عوامل زیر شما را به ماندن ترغیب می‌کند؟\nاولویت‌بندی\n\n\n53\n9\nتصمیم به ماندن یا ترک شرکت\n5\nاگر قصد رفتن از سازمان را دارید کدام‌یک از عوامل زیر بیش‌ترین تأثیر را بر تصمیم شما دارد؟\nاولویت‌بندی\n\n\n54\n9\nتصمیم به ماندن یا ترک شرکت\n6\nآیا طی دو سال آینده قصد مهاجرت دارید؟\nچند گزینه‌ای - تک پاسخ\n\n\n55\n9\nتصمیم به ماندن یا ترک شرکت\n7\nاگر قصد مهاجرت دارید کدام‌ یک از عوامل زیر بیش‌ترین تأثیر را در تصمیم شما دارد؟\nاولویت‌بندی\n\n\n56\n9\nتصمیم به ماندن یا ترک شرکت\n8\nلطفاً حوزه فعالیت و نام شرکتی را که در آن شاغلید بنویسید\nکوتاه پاسخ\n\n\n\n\n  \n\n\n\nروایی و پایایی\n\nپرسش‌نامه‌های استاندارد یا آن‌هایی که از روی پرسش‌نامه‌های استاندارد تهیه می‌شوند، چون بارها و بارها از نظر متخصصان گذشته‌اند و همین طور در سنجش‌های مکرر، نتایجی تقریبا همسان داشته‌اند، مورد اعتماد جامعه علمی هستند. این دو ویژگی، یعنی روایی و پایایی، باید برای پرسش‌نامه‌های تازه طراحی‌شده مورد سنجش قرار گیرند تا بتوان به نتایج برآمده از آن‌ها اعتنا داشت.\nاین دو شرط روایی و پایایی، در اساس توافق‌های جامعه علمی بر سر ابزار اندازه‌گیری هستند. پرسش‌نامه تازه ادعا دارد که می‌تواند متغیرهایی را اندازه بگیرد. حال متخصصان آن حوزه باید توافق کنند که آیا چنین پرسش‌نامه‌ای اساسا می‌تواند منجر به چنان سنجشی شود یا نه. پس از این که ادعای روایی توانست توافق متخصصان را جلب کند، باید دید که خود این ابزار آیا با تکرار استفاده نتایجی همسان ارائه می‌دهد یا نتایج چنان با هم ناهم‌خوان هستند که جایی از کار می‌لنگد؟\nبرای سنجش روایی پرسش‌نامه آن را در اختیار ۵ متخصص قرار دادیم. ۲ نفر از آنان متخصص حوزه منابع انسانی بودند. ۲ نفر دیگر دکتری جامعه‌شناسی داشتند و در حوزه‌های گوناگون به پژوهش‌های کمی می‌پرداختند. نفر پنجم استاد برجسته دانشگاه بود که علاوه بر تسلط بر انواع روش‌های کمی و کیفی و زیر و بم‌های هر کدام، شناخت عمیقی از شیوه‌های گوناگون پژوهش بر جنبه‌های اقتصادی جوامع کوچک و متوسط مقیاس دارد.\nیکی از متخصصان پیشنهاد اضافه کردن یک پرسش را مطرح کرد که به پرسش‌نامه اضافه شد و دوباره در اختیار آنان قرار گرفت. به جز این، اصلاح دیگری بر پرسش‌نامه اولیه اعمال نشد و هر پنج متخصص بر اعتبار/روایی پرسش‌نامه اتفاق نظر داشتند. از این رو آماده سنجش پایایی آن با آزمون اولیه شدیم. آزمون اولیه\nآزمون اولیه با مشارکت ۱۰ نفر از جامعه هدف (کارمندان شرکت‌های فناوری اطلاعات استان تهران) که به طور تصادفی انتخاب نشده بودند برگزار شد. لینک پرسش‌نامه آنلاین را برایشان فرستادیم و ظرف ۹ روز پاسخ‌ها را جمع کردیم. تحلیل نتایج نشان می‌داد که نتایج متفاوت ولی همسان هستند، یعنی پرسش‌ها به شکل‌های گوناگونی در افراد مختلف تفسیر نمی‌شوند و دامنه تغییرات پاسخ‌ها به حدی نیست که نشان دهد ایرادی ساختاری یا مفهومی در پرسش‌نامه وجود دارد.\nاز این جا نیز پی بردیم که نتیجه کار، طراحی پرش‌نامه‌ای معتبر شده است که می‌تواند ما را در فهم بهتر اهداف و انگیزه‌های جامعه هدف یاری دهد."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "گزارش فاز دوم",
    "section": "",
    "text": "Report Cover Page\n  \n  \n \n \n  \n  \n  نقشه سرمایه نیروی انسانی حوزه اقتصاد دیجیتال و تدوین بسته سیاستی برای جذب و نگه‌داشت در استان تهران\n  \n  \n  گزارش فاز دوم: شناسایی و تحلیل اهداف و انگیزه‌های نیروی انسانی موجود در بخش اقتصاد دیجیتال\n  \n  \n  ۱۴۰۴/۲/۳۱"
  }
]